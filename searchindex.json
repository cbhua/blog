{"categories":[{"title":"Dairy","uri":"https://timegg.top/categories/dairy/"},{"title":"Essay","uri":"https://timegg.top/categories/essay/"},{"title":"Lecture","uri":"https://timegg.top/categories/lecture/"},{"title":"Read","uri":"https://timegg.top/categories/read/"},{"title":"Tutorial","uri":"https://timegg.top/categories/tutorial/"}],"posts":[{"content":"这里是网站的更新报告。\n2020/04/15 网站基于 Hugo 重建，托管于 Github。重建后网站结构如下：\n Home：主页，7篇为一组展示所有文章； Archives：按照时间线顺序展示所有文章名称； Categories：按照特定分类展示文章，分类种类及含义如下：  Dairy：针对有时效性或特定时期的事件进行描述或评论的文章； Essay：表达个人各类感受的文章； Lecture：学科相关的各类文章； Read：关于一些书的介绍或感受； Travel：游记； Tutorial：针对不同需求所写的一些教程文章；   Tags：按照特定领域展示文章，设定 Tag 原则为该文章涉及哪些领域的知识； About：网站简介；  网站变化主要有：\n 原网站 Travel, Bookshelf, Store 板块将会以文章形式展示； 网站评论系统暂时没有比较好的解决方案，对网站内容有修改意见推荐直接邮件联系； 由于是静态网站，一些资源无法直接进行分享；  网站会继续一步步变好，也会有更多内容。\n2020/03/05 网站二周年站庆；\n做出决定，准备将网站变回静态网站。原因复杂且充分；\n2019/12/15 分析目前游客情况、服务器运行情况，决定将服务器连接质量与连接速度视为首要保持目标，资源共享板块制作放缓；\n资源共享板块涉及版权(主要)、带宽、稳定性、网站定位等多种问题的考虑，目前仍在考虑和筹措中；\n2019/11/05 在网站服务器上创建私人同步云盘，支持外部连接，方便各类资源共享：\n 允许下载除 pdf 格式外的多种安全格式，如 epub (书籍分享)、mp4 (视频原片分享)、bt (大型资源分享)； 目前尚未针对单个 IP 设定下载限制，未来根据带宽、流量、云空间考虑，若有限制则另行设定； 由于网站服务器空间有限，目前暂不开放用户上传功能，未来根据服务器迁移和云空间拓展考虑。  新增 Store 页面，用于共享一些资源。\n2019/09/15 网站重建：\n遗失文章不再恢复；同时早期的一些文章会选择性的保留； 重命名 Kurakun\u0026rsquo;s Gallery 为 Travel，用以存放我在各处旅游的一些照片; 重命名 Nozomi\u0026rsquo;s Bookshelf 为 Bookshelf; Remove Register System，不过本来网站的注册系统就形同虚设; 学习生活繁忙，这学期可能只有少量更新；  2019/07/18 网站服务器出现不可逆状况，网站数据大量丢失（100% 网站框架、70% Posts）；\n网站不再可以连接；\n确认丢失数据无法复原；\n网站停止更新，我们有缘再见；\n2019/03/05 网站一周年站庆；\n原网站所有文章迁移完成；\n迁移后网站各种功能通过测试，网站正式重新开放；\n2019/03/02 不再使用 www.huachuanbo.top 域名，网站域名更改为 www.timegg.top，原 Timegg 项目不再可用；\n不再使用 GitHub 托管网站，网站迁移至独立服务器重建，带来的影响有：\n 网站所有元素均有本服务器提供，避免不稳定、速度慢等各种问题； 网站评论系统为本地评论系统，撰写适用于本网站的隐私条例； 网站功能扩充，包括但不限于 PDF 阅读、资源本地化、下载连接本地提供； 网站浏览数据不再向 Google Analysis、Baidu Analysis 公开； 网站不加入 Google 搜索引擎、Baidu 搜索引擎；  2019/02/19 更换第三方评论系统平台：Gitalk 更换为 LiveRe 评论系统，欢迎使用；\n开放 RSS 订阅，订阅链接：huachuanbo.top/feed.xml；\n网站加入 HTTPS 协议，保护用户信息安全；\n网站加入网易云音乐插件，可以在 Post 或者网站各处添加网易云音乐模块；(音乐外链部分有 bug，修复中)\n更换网站封面图；Pixiv 画师：コーラ；\n2019/02/13 Blog 加入 CC BY-NC-SA 4.0 创作协议，详情 Ref Wiki-Creative Commons license；\n重新修改了 Code 部分的 CSS，支持 Matlab、C++、Python、Java、PHP 等多种常用语言；\n使用 MathJax© 优化数学公式部分，支持 LaTeX、MathML、 AsciiMath 等多种常用公式编辑方式；\n2018/08/13 本学期准备 IELTS 与竞赛，任务较重，除 Posts 更新外未维护网站；\n微调 Code 部分 CSS，美化代码块；\n测试 Google Fonts 整体效果，美化、整理 Blog 字体；\n将 Blog 中的一些图片推至图床，一定程度提升大陆地区访问速度，但稳定性较差，可能偶有无法加载的情况。下一步准备建立自己的云盘以提供图床功能；\n2018/07/26 加入搜索功能，使用方法：在站内任何位置双击 Ctrl 即可调出搜索栏；\n完成 Google Search Console 认证，网站加入 Google 搜索，可在 Google 中搜索 huachuanbo 找到网站；\n加入 百度统计 与 Google Analysis，开始统计网站数据；\n2018/07/22 加入板块 Nozomi\u0026rsquo;s Bookcase，用来存放一些书的读后感；\n加入板块 Kurakun\u0026rsquo;s Gallery，用来存放平时的绘画作品；\n2018/07/13 Fix Posts，正式开始添加文章；\n2018/07/06 修改网站信息，完善网站设置；\n配置域名 www.huachuanbo.top，网站可以正式以该域名连接；\n加入评论系统 Gitalk；\n2018/07/05 期末考试结束，创建 Github 仓库，导入框架，建立主页面、About、Tags；\nFix CNAME，网站可以正式连接；\nFix READEME，完成网站简介，正式开始使用；\n2018/05/03 正式注册域名 www.huachuanbo.top;\n2018/03/05 个人网站企划正式启动；\n","id":0,"section":"post","summary":"这里是网站的更新报告。 2020/04/15 网站基于 Hugo 重建，托管于 Github。重建后网站结构如下： Home：主页，7篇为一组展示所有文章； Archives：按","tags":null,"title":"更新报告 Update Reports","uri":"https://timegg.top/post/2020-04-15-%E6%9B%B4%E6%96%B0%E6%8A%A5%E5%91%8A/","year":"2020"},{"content":"KDD 2019 有不少 RS 的文章是围绕 Ratings and Reviews Information 进行的，这两种内容慢慢加入 RS 的考虑当中，以获得更好的稳定性和动态性能。依然有少数的文章在讨论 RS 的鲁棒性。\n更多的 RS 开始使用深度模型，比如 Deep Q-learning 或者 DNN 之类，以获得更好的随时间增加的准确性。也有文章讨论冷启动的问题，不过还是少部分。\n大多数 RS 的文章集中解决在一个特定环境下的 Recommendation 问题，比如道路推荐或者是购物推荐，考虑多种多样的现实情况，其中 Rating 情况被考虑的比较多，较多相关文章都讨论到了 TOP Rating 方法和 List-wise Rating 的方法差距，这个内容在下面的 Reviewing 中也有体现。\n总之，仅在 RS 方面进行的讨论还是相对集中，其中解决的问题也有一定的共通性，想要了解更多情况可以阅读文章或者浏览下方的 Review。\n这里的 Review 遵循着这样的结构进行书写：\n 每篇文章会有首页进行文章信息的描述，方便读者找到相应的原文； 紧接着文章信息描述页，会有一段文字概括 Abstract，便于大致了解文章工作内容； 介绍文章方法背景； 介绍文章方法具体的模型结构； 介绍文章进行的试验和实验结果，以了解文章提出的模型性能。  详细内容请参考 PDF，对其有任何问题欢迎指出。\n","id":1,"section":"post","summary":"KDD 2019 有不少 RS 的文章是围绕 Ratings and Reviews Information 进行的，这两种内容慢慢加入 RS 的考虑当中，以获得更好的稳定性和动态性能。依然有少数的文章在讨论 RS 的鲁棒性。 更多","tags":["Research"],"title":"2019 KDD Recommendation System Review","uri":"https://timegg.top/post/2020-03-10-kdd2019/","year":"2020"},{"content":"《四叠半神话大系》的主题与《春宵苦短，少女前进吧》接近，但是又非常不同。就表达形式上，两部作品都是基于“我”的大学生活，以大学校园为舞台；就表达内容上，《四叠半》着重于大学的生活，《春宵苦短》着重在感情上进行描述。两部作品各有亮点，都是我在推荐森见作品时首选的。\n相对于“让人想要为之祝福”的《春宵苦短》的故事，《四叠半》的故事更能给我带来共鸣。在我不断抱怨大学生活的荒渡、抱怨自己做了错误的选择、抱怨从来没有想象中美好的大学生活发生在我身上的时候，充实、令人羡慕、至少是令未来的自己羡慕、一生一次的大学时光从身边流过。没有完美的选择，即使回到过去重来的方法，我无论如何都注定会度过一个“失败”的大学时间。但是站在这段时间之外，我发现过去的每一天都是充实的，我做过很多”青春洋溢“的事情：好朋友的欢闹、奔走于陌生城市的激动、成就达成感动的瞬间，欢乐、懊悔、朋友、家人都在这段时间陪着我。不论我做了什么，这都是令人羡慕的四年。\n站在毕业前的节点上，与身边好友同在的时间可以进入倒数。珍惜而不后悔，一起度过最后的一段时间。\n2020.03 Update - 由于疫情，大学最后一段时间并不能和同学一起过了。\n《四叠半神话大系》也是森见为数不多的被改编为动漫的作品。其动漫改编质量堪称业界典范之一，具有非常优秀的表达力。\n当然，文字与影像各有表达的特长，下面是从原作中摘取的一些段落，如同我在《春宵苦短读书笔记》中做所，或许读者可以从中略有一窥这部作品。\n  大概会有人说：反正你还年轻，人生有无限可能。\n天底下没有那种蠢事，不可以惯坏年轻人。\n 接招吧年轻人，认清事实。不过关于这件事情，信不信姑且由自己。对这句话看法的分歧倒是和作品想要表达的主题有所相似：你要是相信年轻人有无限可能，这样当然可以，或许你会因此开始一个奋斗的生活；天底下没有那种蠢事，或许是，年轻人要认清现实，然后宅起来吧。\n  “因为一个人切开大蜂蜜蛋糕吃，未免太孤单了。我希望你深切感受到不甘寂寞的滋味。”\n“原来是那么回事啊。嗯，我会细细品尝、尝到腻为止。”\n 我也很不甘寂寞，但是我没有大蜂蜜蛋糕来细细品尝到腻为止。（说来，山崎的蜂蜜蛋糕块挺好吃的。）\n  常言道，光阴似箭。但像这样的季节不断更迭，却令人十分恼火。我不晓得打从盘古开天至今，过了多久的岁月，但从目前的情形来看，横竖没过多少。人在那么短暂的时间内如此大量繁殖，令我十分惊讶。而且众人每天费尽心思地汲汲营营。人这种生物实在是很勤奋。了不起！所以我说我觉得人不可爱——是骗人的。可是就算再可爱，我也没有闲工夫怜悯那么多人。\n 人类确实是”横竖“没过过多少。这个表达真有意思。人类这种生物也确实是很勤奋，了不起！\n所以我也。\n  小津狞笑，表情变得越来越像妖怪。\n“我积极地接受自己出生在无法过充实学生生活的星球这个事实。尽情享受浪费生命的的学生生活。所以你没有理由对我说三道四。”\n我叹了一口气。\n“因为你过这种那种生活，我才会变成这样。”\n“每天浪费生命，不是很快乐吗？你有什么不满。”\n 大家也一起积极地接受自己无法过出充实生活的事实、尽情的享受浪费时间吧！我们是在充实地浪费时间。\n我就是烂.jpg\n  又不是为了炙烈的爱情而心焦，而是因为刹那的寂寞而向陌生人寻求慰藉，这违反我的信念。混账学生们像这样耐不住孤独而贪得无厌地向他人寻求慰藉，我会不会是这样因为瞧不起他们、才会以“恋爱绊脚石”这个极度接近污名的威名、扬名天下呢？我会不会是为了毫无意义的苦斗而废寝忘食，最后获得极度接近败北的胜利呢？\n 这段辩论和《春宵苦短》最后一部分”我“脑内法庭的辩论挺类似的，”所有的现充都是耐不住孤独而寻求慰藉的人呢，我看不起他们“，不错的陈述。\n我也是只会偶尔产生寻求慰藉的想法呢，所以我也是坚持到了今天。再坚持下去，我是不是也是极度接近败北的胜利者呢？\n  “不可以毫无限制的使用可能性这个字眼。限制我们的，不是我们拥有的可能性，而是我们拥有的不可能性。”师傅说：“你能变成兔女郎吗？你能变成飞行员吗？你能变成木工吗？你能变成纵横七大海洋的海贼吗？你能变成以卢浮宫的馆藏品为下手目标的世纪大盗吗？你能变成超级计算机的开发者吗？\n“没办法。”\n学长点点头，难得地敬我一根雪茄。我感恩的接受，但为了点燃雪茄，我费了一番功夫。\n“我们大部分的烦恼，是来自于梦想另一种有可能的人生。把希望寄托于自己的可能性这种不能指望的东西、正是万恶之源。你必须认同无法变成其他人的自己。你不可能能够享受所谓的瑰丽的学生生活。我向你保证，所以你要沉着以对！”\n“这种说法真过分”\n“要采取毅然决然的态度、向小津看齐！”\n“恕我拒绝。”\n“哎，别那么说。你看看小津。那家伙确实是个笨到家的傻瓜，但是很有定性。比起没有定性的秀才，有定性的傻瓜到最后往往过着充实的生活。”\n 这段话可以说是整部作品中最核心的一段话了，我有无数种想象中的可能的人生，不断懊悔做错了什么、错过了什么、忘记了什么，在这样的状态下讨厌现在的生活、寻找变成”自己“的方法。但是实际上，确实很过分，我也是不可能享受到瑰丽学生生活的人。不过要沉着应对、做一个傻瓜充实过日子还是有一点点难度。看来我的”傻瓜之气“尚未成气候。加油吧。\n  原来贺茂大桥的决斗是指：用剪刀石头布决定下一代代理人的先攻后攻。\n 是世纪大战呢！（指铺垫了将近半本书）\n  前年秋天从“福猫饭店”金盆洗手之后、我把自己关在四叠半宿舍这座城堡半年。于是，我觉得自己是个耐得住寂寞的人，但这只能说是肤浅的想法。我从前并不孤独。相较于如今的我，当时的我一点都不孤独。等于是在孤独的大海海岸边，只把脚尖沾湿，不顾周遭的眼光，大喊“我好孤独！”的早熟婴儿。\n ”我好孤独！“，我背着身边诸多随叫随到的好朋友、悉心照顾的老爸老妈、各处关心自己的人如此地喊道。\n在交换生宿舍三天没有说一句话之后，我觉得那时我就是个小孩子。\n  简单来说，若是坦白写，如同各位的猜想，我喜欢上她了。\n ”我“认清”四叠半“世界真相之后，终于承认了一直不承认的、毫无争议的事情。曾经在犹豫和胆怯间不断错过了无数次，这次终于要认清哪个才是属于自己的世界了，或者说是自己的世界只能是自己的世界，所以不放期望于想象中的世界，开始自己追求想要的结果了。\n  虽然已经觉得那种事情不可能，然而，假如能够离开这里的话，我想做很多事情。\n吃美味的饭、吃“猫拉面”。出门去四条河原町看电影。和峨眉书房那个长得象章鱼的老板吵一架。可以出门去大学上课。可以到下鸭神社内跳舞献给供奉的神明贺茂建角身神。也可以去二楼的樋口学长的宿舍，沉溺于黄色笑话。出门去洼冢牙科诊所检查，舔羽贯小姐的芊芊玉指应该也很愉快。去向如今被组织开出的可怜的相岛学长打招呼也无妨。大家都在做什么呢？快乐的活在热闹的世界里吗？城崎学长和香织小姐过得幸福吗？小津依然以他人的不幸为配菜吃三碗饭吗？明石看着少了一只的“软绵绵小队麻薯战士”不知所措吗？或者在某个意想不到的地方见到了缺少的那一只呢？我想确认这个事。\n然而，那种事我已经办不到了。\n 毕业之后如果什么时候我回想起来大学生活了，我应该也会写下一段类似的话。身边的很多事，忘掉的事，无关紧要的事，重复到烦的事，都是充实到值得回忆的事情。大家都在做什么呢？\n  我和明石之间的关系在那之后有何进展脱离了本书的主题。因此，我就不值一书写那些令人开心又害臊的妙趣。各位读者大概也不想看那种令人唾弃的内容，把宝贵的时间丢进臭水沟吧。没有比有情人终成眷属的爱情更不值一提的了。\n 现充爆炸吧。没有比情人终成眷属的爱情更不值得一提的了。\n  如今，虽说我的学生生活中多少出现了新的发展，但若有人觉得我会天真烂漫的肯定过去，我会深表遗憾。我不是会那么轻易肯定过去的错误的单纯男人。\n\u0026hellip;\n因此，我不会抱紧过去的自己，也不会肯定过去的错误，但好歹愿意不加追究。\n 不管过去的东西有没有错，现在该做的事情都在眼前堆着，堆得很高。但愿我们都愿意不去追究过去的事情。\n","id":2,"section":"post","summary":"《四叠半神话大系》的主题与《春宵苦短，少女前进吧》接近，但是又非常不同。就表达形式上，两部作品都是基于“我”的大学生活，以大学校园为舞台；就","tags":["Novel"],"title":"森见登美彦作品《四叠半神话大系》","uri":"https://timegg.top/post/2019-11-28-%E5%9B%9B%E5%8F%A0%E5%8D%8A/","year":"2019"},{"content":" 森见登美彦是一个“不正经的天才”。\n 至今为止，我几乎通读了他的全部作品，沉迷于他所描绘的吸引人的奇幻京都：鲤鱼、宵山、天狗、狸猫、鸭川、电气白兰、睿山电车、八百神明、四叠半的公寓\u0026hellip;。一直没有时间和精力去写一篇关于森见登美彦各个作品的感悟总结。今天终于下定决心写下一点东西，作为开头。\n在森见登美彦各个作品中，有许多我非常喜欢的句子或段落。想要好好地体验森见登美彦的行文风格，就要读一读原文，感受感受京都宅男各种奇妙而有趣的描述和比喻。所以我将翻译版的原文摘录至此。同时适当地，在不影响大家体会这些文字的情况下，我会写一些感受。所以文章整体上的结构就是总评和摘句。\n如果有其他的朋友同样喜欢森见登美彦的作品，并且可以通过看到这篇文章和我分享一些观点，那么这篇文章也就“人要知耻，然后去死”了。\n森见登美彦的一些作品被改编成了动漫，汤浅政明监督的能力非常优秀，在动漫化的过程中对原作进行了大量的改编而不失原作风格，不过也因此动漫作品和原作在内容上有不小的差距，我觉的相对于直接接触到森见的书，从动漫作品开始了解森见登美彦的人反而会比较多一些，所以在这里我会提到一些动漫化作品中改编的、或者是迫于篇幅需要省略的点。通过两方面的对比可以更好的了解森见的作品。\n《春晓苦短，少女前进吧》 关于本作作品名的翻译，我认为是很信达雅的。\n原作名：夜は短し歩けよ乙女，可以直译为“夜晚短暂，向前迈进吧少女”。在中文的翻译中，选用了“春宵”一词，该词出自苏轼的一篇诗作《春宵》。“春宵”本意即为“春夜”，在这里亦可喻可贵的欢乐时光。用在这篇作品的标题中达到了双关的效果：如果是已经读过这篇作品的朋友，应该会对春季夜晚中李白先生对少女说的这句话有所印象。将其翻译为“春宵”，既指的是在春季夜晚发生了这么多的事情，也喻指了这一晚美好的时间。\n这篇作品从“我”和少女两个角度描述了春季的一个夜晚、夏季旧书集市、秋季学园祭和冬季感冒神其中的各种故事。这篇文章的主线是两个人故事的交织：“我”在各个季节的事件中追随着少女，在此过程中发生了一系列有着各种关系和交织的故事。\n这里就不得不提到这部小说改编成的同名动漫剧场版，在剧场版中，所有的故事不再是分开在春、夏、秋、冬四个季节的夜晚上进行，而是发生在一个漫长的夜晚，少女不断前往不同故事发生的地点，并且所有的故事都进行了细节上的修改，让其可以串联在一起。\n这点是我对于汤浅监督最为佩服的一点。剧场版中的一些伏笔，比如在与李白的斗酒大会之后，羽贯小姐在岸边坐的时候觉得非常的冷，在之后的学园祭开始发热，这点改编让之后羽贯小姐得感冒这件事情贯穿了原作中分别发生在春、夏、秋三个季节的剧情串联了起来，放到了一个夜晚，也让之后京都感冒神出没显得没有那么突兀。这样的剧情大框架的改编也符合了原作的标题：春宵苦短，少女前进吧！\n森见登美彦的作品往往都是通过结尾将前面的全部内容串连起来，让人得以了解故事的全貌、了解其中想表达的一些东西。所以在读他的作品时，偶尔会觉得前边的东西并不连贯，甚至没有关联。但是在读到最后一部分的时候，所有事情都可以神奇的联系起来，这样的结局带来的感觉是震撼的。\n这种感受与阅读各种推理小说的感受并不相同，在阅读后者的过程中，我们往往专注于寻找通往一个真相的线索。而在森见的作品中，我们只是在不同的段落中，体验在那个段落丰富的故事，在了解到这些故事之间的关系时，会感觉到真实有趣，就像所有的事情之间都有着无限的红线与黑线的连接。\n这篇作品想表达的内容有许多，比如“我”对大学生活的看法和反思，“我”和少女关系的辩论、对新事物的态度和看法等等。\n有一个让我感触很深的一点：作品强调了人与人之间的联系。通过这四个季节的各种事件，几乎所有人都被串联了起来，这点在冬季感冒神事件中最有体现。我觉得原作中的这段话最能体现出这一点：\n “从东堂先生身上踏上旅程的感冒之神找上奈绪子小姐夫妻，从他们夫妻再找上赤川社长，再从赤川社长到内田医生和羽贯小姐——。而同时，它又藉由东堂先生找到闺房调查团的团员，找到峨眉书房老板，找到京料理铺千岁屋的老板，找到闺房调查团青年部众人，然后找到学园祭事务局长——。学园祭事务局长把感冒传给内裤大头目和纪子学姊，传给来探病的京福电铁研究会、电影社“御衣木”、诡辩社等众多相关人士。这多达数十人的相关人士，再将感冒各自传给他们的亲友，片刻间便蔓延到整所大学。几千名学生得了感冒，病毒又在他们出入的打工之处、玩乐场所散播开来，然后传遍整个京都——”\n 最初读到这里的时候觉得非常有趣，所有的人物都曾经在春季夜行、夏季旧书集市、秋季学园祭的各种事件中担任了一份角色，大家也因此产生了相互的联系，以至于一年过去了，这些事件里面的参与者都被关联了起来。\n如果想要体验这种感受，自然是要亲自读一读这本书，大致是会被有趣的故事所吸引的。森见的书更吸引人的是故事中许多的细节描写，大量的细节描绘出了“不正经的天才”脑中吸引人的京都。\n下面是我在阅读作品中找到的有趣的句子或者段落，虽然很难通过几个句子窥见作品全貌，不过更重要的当然是体会一下森见各种有趣的描述：奇幻奇妙的京都世界。\n  “出生在这世界上之前，我们都是尘土，死了之后又回归尘土。比起当一个人，我们当尘土的时间久的多。那么，死才应该是一般的情形，而活着只不过是罕见的例外。既然如此，死有什么好怕的。”\n 这个是前诡辩社成员在为社长庆祝60大寿时候的“诡辩”发言。诡辩社在森见的其他作品也出现过，经常能带来很多有趣的发言和观点。这段“诡辩”出乎意料地含有一些哲理，不愧是老一辈的诡辩社成员。\n动漫版在表现这段内容的时候，加入了“手表”的设定：老人们手上都有一块手表，而这些手表都是以月、年为单位，指针飞快地走着，与此同时，少女手上的手表却是以秒为单位，一格一格跳动着。好像在说老人们不再像青春时期一样，一分一秒都是宝贵、富有意义、有价值的时间。\n  “将热闹欢乐由一家店带往另一家店，我们像是夜行的奇幻诡谲马戏团，又像是自行举办了一场小型祇园祭。”\n 一段话把少女从宴会走到宴会的过程描述得很有感觉，电影中也有很好的表现这一段内容。\n  “少女要懂得含蓄，我必须在天亮之前就寝。”\n 这是女主在结束春季酒会夜晚的宣告。动漫版将其改为“寻找绘本”，紧接着开始了夏季旧书集市的故事。\n  “自己是怎么踏上这段夜晚的旅程，这一刻我已经想不起来了。总之真是一个有趣至极、获益良多的夜晚。或许只是我自以为获益良多也不一定，但这一点都不重要。渺小如鸡豆的我，唯有举步向前，继续朝美丽而和谐的人生迈进。”\n 这点观点在森见登美彦的很多作品中都有表述，尤其是《四叠半神话大系》。森见总是表达给大家一种观点，不要过于计较做一件事要得到什么、是不是有一定的意义\u0026hellip; 这些东西一点都不重要，尽管去做，有趣就可以了。\n  “我的浪漫引擎狂奔疾走，阻无可阻，挡无可挡，终于，我因为太过难为情而鼻血狂喷。\n人要知耻，然后去死。\n然而，我已无心倾听内在的知书达理制胜。\n原因无他，谁教在堕落至极的现今大学之中，遇事知耻、行走坐卧守礼守分而得善报者，一人也无。”\n “我”在这里描述的“遇事知耻、行走坐卧守礼守分”都是给自己没有胆量、沉迷于“填护城河”找的说法：自己没有勇气去向少女表明想法，却用沦为大众大学生的事情是耻这样的观点教导自己守礼守份。在这里就是自己的感情战胜了“填护城河”的那种心情：无心倾听所谓的知书达理，然后去主动追求想要的感情。\n  “喊忙的人最闲了，因为对自己闲着有着罪恶感，才会到处说自己忙。再说，真正忙的人根本不可能出现在旧书集市乱晃。”\n 在生活中，有好多真正忙的人，也大多是很优秀的人，把几乎所有的时间都投放在了钻研的领域，没有空闲去宣传自己，在各个方向默默的努力和贡献。有种人际关系“幸存者偏差”的感觉。\n  “我当知无不言、言无不尽，就是学园祭事务局的人。他们视以兴风作浪为生存意义的学生为公敌，是只愿一切风平浪静的无事主义者。他们为了让学园祭平安落幕，将学园祭恐怖分子乖僻王监禁在某处。”\n “以兴风作浪为生存意义的学生”这个描述太有意思了。\n  “据说一个身负绯鲤的娇小女生，闯进诡辩社主办的“米饭原理主义者 VS 面包联合组织”的讨论会，主张“吃饼干不就好了！”，在现场投下一颗震撼弹。”\n 下面还有一段关于诡辨社的内容，让人有一种感觉，诡辩社的成员都“傻乎乎”地对一些奇怪的问题或者是完全无关紧要的问题进行着激烈的辩论，而他们也乐在其中，特别有趣。倒是针对米饭还是面包的问题确实可以争论上个几天几夜的。姑且在此命下辩题：我是“高贵”的面包联合组织成员，有谁愿意与我争辩。\n  “学长热情的演出真的非常精彩，学长很会演戏吗？\n没有，我不擅长演戏。\n不过，真是奇遇，我经常遇到学长呢。这才叫做神明的方便主义吧。‘\n是啊。\n学长凝望着熊熊火焰说：神明和我们，全部都是方便主义者啊。”\n 当我看到作品的最后我才理解到这里“方便主义”的含义，“方便主义”在某种意义上就是缘分啊，不论是令人心动的巧合，还是竭尽全力去创建的这样的机会，在这些过程中总是充满着各种各样意料之外的事情，而就是在这样的意外中触发契机、人与人产生关联，有时候就会让人觉得“神明让我们产生关联、产生的太随意、太方便了一点吧”。\n不过，缘分也是努力争取到的，“方便主义”的“方便”也不都是免费得来的。“我”做过如此多的努力，从学园祭的开始追逐少女到结尾，在学员事务长那里查询过少女资料、在韦陀天暖桌上询问过少女去向、挨着学园祭摊贩寻找着少女经过的痕迹\u0026hellip; 这些努力都凑成了“方便主义”的一部分，把“我”推到了乖僻王最后一幕的舞台。\n  “无法动弹地凝视着被窝里的黑暗，我勇敢面对一个根本性的大问题。与她相遇超过半年，我只有填平护城河的机能特别进化，脱离了恋爱的正轨，沦落为“永久护城河填平机”，原因出在哪里?这个问题有两个可能的答案。一是，我不敢明白确认她的心意，是个令人唾弃鄙夷的孬种。但这攸关我的面子，所以先予以否定。那么，就只剩下另一个答案――其实我并没有爱上她。\n世上存在一种恶质的偏见，认为上了大学就会交到女（男）朋友。但是事情其实是相反的。是笨学生受到“上了大学就会交到女（男）朋友”这偏见鼓动，盲目奔走以保全自己的面子，导致了每个人都有女（男）朋友的怪现象，更助长了偏见。”\n 我认为这段话实际上就是解释了之前“人要知耻，然后去死。”的背后原因：把原本属于“自己不主动”的责任推给了“世上恶质的偏见”，甚至排除来排除去，最后居然得到了“其实我并没有爱上她”这样的结论。这段辩论算是对“我”不敢主动的性格一阵见血的描述。\n  “我利用她的存在，填补自己内心的空虚。这种软弱的心机便是一切错误所在。做人要知耻，我应该向她下跪道歉。”\n“在身体虚弱时思考，想的没有半件好事。\n入学以来只降不升、今后也没有进步指望的学业成绩。高喊着考研究所这个逃避的藉口，将就职活动往后延。没有灵巧的心思，没有卓越的才能、没有存款、没有力气、没有毅力、没有领导能力、也不是那种小猪仔般可爱得令人想用脸颊磨赠的男子。“什么都没有”到了这个地步，是无法在社会上求生存的。\n我一心急，竟爬出万年铺盖，啪啪啪地以手心到处拍打四叠半大的房间，看看会不会从哪里滚出一些宝贵的才能来。”\n 我也想拍拍我的房间，看看哪里会不会滚出来一些可贵的才能来。\n  “回想起上大学以来的岁月，难道不是对所有的一切思虑重重，想方设法于拖延早该踏出的第一步，徒然虚度了吗?即使是在她这座城塞的护城河打转，徒然让自己愈来愈疲惫的此际，状况也毫无改变。因为我内心多数的声音总会召开会议，阻止一切决定性的行动。”\n 在对自己的不断反思中，“我”终于点破了自己的问题，直面“我”拖延、不敢踏出一步的心理，当我看到原作这里时着实感动。\n  “天狗樋口氏的传授含糊得不能再含糊。他进了旧书店的朋友家，擅自来到晾衣台，指着天空对我说：“只要活得不脚踏实地，就能飞了。””\n 我活得也不脚踏实地，请问我可以飞吗？\n  “李白先生的康复庆祝会是下午六点在纠之森举行，我和她约好下午四点喝咖啡。为了不迟到，我必须在下午两点离开宿舍。因此，我必须在早上七点起床。因为衣服洗好晾干要几个小时，淋浴吹头发要一个小时，刷牙要五分钟，整理头发要半小时，然后预演与她的对话要数小时，忙得要命。”\n 初次约会的紧张描述的淋漓尽致。\n值得一提的是，剧场版中将李白先生的康复会给省略掉了，这点很值得思考。在整个剧场版中，李白先生的形象并不算很好，甚至被认为就是一位“反派”。\n如果你也曾经读过《有顶天家族》，就可能会体会到这样一种感觉：在森见登美彦描述的世界中，没有什么正派、反派之说，大家都是“傻乎乎”的样子，有趣至上、真切地体会着生活，或许今天我们依然是仇人，但是明天就可以一起喝酒、甚至还爱上了对方；互相做过的很多看似会立下“血海深仇”的事情，过了一夜好像都没怎么发生。各种各样奇妙的故事就发生在这群冒着“傻气”但又有趣的人们中间。\n本作中的李白也是这样。李白在原作中给我留下的印象是很不错的，在春季斗酒之后，李白快乐的邀请所有人喝伪电气白兰，并一起举办聚会；在旧书市场的拍卖会上，也没有剧场版中描述的很“坏”的感觉。作品只是从东堂这里提到了李白先生是放高利贷的，但是之后就再也没有提到过这方面的内容，使得在原作中，整体上李白先生确实是一个慈祥而有个性的老人。在经过一年的时间后，大家都互相有了联系，李白先生也邀请大家庆祝康复，各方面上都给人一种十分和谐温馨的感觉。另外与剧场版不同的是，李白在春季斗酒后给少女说的“春宵苦短，少女前进吧！”这句话。\n  “我一边准备出门，一边想要和学长说什么。\n我有好多事想问学长――学长在那个春天的先斗町度过了什么样的夜晚?在夏天的旧书市集吃的火锅又是什么味道?而秋天的学园祭里，为了演出乖僻王冒了什么样的险?在我不知道的时候，学长都是怎么度过的?我想知道得不得了。”\n“一心思忖着该说些什么。绞尽脑汁之后，我想到一个好主意。\n我有很多事想问她――她在那个春天的先斗町度过了什么样的夜晚?还有，在夏天的旧书市集里看了什么样的书？而在秋天的学园祭里，又怎么会担起那场大戏的主角？若她肯谈这些，我也能聊聊我的回忆。”\n 我认为这两段话是这部作品的点睛之笔。“我”与少女在一年的时光中、在四季的各种事件中分别经历了极为丰富而有趣的故事，故事中的人物事物之间又有着有趣的关联，在此之中“我”与少女多次错开、失去联系的机会，但又是在这个过程中，相互的关系也在不断的拉近着，最后，在一年经历后，“我们”终于享受了“神的方便主义”。\n回忆起这一年的时间，“我们”非常想知道这样的缘分背后，是多少有趣的故事交织着、人与人之间的关系又是怎样奇妙地关联起来的。在读原作时，读到这里真的是非常的感动，借用剧场版中的一句话去总结这样的感情：“相逢即是有缘。”\n最后，还是用原作中的最后一段话来结束。\n “在这值得纪念的一刻，我不再填平护城河，转而向更加困难的课题挑战。读者诸贤，还请见谅。期待他日再相逢。再会了，填平护城河的日子。\n最后，我要送各位一句话：尽人事，听天命。”\n ","id":3,"section":"post","summary":"森见登美彦是一个“不正经的天才”。 至今为止，我几乎通读了他的全部作品，沉迷于他所描绘的吸引人的奇幻京都：鲤鱼、宵山、天狗、狸猫、鸭川、电气白","tags":["Novel"],"title":"森见登美彦作品《春宵苦短，少女前进吧》","uri":"https://timegg.top/post/2019-10-10-%E6%98%A5%E5%AE%B5%E8%8B%A6%E7%9F%AD/","year":"2019"},{"content":"本学期专业课程中有信息论这一门课程，在此之前我学习神经网络的过程中了解了一些与信息论相关的内容，也很开心能开这门课。在这学期中有一些信息论的实验课需要完成一些任务，考虑到上学期学习数值分析没有及时记录所做内容，到后来补上去的各种困难，本次我打算完成一次实验之后及时记录实验内容，其中包含实验内容、遇到的问题和解决方案还有一些自己的想法。\n搜索引擎能搜索到的相关实现几乎都是使用 Matlab 实现的，很少有通过其他语言来做这些实验，正巧在寒假进行了机器学习的学习，当时使用 Python 比较多，所以在这期实验开始时我选择了用 Python 做这些实验。\n但是在真正实际操作中发现，这些问题用 Python 实现并不是非常的方便，主要还是在使用 Pandas 和 Numpy 这两个包，这样并不能体现出 Python 在解决这些实验问题上的优势，不如使用 Ruby 和 Matlab。不过，既然选择了这门语言做到底，就坚持做一下。\nTest 1 实验内容：对于任意给出的信源 $S=[X,p(x)]$ 计算信息熵 $H(x)$\n Input: 路径：各字母出现频率（含 Space），保存于 CSV 文件中 Output: 字母的信息熵  文件目录: information_theory_experiment_test1 |--- entropy_cal.py |--- letter_frequence.csv  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 1\u0026quot;\u0026quot;\u0026quot; import pandas as pd import math class Solution(object): def calInfoEntropy(self, path): \u0026quot;\u0026quot;\u0026quot; :type path: str \u0026quot;\u0026quot;\u0026quot; data = pd.read_csv(path) result = 0 for i in range(0, data.shape[0] - 1): num_tem = data.iat[i, 1] result += num_tem * math.log2(1 / num_tem) return result  Pandas 自带读取 CSV 文件功能，读取结果为矩阵，CSV 文件中第一行会被识别为列名。取数函数有多种：\n loc，基于列 label，可选取特定行（根据行 index） iloc，基于行/列的 position at，根据指定行 index 及列 label，快速定位 DataFrame 的元素 iat，与 at 类似，不同的是根据 position 来定位的 ix，为 loc 与 iloc 的混合体，既支持 label 也支持 position  这篇 Post 有较为详细的说明。\nTest 2 实验内容：对于给出的信源 $S=[X,p(s)]$ 和信道 $Q=(q(y_j|x_i))$ 计算噪音熵 $H(X|Y)$ 和互信息 $I(X;Y)$\n Input: 路径：各字母出现频率（含 Space），信道矩阵，分别保存于 CSV 文件中 Output: 字母的噪音熵和互信息  文件目录: information_theory_experiment_test2 |--- entropy_cal.py |--- letter_frequence.csv |--- communication_channel.csv  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 2\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import math conditional_entropy = 0 mutual_information = 0 # input data letter_fre_x = pd.read_csv('letter_frequency.csv') comm_channel = pd.read_csv('communication_channel.csv') joint_probability_distribution = np.zeros(shape=(27, 27)) # cal the conditional entropy for i in range(0, 26): for j in range(0, 26): if comm_channel.iat[i, j] != 0: joint_probability_distribution[i][j] = letter_fre_x.iat[j, 1] * comm_channel.iat[i, j] conditional_entropy -= \\ joint_probability_distribution[i][j] * math.log2(comm_channel.iat[i, j]) else: continue letter_fre_y = np.sum(joint_probability_distribution, axis=0) # cal the mutual information for i in range(0, 26): for j in range(0, 26): if comm_channel.iat[i, j] != 0: mutual_information += \\ joint_probability_distribution[i][j] * \\ math.log2(joint_probability_distribution[i][j] / (letter_fre_x.iat[j, 1] * letter_fre_y[j])) else: continue print('The conditional entropy is: ', conditional_entropy, ' bit') print('The mutual information is: ', mutual_information, 'bit')  在实现方面和 Test 1 没有什么太大的差距，主要在于信息论的算法上面。\nTest 3 实验内容：给出各英文字母的出现概率，构造 0, 1, 2 Huffman 编码，并将下述一句话进行 Huffman 编码\n The fundamental problem of communication is that of reproducing at one point either exactly or approximately a message selected at another point.\n  Input: 各字母出现频率（含 Space），欲 Huffman 编码的句子 Output: Huffman 编码结果（使用结果编码句子在这里暂时省略，Test 5 会提到）  文件目录: information_theory_experiment_test3 |--- huffman_coding.py |--- letter_frequence.csv |--- sentence.docx  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 3\u0026quot;\u0026quot;\u0026quot; import queue import pandas as pd class HuffmanNode(object): def __init__(self, left=None, right=None, root=None): self.left = left self.right = right def children(self): return((self.left, self.right)) letter_fre = pd.read_csv('letter_frequency.csv') def create_tree(frequencies): p = queue.PriorityQueue() for value in frequencies: p.put(value) while p.qsize() \u0026gt; 1: l, r = p.get(), p.get() node = HuffmanNode(l, r) p.put((l[0]+r[0], node)) return p.get() node = create_tree(letter_fre) def walk_tree(node, prefix=\u0026quot;\u0026quot;, code={}): \u0026quot;\u0026quot;\u0026quot; node 是一个tuple(freq, HuffmanNode|character) \u0026quot;\u0026quot;\u0026quot; if isinstance(node[1], HuffmanNode): code1 = walk_tree(node[1].left, '0', code.copy()) code2 = walk_tree(node[1].right, '1', code.copy()) if len(code1) \u0026gt; 0: for k, v in code1.items(): code[k] = prefix + v if len(code2) \u0026gt; 0: for k, v in code2.items(): code[k] = prefix + v else: code[node[1]] = prefix return(code) code = walk_tree(node) for i in sorted(freq, reverse=True): try: print(i[1], '{:6.2f}'.format(i[0]), code[i[1]]) except Exception as e: print(e) continue  Test 4 实验内容：对给出的信道转移矩阵 $Q=(q(y|x))$，应用迭代法计算信道容量 $C$\n高噪声打字机：设信道输入与输出字母集分别为 $X=Y={A, B, C, \u0026hellip; , Z, -}$，其中 $-$ 表示空格，这 27 个字符排成一圈，当输入某个字符时，输出以等概率 1/3 产生它本生及 相邻 2 个字符，例如：\n$$P(Y=A|X=B)=P(Y=B|X=B)=P(Y=C|X=B)=1/3$$\n Input: 各字母出现频率（含 Space），信道转移矩阵 Output: 信道容量  文件目录: information_theory_experiment_test4 |--- channel_capacity_cal.py |--- letter_frequence.csv |--- communication_channel.csv  首先，这里是我基于 Matlab 程序改进成的 Python 程序，是个错误示例，其原因在于 Matlab 中对矩阵操作转移到 Python 中 DataFrame 实现起来有点麻烦，DataFrame 多用于神经网络数据导入是非常方便的，具体分隔来处理有点麻烦。\n#!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 4 - Error Example\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import math def channel_capacity_cal(p, q, f, m): \u0026quot;\u0026quot;\u0026quot;the function to cal the channel capacity\u0026quot;\u0026quot;\u0026quot; tem_precision_x = p channel_cap1 = 0 channel_cap2 = 0 for i in range(1, m): sum = 0 row = q.shape[0] column = q.shape[1] rev_transfer_matrix = np.zeros(row, column) out_precision = np.zeros(1, column) tem_precision_y = np.zeros(1, row) for j in range(1, column): tem_sum = 0 for k in range(1, row): tem_sum += q(k, j) * tem_precision_x(k, 1) out_precision.at[1, i] = tem_sum for j in range(1, row): for k in range(1, column): rev_transfer_matrix.at[j, k] = q.iat[j, k] * tem_precision_x.iat[j, 1] / out_precision.at[1, k] for j in range(1, row): tem_sum = 0 for k in range(1, column): if rev_transfer_matrix.at[j, k] != 0: tem_sum += q.iat[j, k] * math.log2(rev_transfer_matrix.at[j, k]) tem_precision_y.at[0, j] = math.pow(2, tem_sum) sum += tem_precision_y.at[0, j] for j in range(1, row): tem_precision_y.at[0, j] /= sum channel_cap2 = math.log2(sum) print(channel_cap2) if abs(channel_cap1 - channel_cap2) \u0026lt; f: channel_cap1 = channel_cap2 tem_precision_x = tem_precision_y print(\u0026quot;the iterations times is: \u0026quot; + i) break else: channel_cap1 = channel_cap2 tem_precision_x = tem_precision_y print(tem_precision_x) return channel_cap1 letter_fre = pd.read_csv('letter_frequency.csv') channel_transition_probability = pd.read_csv('channel_transition_probability.csv') max_iterations = 100 precision = 0.001 channel_capacity_cal(letter_fre, channel_transition_probability, precision, max_iterations)  在参考了 BUPT Zhengyuan Zhu 的处理方法之后进行了改进，但是这里存在的比较大的问题是多次迭代的转移矩阵需要手动计算，可以在此方法之前再添加 math 的方法以实现转移矩阵的计算。\nimport numpy as np letter_fre = pd.read_csv('letter_frequency.csv') channel_transition_probability = pd.read_csv('channel_transition_probability.csv') precision = 0.001 def initiate_prob_distrib(p): p_x = np.transpose(np.ones((1, p.shape[0])) / p.shape[0]) print(\u0026quot;初始化概率分布为:\\n\u0026quot;, p_x) return p_x p_x = initiate_prob_distrib(channel_transition_probability) def iteration(p_i, p_ij, k): q_j = np.sum(p_i * p_ij, axis=0) print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: q_j:\\n\u0026quot;, q_j) alpha_i = np.exp(np.sum(p_ij * np.log(p_ij / q_j), axis=1)) alpha_i = np.expand_dims(alpha_i, axis=0) print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: alpha_i:\\n\u0026quot;, alpha_i) u = np.matmul(alpha_i, p_i)[0] print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: u:\\n\u0026quot;, u) I_L = np.log2(u)[0] print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: I_L:\\n\u0026quot;, I_L) I_U = np.log2(np.amax(alpha_i)) print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: I_U:\\n\u0026quot;, I_U) if I_U - I_L \u0026lt; precision: print(\u0026quot;capacity:\\n \u0026quot;, I_L) print(\u0026quot;input letter frequency:\\n \u0026quot;, p_i) return True, I_L, p_i else: p_i = p_i * np.transpose(alpha_i) / u[0] print(\u0026quot;No.\u0026quot; + str(k) + \u0026quot;Update Probability distributions:\\n\u0026quot;, p_i) return False, p_i flag, I_L, p_i = iteration(p_x, channel_transition_probability, 1) ans_dict = dict() for p in (channel_transition_probability1, channel_transition_probability2, channel_transition_probability3, channel_transition_probability4): flag = False p_x = initiate_prob_distrib(p) k = 1 while not flag: flag, ans, tmp_p = iteration(p_x, p, k) if not flag: p_x = tmp_p k = k + 1 else: ans_dict[ans] = tmp_p for k, v in ans_dict.items() : print(\u0026quot;capacity：\u0026quot;, k) print(\u0026quot;input letter frequency：\\n\u0026quot;, np.transpose(v)[0])  Test 5 实验内容：\n  基于 Test 3 的程序，修改为构造 0, 1 二元 Huffman 编码程序\n  使用上述二元 Huffman 编码程序为下一段文字进行编码\n The fundamental problem of communication is that of reproducing at one point either exactly or approximately a message selected at another point.\n   使用给定的生成矩阵，对上述编码结果进行信道编码（Hamming 编码）\n  任意修改一定量上述编码结果，之后对此修改之后的编码使用校验矩阵，进行信道译码（Hamming 译码）\n  Test 5 在整合前面的实验之后加入信道编码部分。\n文件目录: information_theory_experiment_test5 |--- run.py - 主程序 |--- huffman_coding.py - 实现 Huffman 编码 |--- hamming_coding.py - 实现 Hamming 编码 |--- hamming_decoding.py - 实现 Hamming 译码 |--- article.docx - 编码文字文档 |--- hamming_coding.csv - 生成矩阵 |--- hamming_decoding.csv - 校验矩阵 |--- letter_frequecny.csv - 字母频率  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test_5/run.py\u0026quot;\u0026quot;\u0026quot; import huffman_coding import hamming_coding import hamming_decoding huffman_coding_result = huffman_coding.huffman_coding() hamming_coding_result = hamming_coding.hamming_coding(huffman_coding_result) hamming_decoding.hamming_decoding(huffman_coding_result, hamming_coding_result)  #!/usr/bin/env python3 # -*- coding: utf-8 -*- # Copyright (c) 2019 - magic_kurakun \u0026lt;magickurakun@gmail.com\u0026gt; \u0026quot;\u0026quot;\u0026quot;Test_5/huffman_coding.py\u0026quot;\u0026quot;\u0026quot; import pandas as pd import docx def huffman_coding(letter_fre): letter_fre = pd.read_csv('letter_frequency.csv') file = docx.opendocx(\u0026quot;article.docx\u0026quot;) doc = docx.getdocumenttext(file) huffman_coding_result = \u0026quot;\u0026quot; length = 0 huffman = () for i in range(0, 26): tem = ('',) huffman += tem for loop in range(1, 12): flag = 26 - loop * 2 letter_fre.sort_values(by='probability') for i in range(97, 122): if letter_fre.iat[flag, 0] == chr(i): huffman[i - 96] += '0' if letter_fre.iat[flag + 1, 0] == chr(i): huffman[i - 96] += '1' if letter_fre.iat[flag + 2, 0] == chr(i): huffman[i - 96] += '2' if letter_fre.iat[flag, 0] == ' ': huffman[i - 96] += '0' if letter_fre.iat[flag + 1, 0] == ' ': huffman[i - 96] += '1' if letter_fre.iat[flag + 2, 0] == ' ': huffman[i - 96] += '2' sum_tem = 0 for i in range(flag, flag + 2): sum_tem += float(letter_fre.iat[i, 1]) letter_fre.iat[i, 1] = str(-1) letter_fre.iat[flag, 1] = str(sum_tem) print('The huffman code of such letters are as follow: ') for i in range(0, 26): length += huffman[i].length() print(huffman[i]) print('The average length of huffman code is: ') print(length / 27) print('The sentence was translated to huffman code as follow: ') for i in range(0, len(doc) - 1): flag = 0 for j in range(97, 122): if doc[i] == chr(j): print(huffman[j - 96]) flag = 1 if flag == 0: print(huffman[0]) for i in range(0, len(doc)): tem = ord(doc[i]) if tem == 32: huffman_coding_result += huffman[0] elif tem \u0026gt;= 65 \u0026amp; tem \u0026lt;= 90: huffman_coding_result += huffman[tem - 64] elif tem \u0026gt;= 97 \u0026amp; tem \u0026lt;= 122: huffman_coding_result += huffman[tem - 96] print(\u0026quot;The result of huffman coding: \u0026quot; + huffman_coding_result) return huffman_coding_result  #!/usr/bin/env python3 # -*- coding: utf-8 -*- # Copyright (c) 2019 - magic_kurakun \u0026lt;magickurakun@gmail.com\u0026gt; \u0026quot;\u0026quot;\u0026quot;Test_5/hamming_coding.py\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import docx def hamming_coding(huffman_coding_result): code_length = len(huffman_coding_result) remainder = code_length % 4 b = [0, 0, 0, 0] hamming_coding_list = pd.read_csv('hamming_coding.csv') hamming_coding_result = \u0026quot;\u0026quot; s = np.zeros(int((code_length - remainder) / 4 + 1), 7) if remainder != 0: for i in range(0, 3 - remainder): huffman_coding_result += '0' for i in range(0, int((code_length - remainder) / 4) - 1): b[0] = ord(huffman_coding_result[4 * i]) - 48 b[1] = ord(huffman_coding_result[4 * i + 1]) - 48 b[2] = ord(huffman_coding_result[4 * i + 2]) - 48 b[3] = ord(huffman_coding_result[4 * i + 3]) - 48 c = np.dot(b, hamming_coding_list) for j in range(0, 6): if c[j] == 0 | c[j] == 2: s[i, j] = 0 if c[j] == 1 | c[j] == 3: s[i, j] = 1 s[51, 2] -= 1 s[34, 2] -= 1 for i in range(0, int((code_length - remainder) / 4) - 1): for j in range(0, 3): hamming_coding_result += chr(s[i, j]) for i in range(0, remainder - 1): hamming_coding_result += chr(s[int((code_length - remainder) / 4), i]) print(hamming_coding_result) return s  #!/usr/bin/env python3 # -*- coding: utf-8 -*- # Copyright (c) 2019 - magic_kurakun \u0026lt;magickurakun@gmail.com\u0026gt; \u0026quot;\u0026quot;\u0026quot;Test_5/hamming_decoding.py\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import docx def hamming_decoding(huffman_coding_result, s): code_length = len(huffman_coding_result) remainder = code_length % 4 hamming_decoding_list = pd.read_csv('hamming_decoding.csv') d = np.zeros(int((code_length - remainder) / 4), 3) hamming_decoding_result = \u0026quot;\u0026quot; hamming_decoding_result_tem = \u0026quot;\u0026quot; for i in range(0, int((code_length - remainder) / 4) - 1): c = np.dot(s[i, :], hamming_decoding_list) for j in range(0, 2): if c[j] == 0 | c[j] == 2: d[i, j] = 0 elif c[j] == 1 | c[j] == 3: d[i, j] = 1 for j in range(0, 3): if d[i, 0] == hamming_decoding_list[j, 0] \u0026amp; d[i, 1] == hamming_decoding_list[j, 2] \u0026amp;\\ d[i, 2] == hamming_decoding_list[j, 3]: s[i, j] -= 1 for i in range(0, int((code_length - remainder) / 4) - 1): for j in range(0, 3): hamming_decoding_result_tem += chr(s[i, j]) for i in range(0, remainder - 1): hamming_decoding_result_tem += chr(s[int((code_length - remainder) / 4), i]) decode_length = len(hamming_decoding_result_tem) flag = 1 break_while = 0 while flag \u0026lt; decode_length - 3 + remainder: for i in range(0, 26): str_tem = hamming_decoding_result_tem[flag:flag + i - 1] for j in range(0, 26): if str_tem == huffman_coding_list[j, :]: if j == 1: hamming_decoding_result += chr(32) else: hamming_decoding_result += chr(j + 96) flag += len(str_tem) break_while = 1 break if break_while == 1: break print(hamming_decoding_result)  经过测试之后发现经过校验矩阵之后，传输信息错误率在 0.01 之下，根据传输量趋于 0，即是信道编码的意义。\n最后 实验拿了满分，快乐。\n","id":4,"section":"post","summary":"本学期专业课程中有信息论这一门课程，在此之前我学习神经网络的过程中了解了一些与信息论相关的内容，也很开心能开这门课。在这学期中有一些信息论的","tags":["Matlab","Python"],"title":"信息论实验","uri":"https://timegg.top/post/2019-05-09-%E4%BF%A1%E6%81%AF%E8%AE%BA%E5%AE%9E%E9%AA%8C/","year":"2019"},{"content":" Procreate® is the most powerful and intuitive digital illustration app available for iPad. It\u0026rsquo;s packed with features artists love, and it\u0026rsquo;s an iPad exclusive.\n 在 iPad 上进行画画，被推荐最多的软件就是 Procreate。作为一个移动端的创作软件，Procreate 不愧其 Pro 之名，软件深度还是很好的。\n其上手难度比较低，网上也有很多的基础教程。但是对于其比较深入的学习，目前并没有太多的资料。更多的人还是选择在移动端涂鸦，正式作品主要还是在 PC 端完成。\n不过即使是涂鸦，我们还是想要追求“更好地涂鸦”。好好学习使用 Procreate 会帮助我们实现这个愿望。\n我在使用 Procreate 的过程中，总结了一些经验。不过我并没有接受过绘画方面的专业教育，也没有花费太多的精力在上面，可以说是业余的业余了。全都是自己摸索、主观理解，或许会有一些和专业认知相悖的地方，这种时候欢迎指正。\n正文 前面提到了，Procreate 的基础教程到处都是，大多也都很容易理解。即使是刚下载 Procreate，只要有一些 Photoshop 的知识，就可以画出还不错的画。建议有用过 Photoshop 或者 Sai 的同学可以直接了解功能对应就可以。\n关于 Procreate 的基础教程，官方提供了小册子：《Procreate 4 艺术家手册》，不过是英文的，可以翻翻看看，主要介绍的是最基本的一些操作。页数比较多，如果能翻下来的话也差不多就了解了 Procreate 的各种操作。如果英文苦手或者懒得读英文的话，微博上@折翼狐友情翻译了一份。\n不想读册子的话，就像刚开始学 PS 一样随便画画，想到什么功能就去搜索，几幅图画下来也就了解了这东西怎么用。\n适应 Apple Pencil\n为了保护 iPad 我在它的上面贴了一张钢化膜，用起来 Apple Pencil 滑溜溜的，最开始用的时候不是很好适应，再加上官方笔刷手抖修正很多都比较低（相比于 Sai），画出来的线都是弯弯曲曲的。\n后来了解到网上有卖 iPad 类纸膜（大多是日本产的，毕竟他们那边拿这个画漫画的画师不少），可以给 Pencil 提供类似纸的手感。自己也比较懒得撕膜再贴，也怕贴上这种膜之后日常使用的手感会变差。拿 iPad 画画的重度用户可以试试手感怎么样。\n平常拿 Pencil 做笔记，在 Notability 中用的笔也比较的细，对压感差距感觉不大。官方也没给出 Apple Pencil 压感的具体参数，在我比较它与 Wacom 1024 压感的笔之后觉得 Apple Pencil 还是略差一点。有时候画画用力与轻力的区分不是很明显。\n另外在上色时候，用压感控制粗细时一直压着笔画画感觉还是需要很用力，可能会比较伤笔。不过这点压感差距对于我这种业余选手已经是很够用的了。\nPencil 的侧向压感我倒是很想吐槽一下，在使用“铅笔”笔刷时，本身是可以通过改变倾斜程度来实现类似于真实铅笔横着打调子的效果。不过实际上，这个粗细变化实在是太明显了，稍微斜一点没什么反应，再斜一点突然就一大片灰色画出来了。个人感觉挺难控制。要画素描的话还是拿铅笔和纸画吧，成本低手感也好。\n笔刷\nProcreate 的笔刷官方称为“新时代的笔刷模块”，也很容易理解，大致就是 笔刷的刷头形状(这里面的刷头形状也可以很方便的自己绘制) + 笔刷的走笔手感(硬度属性等等) + 笔刷材质。其中任何一部分都可以修改并叠加效果，自定义功能很强大。\n笔刷控制整体上与 Sai 一致，了解过 Sai 之后对 Procreate 的笔刷也能很快的上手。不过笔刷本身是一个很难调整的东西，每个人有不同的需求，不太容易针对具体情况进行调整。想要比较好的自己调整笔刷可能需要一些些研究。\n在自己研究透怎么调整出属于自己的笔刷之前可以考虑用一用其他人的笔刷，官方的笔刷对于日常涂鸦来说已经够用。要做精细画图或者为了实现特殊的风格采用相应的笔刷（比如画漫画或者油画，还有一些比较好用的水彩笔刷），网上有很多笔刷分享，都可以参考。\n另外，笔刷除了可以用在绘画上，橡皮、涂抹都是可以的。善用这两种工具能“出其不意”的画出好作品。\n误触问题\n平板画画无法避开的问题就是误触。这个与个人习惯关系比较大，对我来说，我习惯在左手两指撤销的情况下抬起右手，这样的话在右手落笔的时候很容易造成误触，而且不易被发现。个人感觉误触还是比较频繁的，不过及时修补的话也不会对作品带来很大的影响，只是影响使用心情。\n另外一个注意到的就是，在使用 Pencil 画画时，需要用相当大的力气依然很难达到用 100% 强度画画（看不懂这句话啥意思？我也不知道怎么表述，那就举个例子吧）。使用橡皮工具，最大强度 100% 去擦除时，即使用比较大的力量，橡皮笔刷扫过去之后依然还有淡淡的残留，需要再来一遍。而直接用手指就可以擦得非常干净（100%强度），所以在使用橡皮的时候（单纯为了擦掉什么东西），就用手指抹上就行。笔刷工具也是类似，用手指划一下就可以看到笔刷在这个粗细下最大强度画出来的是什么样子了。\n快捷键缺失\n在 Win 平台上画画的好处之一就是各种操作都可以使用快捷键切换，左手控制键盘，右手完全不需要离开画画的点就可以直接切换工具或者是进行操作，省心省力。\n换到 iPad 平台上时有很多操作比如切换图层、笔刷和橡皮等等都需要右手去做，比较打断画画节奏，对效率也有影响。但也没有什么解决方案，只能慢慢习惯。\n与 PS 不同的地方\nPS 上有画布，在自由变换图层的时候即使超出画布，再变化回来依然还在。但是在 Procreate 中自由变换结束，有图像在画布之外，那么这部分的像素就会被删掉，可以理解为被裁剪掉。\n有时候插入一幅图片想作为参考但是位置不好，调整来调整去图像就被删掉了一块，只能重新导入。\n至今不是太清楚 Procreate 上复制粘贴是怎么个机制，至少了解到的就是复制整个图层，选中另一个图层的情况下是直接粘贴到选中的图层中的，在 PS 中没有这种操作（实际上在 PS 中连复制功能都不怎么常用，大部分都是直接使用 Ctrl + J）。偶尔用不好会搞乱图层。\n最后 总体上来说 Procreate 是个很优秀的软件，适用于平常画画的绝大部分情况。即使对个人来说可能会有一些小问题，这些都是可以克服的。\n","id":5,"section":"post","summary":"Procreate® is the most powerful and intuitive digital illustration app available for iPad. It\u0026rsquo;s packed with features artists love, and it\u0026rsquo;s an iPad exclusive. 在 iPad 上进行画画，被推荐最多的软件就是 Procreate。作为一个移动端的创","tags":["Design"],"title":"浅谈 Procreate","uri":"https://timegg.top/post/2019-05-03-%E6%B5%85%E8%B0%88-procreate/","year":"2019"},{"content":"在此之前我在阿里云服务器上托管了我们的群机器人，这些天突然想到可以使用服务器剩余的算力进行开服，和小伙伴们一起玩一些游戏。\n最先想到的就是《饥荒》(Don\u0026rsquo;t Starve) 这款游戏，在网上有很多相关教程，但是教程中 Linux 版本不同，《饥荒》游戏更新也比较快，其中有不少教程都稍有过时，在实践中往往碰到很多问题。\n本篇 Post 会记录我在搭建饥荒服务器中遇到的一些问题，并给出解决方案，细致流程已经有很多前辈给出了，我在这里列出一些教程。\nUpdate 2019.3.6 - 经过一些时间的测试，个人认为如果只是身边的几个小伙伴想要一起联机玩一玩的话，完全没有必要在云服务器托管这么一个服务器。\n因为在云端的服务器各方面管理起来比较麻烦，而且如果云服务器配置不是很高的话开启洞穴双世界运行一段时间之后会出现卡顿。整体体验比较一般。尤其是阿里云的学生机，DST 加上八九个 Mods 的情况下无法负载三个人以上，算力不足的问题很严重。\n另外在云服务器中管理 Mod 是个大问题，调整 Mod 参数需要直接修改 ini 文件，但是一些 Mod 开发者不提供相应的设置修改接口，就需要自己去寻找修改，会带来很多的麻烦。\n正文 推荐教程：\nLinux环境饥荒服务器手动搭建教程 - 幻想的羽毛 ：该教程相较于后面的一些教程比较新，也更细致一些，只不过博主最近几个月没有继续更新内容。\nCentOS下安装和配置饥荒联机版服务器 - SumyGG ：我最初参考的教程，一直到服务器配置部分都可以很好的参考，服务器部分根据具体情况需要具体分析。\nCentos7.2下建立饥荒服务器 - qhsong ：靠脚本一键式配置，中间遇到问题可能不是很好解决，适度参考。获取服务器许可的方法已过时。\n其他的很多教程都是大同小异，有上面几个参考，加上 Google 就可以解决几乎所有问题。下面部分是我在参考上面教程过程中遇到的问题与解决方案。\n操作系统：CentOS 7 用户：magic_kurakun （非 root）  yum 安装出现 Error: Multilib version problems found 顾名思义，就是多版本冲突，Linux 默认保持单版本在你的主机上：64位或者32位。而 AliCloud 默认配置的 CentOS 中都是64位，饥荒服务器中需要32位的动态链接库。所以在上述教程中出现这种情况，需要手动设置允许多种版本共存：\nyum install --setopt=protected_multilib=false libgcc (缺少的库)\n关掉多重保护之后重新安装即可。\nSteam CMD 登陆问题 现在版本的 Steam CMD 需要打开时先进行登陆，否则无法获取相关游戏信息。\n// 未登录时请求 App 信息会 Error Steam\u0026gt;app_update 343050 validate ERROR! Failed to request AppInfo update, not online or not logged in to Steam. // Login Steam CMD Steam\u0026gt;login ********** passwd:********** Logging in user '**********' to Steam Public... password: Logged in OK Waiting for user info...OK  路径打开问题 通过 Steam CMD 安装的饥荒服务端的路径中，游戏名文件夹是以空格分隔单词的，在 Linux 中很少这么用，这时候运行脚本、cd 文件夹、scp 文件等等操作在书写路径时别忘把整个路径用引号括起来。\n我遇到这个问题就真的是自己菜了\n缺少动态链接库问题 每个教程中都会提到这个问题，也有不同的解决方案，但其中依然会碰到很多问题，导致无法链接成功。\n首先，可以通过 ldd ./dontstarve_dedicated_server_nullrenderer 来查看缺少的动态链接库，一般都是缺少 libcurl.so.4。\n教程中提供的方法就是软链接libcurl-gnutls.so.4到libcurl.so.4\n但是阿里云的 CentOS 是默认不安装 libcurl.i686 即32位 Libcurl 库，这里一定要手动安装，否则运行 ln -s /usr/lib/libcurl.so.4 /usr/lib/libcurl-gnutls.so.4 时没有效果。另外，在安装32位 Libcurl 库时会遇到版本共存冲突问题，参考上述解决方案。\n另外就是在运行软连接时一定注意是将 DST 服务器文件夹下的 lib 链接过去，而不是 usr，路径方面可以参考上述第二个教程，比较清晰。\nklei 文件与设置文件放置路径问题 对于服务器密匙的申请方法，很多地方都有提到，过去的方法 TheNet:GenerateServerToken() 已经不可用，需要在游戏中 Account 界面打开 Klei 网站进行申请，主要参考第一篇教程。\n上述的教程中对申请到的服务器密匙放置位置描述的不是很清楚，经过现在版本的测试（2019-2-25），该密匙文件应该放在 .klei 文件夹下与 master 文件夹同目录。同样的，服务器世界配置等 .ini 文件亦要放在该目录下。\n结尾 希望饥荒能给大家带来诸多欢乐。\n","id":6,"section":"post","summary":"在此之前我在阿里云服务器上托管了我们的群机器人，这些天突然想到可以使用服务器剩余的算力进行开服，和小伙伴们一起玩一些游戏。 最先想到的就是《饥","tags":["Linux","ACG"],"title":"在 Linux 平台创建 DST 多人服务器","uri":"https://timegg.top/post/2019-04-15-centos-%E6%90%AD%E5%BB%BA%E9%A5%A5%E8%8D%92%E6%9C%8D%E5%8A%A1%E5%99%A8/","year":"2019"},{"content":"由于学校的情况，我在日常生活中更多使用 Tencent QQ，也加入了很多的 QQ 群。有老师建立的学术交流群，也有一群相同爱好的人组成的兴趣群。\n这些群之中有不少有群机器人，这些 QQ 机器人功能多种多样，有的可以帮助管理群，有的可以提供一些有趣的游戏或者抽卡模拟。这样的机器人可以非常好的活跃群气氛，提供一些游戏或者好玩的功能大家一起参与。\n被这些功能打动，并且想到可以把这个机器人放到和一些关系不错的同学创建的群中玩，于是就产生了拥有自己的 QQ 机器人的想法，并大概花了两天的时间去配置这样的机器人，并完成了这篇文章。\n在遇到各式各样的问题时，我们都会去搜索引擎寻找解决方案。对于遇到的问题，我们也经常碰到一些让人难以理解的回答，这些回答要么是过于简略，这样的解决方案多是由当事者事后回忆并撰写的，经常略过了不少关键细节，也有的答案本身就是错误的，这种多是回答者从其他地方参考过来，而并没有亲自去尝试带来的结果。\n这样的解决方案反而会给我们解决问题带来反作用。所以，在我撰写这篇教程时，尽可能的用到“提问的艺术”和“回答的艺术”，尽可能精确的去展示问题的解决方案，我也会将亲自完成这篇教程时遇到的问题记录下来，以备大家参考。\nPart 1. 启用属于自己的 QQ 机器人 在最初开始了解 QQ 机器人的时候，发现有很多种类的 QQ 机器人可供选用，编写语言、平台、功能也各不相同，有的是 Github 项目，有的则是商业网站提供的。\n但是之后我了解到一个事实，非常多的 QQ 机器人都是基于 Smart QQ 建立的，也就是不少人熟悉的 Web 版 QQ ，而 WebQQ 该功能已于2019年1月1日停止运营。所以此前很多的 QQ 机器人都无法使用了，在选择机器人平台的时候需要了解到位。\nSmart QQ 的停用对我编写 QQ 机器人带来了一些麻烦，本身 WebQQ 的消息传输可以直接转换为 HTML 代码过滤，来作为接收的信息。这项服务关闭之后就需要考虑其他的过滤信息的方法了。我没有这么多的耐心去自己写一个机器人，也算遵守“有轮子就不自己造”的态度，选择了既有的机器人服务进行使用。\n最后选用的是很广泛使用的 酷Q 社区提供的 QQ 机器人，该社区提供 Air 版（Free）和 Pro 版（Charges）。差别在于 Air 版无法发语音与图片，仅能以文字或者 emoji 进行交互。\n酷Q 社区提供了比较丰富的 应用/App，都是由用户贡献。比较好的是该论坛下载是免费的（下载文件消耗 2CP，评论一次获得 2CP，等价于可以任意下载）。\n由于是稳定的 QQ 机器人社区，酷Q 的使用非常简单，自带有教程插件，运行之后会有细致的教程教你使用。但是，如果你使用的 QQ 号是新号，强烈建议不要启用该教程，有极高的概率被冻结账号。原因在于教程中该账号会高频率发送信息，新账号容易被判定为广告而被冻结。\n在论坛寻找下载并调试一些自己感兴趣的功能插件之后，我们就可以准备将机器人托管到云服务器上了。\nPart 2. 启用云服务器 如果你已经有自己的云服务器并已经调试好，这一部分可以跳过。\n 准备工作：\n 了解基础的 Linux 语句   部署服务器\n服务器商家有很多种，可以按照自己的喜欢选择。这里我是用的是 阿里云轻量级应用服务器，学生云翼计划年费 ￥100 多一些。入门级的服务器托管酷Q也几乎不占用服务器的内存与 CPU，云服务器可以做很多其他事情的，比如托管自己的网站，做云计算等等（如果你的服务器是境外的，当然要用来搭梯子）。\n当然 ECS 也是可以的，不过云服务器比较的简单。当然如果愿意折腾和更自由一些，ECS 是很好的选择。\n操作系统可以自由选择，完成本教程都是大同小异，这里选用的是 CentOS。也便于未来其他方面的使用。\n连接服务器\n部署完初始化之后就可以用 SHH 连接了，方法可以参考 Putty 配置说明。但是 SSH 连接工具还是 MobaXTerm 更好用一些。\n  注意：阿里云有三种方式进行远程连接：1. 浏览器直接连接；2. 客户端密匙连接；3. 客户端账号密码连接；\n在生成密匙后再使用账号密码登陆时会出现 Disconnected:No supported authentication methods available 问题，解决方案参考 解决方案。\n  Part 3. 部署酷Q至云服务器 系统：CentOS 7.4 SSH App：MobaXterm 环境：Docker cotainer 下述 Linux 操作：用户 - root；主机名 - CentOS；  Step 1. 配置 Docker\n安装 Docker：\n[root@CentOS ~]# sudo yum install docker\n安装完成之后启动 Docker：\n[root@CentOS ~]# sudo systemctl start docker\n查看 Docker 运行情况：\n[root@CentOS ~]# docker info\n Step 2. 配置 CoolQ (酷Q) 镜像\n下载 CoolQ 镜像（coolq.io）：\n[root@CentOS ~]# sudo docker pull coolq/wine-coolq\n查看镜像情况：\n[root@CentOS ~]# sudo docker images\n创建一个用以存放数据的 coolq-data 文件夹，创建的路径可以任意选择，这里为最顶层目录：\n[root@CentOS ~]# sudo mkdir /coolq-data\n运行 CoolQ 容器，这是最关键的一步，请仔细按照下述参数说明进行操作：\n[root@CentOS ~]# docker run --restart=always --name wine-coolq -d \\ -p 8080:9000 \\ -v /coolq-data:/home/user/coolq \\ -e VNC_PASSWD=12345678 \\ -e COOLQ_ACCOUNT=1000000000 \\ coolq/wine-coolq  参数说明 (其余部分均不需要修改)：\n8080 - 远程监听端口,此端口需要云服务器防火墙通过,请参考你选择的服务商提供的信息 /coolq-data - 刚才创建的存放数据的文件夹路径 12345678 - 过一会需要登陆一个东西,这里是你要设置的登陆密码(不超8位) 1000000000 - 用以登陆酷Q的QQ号   注意：远程监听端口设置的合适与否关系着后面能否连接酷Q，请务必选择防火墙开放的端口。以阿里云为例，选择 概览 -\u0026gt; 服务器安全设置 -\u0026gt; 防火墙 其中 HTTP 这一行的端口范围就是服务器开放的端口，这样上述操作中就用 -p 80:9000 即可。  Step 3. 连接 CoolQ 并调整\n使用浏览器打开 http://0.0.0.0:8080 ，其中 0.0.0.0 是你主机的公网 IP，8080 是你刚才设置的端口。如果前面一切顺利，你会打开一个 noVNC 的界面。\n连接需要输入上述 VNC_PASSWD 设置的密码，之后酷Q就会自动启动，正常登陆之后就完成了酷Q的连接。\n 注意：在这里登陆酷Q需要QQ号已经开启设备锁，请用手机登陆一次QQ，在设置中将设备锁打开  之后对酷Q的调整就与 Windows 上一样了，文件就在之前所创建的 /coolq-data 里面，将你所需要的插件上传上去之后就可以在 VNC 上面如 Windows 一般进行调整。\n新版本的 wine-coolq 容器自带重启功能：被关闭之后 10 秒之后自动重启，以支持长期后台运行。\n 注意：目前 VNC 存在比较严重的问题：中文输入乱码，目前没有找到比较成熟的解决方案，可以考虑在windows 本地将 ini 设置文件配置好，再上传上去。  至此，酷Q配置完毕。\nPart 4. 后续调整 参考 Docker 从入门到实践 控制容器运行与停止：\n[root@CentOS ~]# docker start coolq\n[root@CentOS ~]# docker stop coolq\n当然，比较好的选择就是在酷Q中安装一个机器人控制插件，这样就可以比较方便的启用和关闭机器人，并且监控机器人状态。\n稳定性方面，依服务器的带宽而定，反应偶有延迟，其中的一些需要联网的功能偶尔会宕机，整体上影响不大。\n2019.3.25 Update - 经过一段时间的测试，酷Q的回复延迟越来越长，最后稳定在 20s 左右，具体原因是系统问题、主机问题还是网络问题还在分析。另一个遇到的问题就是酷Q更新之后是需要重新登陆的，在远程的情况下需要定期连接，是比较麻烦的，而酷Q也不提供停止更新或者静默更新，目前还没有比较好的解决方法。\n","id":7,"section":"post","summary":"由于学校的情况，我在日常生活中更多使用 Tencent QQ，也加入了很多的 QQ 群。有老师建立的学术交流群，也有一群相同爱好的人组成的兴趣群。 这些群之中有不少","tags":["Linux"],"title":"在 Linux 平台创建 Tencent QQ 机器人","uri":"https://timegg.top/post/2019-03-16-tencent-robot/","year":"2019"},{"content":"前言  The vast ocean of stars can always carry our infinite imagination.\n浩瀚的星空永远是我们无穷的想象力的归宿。\n—— 刘慈欣，于克拉克想象力社会贡献奖颁奖仪式\n 正如 2006 年，刘慈欣作品《地球往事》三部曲第一部：《三体》正式发表，这一年被科幻圈称为中国科幻小说元年。2019 年，由刘慈欣作品《流浪地球》改编的同名电影上映，获得诸多好评，2019 也被一些人称为中国科幻电影元年。近几年热度一直在消减的科幻，又一次进入到了大家的视野。\n 科幻是一种生活态度。\n—— 刘慈欣\n 科幻 是 科学幻想 或是 科学虚幻 的简称，广义上的科幻种类多种多样，从机器人三定律中的逻辑学讨论到生化危机中的病毒变异，都可以称之为科幻。虽然“硬科幻”、“软科幻”的分法常见诸许多杂志、网站和爱好者之口，但赞成者内部对“软硬”的定义也存在争议；同样，有许多人拒绝承认这种说法，认为没有必要去细分科幻小说。\n现在大众更倾向于使用“科幻”与“奇幻”来分别它们。但是，这些作品都倾注了作者非凡的想象力，带领读者进入到多种多样奇异的世界，这其中映射着我们对现实的看法、对未来的想象。\n人类对未知有着天然的向往，而有时又存在着恐惧，不论是“新视野号”向着深空的前进，还是《克苏鲁神话》中描述的人类最原始的恐惧，都体现着人类对探索的渴望。而科幻在想象层面上满足了人们对无端未知探索的需求，了解与感受不同作者脑中的宇宙是何种形式、人类未来何去何从等等。\n当我们停下阅读，放下书本进行思考时，我们的思维也越过千万光年，在宇宙间脱离物质的去探索、去理解，“广阔”的视野不再停留于这片蓝色的乌托邦。宇宙很大，人类很渺小，还有那么多事情我们并不知晓，想到此处，就能重新认识自己的存在，似乎有一些哲学含义包含在其中，这些值得我们去反复思考。\n我对科幻最早的接触可以回溯至高一，那年我第一次阅读到《三体》，并被其所震撼。从此开始之后的几年，是我较多的阅读科幻的时间，可以说科幻陪伴我度过了平淡的高中时光。\n在这两年多内，我阅读的科幻作品量并不算很大，但是其中的不少都给我留下了非常深刻的印象，我也会经常的重读这些作品，每一次重读都会有不同的理解。\n其中我读的较多的便是刘慈欣的作品。今年过年回到家中，随手翻一翻当年买的几本科幻作品，又想起了高中那时候读科幻的感受。于是就针对这些作品写了这篇文章，来尝试复述一下当时阅读的感受。\n科幻启蒙 —— 《地球往事》三部曲  给岁月以文明，而不是给文明以岁月。\n “地球往事”这个名字事实上是被忽略了的。现在人们普遍所叫的“三体”实际上是地球往事三部曲的第一部的名字，而现在所称的三体指的是：《地球往事 —— 三体》《地球往事II —— 黑暗森林》《地球往事III —— 死神永生》。\n也算是一个“以讹传讹”的典型故事了，鉴于《三体》这个名称已被大众广泛接受，本文后面都称之为三体。\n《三体》这部作品的优秀程度完全不需要我来讲，只从奖项中，就可以了解到它在中国、乃至世界科幻上占有的一席地位。庆幸的是，我阅读的第一部科幻作品就是它。\n在当时，三体被称为“中国科幻的优秀作品”，但考虑到当时科幻圈在大众中的影响力，这些科幻作品并没有在大众视野中占据一定的地位。当时是一位我的好朋友 Yang 向我推荐这篇作品，并将书借给了我。由此开启了我的科幻历程，有幸在这么早遇到了如此优秀的作品。现在我的这位朋友远在美国，也已经一年多未见了，只期待我们下次可以早日相聚。\n 给时间以生命，而不是给生命以时间。\n 该作品给我留下深刻印象的地方有很多：三体世界精妙的设计、另人深思的黑暗森林法则、面壁计划、震撼人心的罗辑与三体世界的对峙、四维空间的描写、拯救人类的童话、一转瞬间 18 万年的沧海桑田等等。对于当时从未接触过科幻的我是一种冲击，开始思考空间、时间、人类和宇宙。\n《三体》是“硬科幻”，小说是描写人性的文学，而《三体》就像它的名字：地球往事 一样，仿佛就是在叙述过去的地球的历史。通篇作品对人性的描写并不算多，更多的是集中在对这样一个三体与人类对抗的世界的补足，绘制了一幅广阔的宇宙画卷。\n宏大的世界观并不影响这篇作品将末日下的人性表现的很好。除此之外，主观上更多的是与三体、与宇宙对抗无果的无力感。\n《三体》中没有大英雄主义，每个人的一生都是坎坷、曲折的。而最终人类、三体和宇宙的走向也并不一定是美好的。在宇宙尺度上，这样小小的插曲发生在了银河系第三臂旋上的微不足道的恒星系中，而还有千万亿个文明的兴衰也在同时发生着。人类只是将自己的故事记录下来，这就是地球往事三部曲。\n时至今日，在向别人推荐读书时，《三体》依然是我优先度很高的选择。\n冰冷的机器与温暖的人心 —— 《球状闪电》  当我走到人生的尽头，当我在弥留之际最后一次睁开眼睛，那时我所有的知性和记忆都消失在过去的深渊中，又回到童年纯真的感觉和梦幻之中，那就是量子玫瑰向我微笑的时候\n 《球状闪电》是刘慈欣另一部长篇科幻小说。在阅读完《三体》之后，我开始关注刘慈欣这位作者，从其长篇小说读起，球状闪电与超新星纪元是我随后读到的作品。\n该作品内的时间与《三体》交织，由丁仪这个客串人物可知。《球状闪电》发表于《三体》两年前，在球状闪电中可以看到不少三体的影子，大刘也是尽力去圆满球状闪电的设定，让人信服于其中。\n这篇作品对悬疑气氛的渲染是成功的，前半篇以几种异象为主题从多个角度一步步揭开球状闪电的秘密。在此过程中，各种各样的奇异事件吸引着读者。最后揭示球状闪电真相时令人惊奇，精妙的设定与剧情设计让这部作品一环扣一环，节奏紧凑连续。\n《球状闪电》中对人物的刻画是优秀的，所有人都在执着地追逐着能让我们着迷一生的事务，而主人公，无关社会、无关生活，从痴迷，矛盾，绝望到找到希望，一心追逐自己想要的东西，就好像人的一种本能，无关世俗、无关成败\n 其实，儿子，过一个美妙的人生并不难，听爸爸教你：你选一个公认的世界难题，最好是只用一张纸和一只铅笔的数学难题，比如歌德巴赫猜想或费尔马大定理什么的，或连纸笔都不要的纯自然哲学难题，比如宇宙的本源之类，投入全部身心钻研，只问耕耘不问收获，不知不觉的专注中，一辈子也就过去了。\n人们常说的寄托，也就是这么回事。或是相反，把挣钱作为惟一的目标，所有的时间都想着怎么挣，也不问挣来干什么用，到死的时候像葛朗台一样抱者一堆金币说：啊，真暖和啊……所以，美妙人生的关键在于你能迷上什么东西。\n 这种执着就像在心中的灯塔，在生活中，我们可以停下来看电影、打球、恋爱……但是，无论我们在做什么的时候，只要心中的这份执着在亮着，我们总会永不停歇的去追求。\n球状闪电不同于三体冰冷的“地球历史”，充满了人情：不论是爱情、战友情还是民族情，都在这篇作品中非常好的体现出来。\n其中最令我印象深刻的是在“核电站的恐怖分子”部分，这里涉及到了一直被人类思考的伦理哲学问题：“如果可以牺牲非常小的一部分人，而拯救成千上万的人类，那么我们是否应该杀掉这些人？”\n作品中对球状闪电的秘密揭露后并没有结束，在此之后的部分脱离了对球状闪电本身的探索，而借这种超越现已知自然的力量引发的问题来描写人性，并将作品的格局提升到了更大的境界。\n刘慈欣又一次站在上帝的视角：宏大与微小，坚硬和柔软，他都伸缩自如。还有很多世界，不是不存在，是我们尚未发现。\n孩子们的战争与和平 —— 《超新星纪元》  \u0026ldquo;谁又能保证大人们没有给他们留下’面包屑‘呢？\u0026rdquo;\n 如果《三体》《球状闪电》被称为“硬科幻”的话，那么相比之下《超新星纪元》的“硬”度可能没有那么高。在设定上，《超新星纪元》更加的“有趣”一些。\n在面临种族的灭顶之灾时，人类究竟会不会齐心协力一次？在《超新星纪元》中，人们将希望寄托于孩子们，蹒跚学步的孩子世界一点点向前走去。作品中非常有趣的部分就是孩子们在南极的军备竞争，从中可见大刘是怎样的一个军迷。在此之后，两个“面包屑”将本就不“童真”的世界拉会现实，对核弹发射的描写堪称经典，震撼人心。\n在故事中，孩子们“扮演”起国家政府，学着大人处理事务又随意打破规矩，即使这是描述孩子世界非常不成熟的成长，依然映射了当今现实中的很多国家、政府政策问题，很多时候充满讽刺意味。私以为这部作品非常好的向我们传达了反战、和平的讯息。\n时间的力量 —— 《时间之墟》 大刘是中国科幻不可忽略的人物，但除此之外亦有诸多非常优秀的科幻作家，在刘慈欣之前，有王晋康、星河、姚海军等等一批科幻作者，他们都是中国科幻的基石人物。在这里我想提到的作者是宝树，接触到他的这篇作品的契机是在书店的偶然遇到，独特的封面与奇特的剧情简介让我选择了它。\n《时间之墟》的设定不算独到，时间跳转、不断循环在很多作品中都可以看到类似的剧情。比较有名的是《土拨鼠日》这部电影，不过这篇电影的主线是爱情，在这里面科幻不过是一个新奇的设定，所以在我看完这部电影时觉得非常的失望。\n而《时间之墟》这部作品就在一个比较大的框架下讲述了时间跳转的故事，就像推荐序中所说的：常见的时间跳转的作品，大多是除了主角其他人都没有时间跳转的记忆。而这部作品中，所有人都保留了时间跳转的记忆，这样构建的宏大世界非常难以去想象与书写。作者宝树以其优秀的想象力和文笔去记录了这样的一个故事。\n作品前面的部分着重描述了时间跳转出现后，出现的各种社会现象，夸张而有趣，在其中穿插着后续的伏笔。中间部分是我个人认为作品中最精彩的部分，当时间循环次数越来越多，人类的行为慢慢改变，从而诞生出来的“越狱计划”和时间宗教等等，都是超越一般想象力的现象，在此之后的无尽循环让人绝望。令人震撼的结尾，当被告知这个世界已经“重启”了千万次，与时间对抗的绝望感又一次的加深。我阅读到这里的感受与《地球往事 —— 死神永生》最后的感受相似\n 过去曾经是现在，而未来也将变成现在。没有不曾是现在的过去，也没有不会变成现在的未来。我们体验到的时间，本质上就是“现在”不停地向前运动。\n—— 时间之墟\n 时间永远是科幻系列作品跳不开的主题，不论是经常被使用的冬眠技术，还是远星航行的相对论效应，都有着时间的讨论。\n作品的缺点也比较的明显，包括女主在内的人物塑造不是很完美，在很多剧情中显得有些突兀；最后部分的盖娅意识比较的奇幻，反派的定位不清晰。当然这也有“时间教”这个概念的设定并不太容易让人理解，有不少哲学范畴的概念，后面部分让人看的比较“神道”。\n读完这篇作品之后，我才开始广泛阅读其他科幻作品，都是挑类型与三体这样硬科幻类似的。\n《刘慈欣获奖作品集》 读过一圈各式各样的作品之后，我还是觉得大刘作品有着别样的魅力，就像《流浪地球》评价中所说，中国拍出的科幻片，没有大英雄主义，而是民族、家国精神。民族、国家、人类的同心才更像灾难来临之际的世界，而不是一两位英雄拯救世界。\n 科幻世界里没有孤独的英雄。\n 除了几篇优秀的长篇小说，刘慈欣也有不少精彩的中篇、短片小说。流浪地球就是改编自刘慈欣中篇小说。这几篇给我的感受完全不比《地球往事》《球状闪电》差，我也很期待其中的一些作品能早日改编为电影。\n乡村教师\n我最希望改编为电影的作品，没有之一。（当然，今年的疯狂外星人这种喜剧片不算，甚至我个人觉得如果这就是对这部小说的改编，那么是对作品的浪费）。我的母亲是人民教师，是被称为光荣的职业，一年又一年地将知识传递给一代又一代学生，而乡村教师更是将自己的一切奉献给了乡下的一片片土地。乡村教师这篇作品将这种教育的意义拓展到了一个种族、一个行星、一个恒星系的层面。令人震撼的反转让人为之感动。可以说这篇作品是充满着教育意义的。\n戴上她的眼睛\n人类在不断的探索太空时，对自己脚下的土地一无所知，向地心进发，他们的故事不比远入深空的英雄们差。这篇作品以别样的角度展现了爱与分别。\n镜子\n我在小的时候想过，街上监控越来越多，是不是到未来我做的任何事情都会被拍下来？然后就开始担心藏起来的压岁钱会不会被发现的事情。而在经典物理中，没有混沌和概率，从宇宙诞生起的所有事情都是可以被精准计算的，当人类有了量子计算机的能力时，照出整个人类的“镜子”出现了。在此之下发生的所有事都是超出想象的，这样的世界，有趣而可怕。\n中国太阳\n论中国的家国情怀、民族意识，我认为中国太阳这部作品是体现的最明显的一部。科幻中，“时间不饶人”有了更深刻的含义，从地球向深空进发，消息的延迟越来越长，从几分钟到几小时再到一整天，这点类似新海诚的动漫《星之声》。中国太阳中的家国情怀，为了国家与民族的发展牺牲了自己陪伴家人的时间，这里的远方是时间与空间的远方。\n结尾 人类的想象力无穷无尽，科幻承载着人类的想象力，没有边际。科幻旅程不会就此结束，这些中文作品只是众多优秀科幻作品中非常小的一部分，如大海岸边的拾贝者，抬头望望，我们仍有无尽的未知。希望中国科幻发展不断、世界科幻发展不断，中华文明长流传、人类文明长发展。\nOne More Thing 作品里面有相当多有趣的句子，其中印象最深的就是这一句：\n 这个世界上，已经有人在宇宙漫步，星空是他们最后的坟墓。 相比之下，你那点考试升职亲子关系家庭问题就像屎壳郎找不到合适的粪球一样卑微。\n—— 球状闪电\n 消灭人类暴政，世界属于三体\n","id":8,"section":"post","summary":"前言 The vast ocean of stars can always carry our infinite imagination. 浩瀚的星空永远是我们无穷的想象力的归宿。 —— 刘慈欣，于克拉克想象力社会贡献奖颁奖仪式 正如 2006 年，刘慈欣作品《地球往事","tags":["Novel"],"title":"我所读过的一些刘慈欣的作品","uri":"https://timegg.top/post/2019-02-11-%E6%88%91%E7%9A%84%E7%A7%91%E5%B9%BB%E6%97%85%E7%A8%8B/","year":"2019"},{"content":"过年在家出于兴趣阅读了一些金融相关的书籍，其中提到了很多数学原理，作为一个数学系的学生，我觉得非常的有趣，感受到了数学在真实生活中的应用。\n在这些内容中，有一部分涉及到了我在上一个学期在泛函分析中的一个定理：Hahn-Banach Theorem(English) 即 哈恩-巴拿赫定理(中文) 。这个定理被称为泛函分析三大定理之一，是泛函分析中极为重要的一个工具。在经济学中 Hahn-Banach Theorem 与市场经济的福利经济学第二定理有着密切的关系。\n在假期中想到这个定理，但是记不得定理的证明了，在 Google 上搜索了许多，但是关于这个定理的中文资料很少，而且大部分都是定理的应用。于是回到学校之后参考老师的讲义，将这个定理的证明记录下来。并不是说我自己对掌握这个定理的证明有多大的执念，只是想留下这一篇 Post 来提示自己好好学习数学，诸多学科都会要求一定的数学功底。\n正文 引理 设 $f$ 是赋范空间 $X$ 上的有界泛函，令 $\\varphi (x)=Ref(x)$ ，则 $\\varphi (x)$ 是 $X$ 上的有界线性泛函且\n$$f(x)=\\varphi (x)-i\\varphi (ix), || \\varphi ||\\le ||f||.$$\n证明 设 $f(x)=\\varphi (x)-i\\psi (ix)$ ，这里 $\\varphi (x), \\psi (x)$ 分别是 $f(x)$ 的实部与虚部。显然 $\\varphi , \\psi$ 是实线性泛函。\n$$\\varphi (ix)+i\\psi (ix)=f(ix)=if(x)=i\\varphi (x)-\\psi (x).$$\n故\n$$\\varphi (ix)=-\\psi (x)$$\n因此\n$$f(x)=\\varphi (x)-i\\varphi (ix).$$\n$$|\\varphi (x)|=|Ref(x)|\\le |f(x)|\\le ||f||||x||$. 故 $||\\varphi||\\le ||f||.$$\n定理 设 $M$ 是线性空间 $X$ 的子空间，$f$ 是 $M$ 上的线性泛函，$p$ 是 $X$ 上的半范数，对 $x\\in M$，有 $|f(x)|\\le p(x)$，则 $f$ 可以延拓为 $X$ 上的线性泛函 $F$ 且对任意 $x\\in X$，有 $|F(x)|\\le p(x)$.\n证明 若标量域 $\\mathbb{K}=\\mathbb{R}$ ，由于 $p$ 是次可加正齐次泛函，故存在 $F$ 是 $X$ 上的线性泛函，是 $f$ 的延拓.\n则\n$$-p(x)=-p(-x)\\le -F(-x)=F(x)\\le p(x)$. 故 $|F(x)|\\le p(x).$$\n若标量域 $\\mathbb{K}=\\mathbb{C}$ ，令 ${\\varphi}_0=Ref$ 是 $M$ 上的实线性泛函且 $||{\\varphi}_0||\\le |f(x)|\\le p(x)$. 故存在 ${\\varphi _0} $在 $X$ 上的延拓 $\\varphi$ ，使得 $\\varphi (x)\\le p(x)$.\n作 $F(x)=\\varphi (x)-i\\varphi (ix)$ ，则 $F$ 是 $f$ 在 $X$ 上的延拓且复线性泛函：\n$$F(ix)=\\varphi (ix)-i\\varphi (-x)=iF(x).$$\n由于存在单位复数 $\\beta$ ，使得 $|F(x)|=\\beta F(x)$. 故\n$$|F(x)|=\\beta F(x)=F(\\beta x)=\\varphi (\\beta x)\\le p(\\beta x)=|\\beta|p(x)=p(x).$$\n定理 设 $G$ 是赋范空间 $X$ 的线性子空间，$f$ 是 $G$ 上的有界线性泛函，则存在 $X$ 上的线性泛函 $F$ 是 $f$ 的延拓且 $||F||=||f||$.\n证明 记 $p(x)=||f||·||x||$ 是 $X$ 上的半范数且 $|f(x)|\\le p(x)$. 故存在 $X$ 上的线性泛函 $F$ 是 $f$ 的延拓，使得 $|F(x)|\\le p(x)=||f||·||x||$. 故 $||F||\\le ||f||$.\n显然\n$$||F||=sup_{x\\ne 0}\\frac{|F(x)|}{||x||}\\ge sup_{G\\ni x\\ne0}\\frac{|f(x)|}{||x||}=||f||.$$\n故 $||F||=||f||$.\n定理 设 $G$ 是赋范空间 $X$ 的线性子空间，$x_0 \\in X$，$d\\triangleq inf_{f\\in G}||x_0-y||\u0026gt;0$，则存在 $f\\in X^*$，使得对 $x\\in G$，有 $f(x)=0; f(x_0)=d; ||f||=1$.\n证明 显然 $x_0\\notin G$. 记 $G_1={\\alpha x_0 + x\\ |\\ x\\in G, \\alpha \\in \\mathbb{K}}$ 是线性子空间。\n作 $g:G_1\\ni \\alpha x_0 + x\\mapsto \\alpha d\\in \\mathbb{K}$ 是线性泛函。\n对 $x\\in G$，有 $g(x)=0; g(x_0)=d$;\n$$|g(\\alpha x_0+x)|=|\\alpha|d\\le |\\alpha|·||x_0-(-x)/\\alpha||=||\\alpha x_0+x||$$\n故\n$$||g||\\le 1$$\n$$d=g(x_0)=g(x_0-x)\\le ||g||||x_0-x||$$\n故\n$$d\\le ||g||inf_{x\\in G}||x_0-x||=||g||d$. 故 $1\\le ||g||$$\n因此 $||g||=1$.\n存在 $g$ 的延拓 $f\\in X^*$，使得 $||f||=||g||=1$.\n推论 设 $X$ 是赋范线性空间，$x_0\\in X, x_0 \\ne 0$，则存在 $f\\in X^*$，使得 $f(x_0)=||x_0||$ 且 $||f||=1$.\n推论 设 $X$ 是赋范线性空间，$x\\in X$，则 $||x||=sup_{f\\in X^*}\\frac{|f(x)|}{||f||}$.\n其他 泛函分析在经济学中的应用很广泛，更多内容可以参考知乎的问题 https://www.zhihu.com/question/31913447/answer/53821730。\n","id":9,"section":"post","summary":"过年在家出于兴趣阅读了一些金融相关的书籍，其中提到了很多数学原理，作为一个数学系的学生，我觉得非常的有趣，感受到了数学在真实生活中的应用。 在","tags":["Math"],"title":"Hahn-Banach 定理证明","uri":"https://timegg.top/post/2019-02-10-hahn-banach-theorem-%E8%AF%81%E6%98%8E/","year":"2019"},{"content":"学校简介 南方科技大学（简称南科大）是深圳在中国高等教育改革发展的宏观背景下，创建的一所高起点、高定位的公办创新型大学，它肩负着为我国高等教育改革发挥先导和示范作用的使命，并致力于服务创新型国家建设和深圳创新型城市建设。\n南科大被确定为国家高等教育综合改革试验校。2012年4月，教育部同意建校，并赋予学校探索具有中国特色的现代大学制度、探索创新人才培养模式的重大使命。\n南科大借鉴世界一流理工科大学的学科设置和办学模式，以理、工、医科为主，兼具商科及特色人文社会学科，在本科、硕士、博士层次办学，在一系列新的学科方向上开展研究，使学校成为引领社会发展的思想库和新知识、新技术的源泉。\n南科大将发扬“敢闯敢试、求真务实、改革创新、追求卓越”的创校精神，突出“创知、创新、创业”（Research, Innovation and Entrepreneurship）的办学特色，努力服务创新型国家建设及深圳国际化现代化创新型城市建设，快速建设成为聚集一流师资、培养拔尖创新人才、创造国际一流学术成果并推动科技应用的国际化高水平研究型大学，为尽早实现创建世界一流研究型大学的宏伟目标打下坚实基础。\n郭雨蓉为现任党委书记，陈十一为现任校长。\n招聘信息 南方科技大学电子系化梦媛课题组诚聘电子、物理、材料相关背景成员，包括访问学生、研究助理、博士生、博后。待遇丰厚（访问学生、研究助理和博士生奖学金8-10万/年，博后33万/年），学术发展前景广阔（支持海内外交流，博士生海外名校联培），学术氛围浓厚。详细介绍如下，欢迎加入！\n南方科技大学电子系化梦媛课题组招聘研究助理及博士生\n南方科技大学电子系化梦媛课题组2019年招聘博士后\n","id":10,"section":"post","summary":"学校简介 南方科技大学（简称南科大）是深圳在中国高等教育改革发展的宏观背景下，创建的一所高起点、高定位的公办创新型大学，它肩负着为我国高等教育","tags":["Research"],"title":"南方科技大学化梦媛课题组招生","uri":"https://timegg.top/post/2019-02-08-%E5%8D%97%E6%96%B9%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%8C%96%E6%A2%A6%E5%AA%9B%E8%AF%BE%E9%A2%98%E7%BB%84%E6%8B%9B%E7%94%9F/","year":"2019"},{"content":"2019 MCM/ICM 于 2019.1.26 开始、2019.1.29结束，四天四夜的建模比赛给我和我的队友都留下了很多回忆。在此次建模竞赛之前，我参加过一次 MCM/ICM、一次 CUMCM（国赛）、一次 CAMCM（小美赛），虽然没能拿到国家级的奖，但是几个省奖倒也可以交代这段时间的努力。\n想好好记录一次建模比赛的想法并不是这次才有的，但迫于时间与精力，前几次建模比赛都没能好好记录下来。不过我们的建模队伍走到现在，所有的经历都是我们宝贵的经验，体现在我们本次的竞赛中。\n由于我们学校没有专门的数学建模课程与培训，我们的建模知识、软件使用都来源于自学。、感谢我的队友们，感谢他们优秀的论文写作与精妙的模型提出，和优秀的数据处理与资料搜索能力，以及陪我一起坚持做完的耐心。\n这篇文章目的在于记录与反思四天四夜中我们的建模工作流程，以及其中遇到的一些有趣的问题，一些吐槽等等。\n这次参赛 MCM/ICM 可能是我建模生涯的最后一次，希望能留下来给未来的自己回忆用。也可以让一些想要参与建模的同学大致了解与参考这个比赛。\nDay 1 本次建模比赛，我们队伍选择在一起参与竞赛，而不是远程进行。这样方便讨论、交流。这是数学建模中数一数二的要素。根据去年失败的参赛经验，异地比赛交流非常的差，会导致队伍分工、模型讨论等等在内的很多方面受到影响，所以在一起参赛讨论是非常有必要的。\nMCM/ICM 于北京时间 6:00 am. 公开 Problems。毕竟是竞赛第一天，各建模队伍都是激情满满，前一天早早睡觉，为了今天可以准时起来，第一时间读到赛题。不过对于已经放假休息了一周左右的我们来说，突然有一天起床这么早还是挺困难的，最后依然赖床到了 7:00，经过了不少比赛，大家的心态都是挺放松的。\n建模遇到的第一个问题就是 Problems 下载不下来，MCM/ICM 官网服务器的质量是相当的差。许多队伍在下载问题包的过程中都遇到了崩溃。这时候就需要通过同学互相分享、群文件共享来解决。不过我们发现，如果可以翻墙的话，官网还是很流畅的，所以说估计网站爆炸也就是大陆地区。\n题目分析 奇怪的 Problem A\n早上 7:00 多，题目下载好之后，打开阅读完 Problem A，当时就觉得非常惊讶。Problem A 按照竞赛规则应该是连续性赛题。但是 2019 年的这道“养龙”题目，确是第一眼很难看出与连续性的关系，甚至我们一开始对 Problem A 的建模方向都没有任何思路。\n数学建模是对实际问题进行分析，转化为数学模型进行计算。但是这道题本身就分析不是现实中的生物，这样得架空考虑来分析问题。\nMCM/ICM 赛题对比 CUMCM，往往更加抽象。数据一般都比较难以寻找，通过不同的思路进行建模，结论变化较大。而 CUMCM 恰好相反。所以就有这么的说法：“美赛注重过程，国赛注重结论。”\n我们在 2018 MCM/ICM 中选择了 Problem B，该问题涉及的数据，例如各国近十年出生率、死亡率、移民人数等等。这些数据非常难以获取，对于一些国家来说，这些数据甚至是机密。这对我们的建模进度造成了不少的影响。\n我们在此之前阅读过 2016 MCM/ICM 的 Outstanding Paper，其中对埃博拉问题分析解决时，论文中直接表明了“我们找不到这些数据，但是如果能给我们准确的数据，我们的结果是可信的”。所以说 MCM/ICM 更注重队伍的分析过程与所建立的模型，应该并不太关心建模最后的结果。\nMCM/ICM 题目固有的部分就是写一封信或者一篇 Memo 给问题方。这部分的用意就是对所建模型的非专业性总结，不涉及公式、数据分析、绘制结果，将实际问题数学化分析后的结果返回现实，完成数学建模的现实意义。\n回归题目，题目中几乎一点数据都没有给出，反而没少提到《冰与火之歌》原作。有很多人吐槽如果没有读过原作这道题还不好下手，因为这道题的抽象程度已经不是现实的层面了。从最开始就要假设，考虑的方向也非常的广，不知道怎么下手。但是题目本身还是挺有趣的，队伍中的权游粉读完就想选择 A 题了。\n难以分析的 Problem B\n接着阅读 Problem B，大致了解是最短路径规划问题，但是涉及的方面又非常的多：有装箱问题、调度论、考虑不同无人机的性能还要分析地图。本题给出的地图比较难以分析，依照表格在地图中标出具体位置之后，还要将公路抽象出来。在第一天上午我们分析地图时就发现有一些问题在里面，后来 MCM/ICM 官方对题目进行了修正，不过在那时我们已经不再做 Problem B 了。\n至于不选择 Problem B 的原因，我们在 2018 CUMCM 中选择了 Problem B（小车调度分析），当时是我做的算法，编程写的挺累的，最后也没有拿到国家奖。所以在美赛中我们不再打算专攻算法调度问题。\n中规中矩的 Problem CDEF\n剩下的四道题就中规中矩了：\nProblem C 的数据分析量比去年更大，分析起来更困难一些。\nProblem D 从开始就遇到了问题，政府官方打不开，参赛队伍拿不到卢浮宫的建筑图，Problem D 的展开就有一些些麻烦。\nProblem E 的数据依然难以获取，是环境生态相关的跨学科题目，如果中国参赛的队伍都取用当地的数据，那么 MCM/ICM 官方还是能通过这次比赛收集到相当一部分的数据。\n比较有意思的就是 Problem F 了，金融相关的跨学科题目，涉及区块链，是当前现代计算金融的前沿问题之一了，\nProblem F 应该是现在不少业界大牛的科研课题，要是能比较好的解决了岂不是可以拿到诺贝尔奖。\n定题 经过讨论之后我们决定解决 Problem A，定题时间是在 Day 1 的下午。搜集相关资料的工作与此同时进行。题目是生态学的范畴，通过搜索相关论文，我们以 洛特卡－沃尔泰拉方程 为基础进行问题分析，开始建模。\n建模强调从简到繁，不断优化，我们将捕食、耗能、迁徙等等考虑在内，分成三个阶段建立我们的模型。Day 1 我们完成了基础模型的建立，并寻找数据准备使用 Matlab 实现该模型。\n基础模型本质是两个常微分方程组成的常微分方程组，我们使用四阶 Runge-Kutta 方法模拟计算该方程组，虽然精度不算高，不过在我们模型分析的情况下已经足够。算法也比较容易实现，精力主要放在数据控制，因为我们模型中涉及的很多数据都非常难量化，只能大致设定，而数据大小还比较难控制，就需要反复试验来确定参数大小。\n第一天做了一个框架，几个人就没有太多精力了，选择先洗漱睡觉，明天早早起床搞。\nDay 2 早上起来就着手出基础模型的图，反复调整程序与参数之后出了两张图。队伍建模同学开始着手第二模型的建立，第二模型我们大概花了半天的时间，在下午确定了第二模型。与此同时，我们的 Paper 也需要着手开始撰写。\n在我们的队伍配置中，模型建立与论文撰写是一位同学，这样有好处也有坏处，好处在于建模的同学在写论文时对自己建立的模型有比较好的了解，论文撰写可以很好的论述我们的模型。如果建模与论文不是由一个同学控制，就需要在模型理解的对接上消耗很多的精力。这种队伍配置的缺点也很明显，建模同学需要消耗大量的时间去完成论文撰写，以至于在模型分析上的时间比较的少，模型的优化可能会比较受局限。\n第二天是心态比较放松的一天，没有第一天定题的纠结，没有第三、四天时间的紧张。这一天就在第二模型建立、第二模型算法实现与论文起步中过去了。\nDay 2 一般参赛队伍都已经定完了题目（或者是改完了题目），我们在这一天经常去询问认识的其他参赛队伍，了解他们的分析与定题情况。根据我们询问的结果，本次 MCM/ICM 选择 Problem A 的队伍不在少数，或许是相比剩下的 Problems，Problem A 比较容易下手分析。\n大家一边吐槽今年的题目，一边缓慢的推进队伍的建模进度。建模竞赛对资料、思路共享很抵触，定性来说这种行为是学术造假的一种，而且透露思路对自己来说也不是有利的行为。所以大家在交流中都默默避开自己队伍的思考方向。\n经过去年的第一次建模竞赛之后，我们就认清了网传建模思路的事实，按照对当年 Outstanding Paper 的分析，没有一个文章与网传思路相符，反倒是有不少队伍因参考网传思路被判定为 Unsuccess。所以这些方法都不是最重要的，重要的是独到的想法与见解。\n到第二天中午，选择 Problem E 的队伍才纷纷拿到卢浮宫建筑图，而 Problem B 也刚刚修正。\nDay 3 第三天早上起来就确定了剩下时间的任务，由于题目要求中有要求两页写给马丁老爷子的信，所以我们第四天估计要花大部分时间在信的书写和 Summary 的完成，以及论文重检。\n由于写信也需要涉及一些方面的分析，该内容我们可能需要留在 Day 4 完成，所以在 Day 3 中我们要把第三模型建立完成、第三模型算法完成、论文主体部分应该写的差不多。由于我们第三模型内容量也比较大，所以 Day 3 的时间还是比较紧张的。\n第三模型中我们加细了分析，参数更加敏感，所以在解决第三模型的算法问题时花费了相当长的时间去控制参数。在 Day 2 与 Day 3 中第三位同学保持寻找数据、寻找参考文献，并不时帮忙出图。\n第三天是建模队伍比较疲惫的一天，应该是弃赛率比较高的一天（可能），至少我们队伍在第三天是比较疲乏的。一天时间内我们还是坚持完成了第三模型的建立与算法实现，但是参数控制与出图我留到了第四天的早上。\n论文的书写也遇到了瓶颈，Summary 的书写是比较难的，因为量确实比较大。参考了历届论文，Summary 都是将队伍的模型又重新叙述了一遍放在里面，达到大概一页的长度。\nDay 3 早早休息，准备明天最后的冲刺。\nDay 4 早上起来，我就开始着手第三模型的参数处理与图形导出，建模同学专心撰写 Summary，另一位同学整理 References 并协助我出图。大致不到中午我们的论文主体部分完成，出图完毕。剩下的就是论文的检修与最后信的书写。对于今年的题目，我们还需要对信专门分析一些内容，这些也会减慢我们写信的时间。\n基于对往届 Outstanding Paper 的研究，MCM/ICM 的信件或者备忘录写作部分对文章的评定有相当大的影响，所以这部分必须要费心好好写，我们采取先撰写中文再翻译的方法使这封信更有逻辑、更有层次。但是这种方法会占用大量的时间，我们在这一天从下午到晚上 9:00 左右由三个人协力才完成这部分的书写。\n至此，其实我们的建模已经完成的差不多了，相比很多优秀队伍争分夺秒对时间的把控，我们的队伍显得相对清闲。这当然取决于模型的精细程度，我们在本次 MCM/ICM 中建立的模型比较粗糙，鉴于题目的特殊性，我们认为至此已经尚可。\n在之后的两个小时内我们编译 Paper，查找错误，做出最后的校正。并于 23:00 左右完成了 Solution 的提交。确定提交无误之后我们 1:00 左右正式结束我们本次 MCM/ICM。\n结尾 这次比赛给我们带来的感受不同于 2018 年 CUMCM 的紧张、与时间赛跑，有按部就班的感受。对我们结果的评判就交给评委组来完成，我们对本次 MCM/ICM 的参与是比较满意的。不论是在建模过程中的成长还是队员间羁绊的加深，都是本次参赛我们宝贵的收获。建模就是解决实际问题的过程，不论简单复杂，这些建模的经历都让我对解决问题有了不同角度的看法，或许这就是数模思想吧。\n","id":11,"section":"post","summary":"2019 MCM/ICM 于 2019.1.26 开始、2019.1.29结束，四天四夜的建模比赛给我和我的队友都留下了很多回忆。在此次建模竞赛之前，我参加过一次 MCM/ICM、一次","tags":["Math"],"title":"2019 MCM/ICM 总结","uri":"https://timegg.top/post/2019-01-29-2019-mcmicm-summary/","year":"2019"},{"content":" 2018 年就这样过去了，在这一年里，发生了很多的事情。有值得纪念的，有不愿回想的，有些在我十几年的成长中可以称为里程碑，剩下的很多是简单、重复又无趣的日常。\n 有家人在背后，朋友在身边，我的 2018 年过非常充实，一年中各式各样的光景，都值得去好好记录与纪念。我想用几首歌来回忆和纪念这过去的一年。这些歌曲都取自我在这一年中的一些片段时期、经常重复的、当时最喜欢的歌曲。即使过去了那段时期，每当听到这些歌还是能感同当时的身受，就像回忆刻录在歌曲中一样。\n 这里面的曲子很多是 niconico 上 V 家曲，这一年我对 N 站唱见很感兴趣，听了很多相关的歌曲，关注了很多 N 站唱见。另外也有流行音乐和 Anime 相关曲目。\n 由于我个人文笔相当有限，很难去比较好的描述好听的感受，但是，既然是音乐，如果你感兴趣的话，不妨用三五分钟尝试听一听。\nGlow  ちぎれてく雲間から 溢れ出す涙\n自破碎断裂的云层之间 漫溢而出的泪水\n少しずつ滲む君にぎゅっとしがみついた\n将渐渐变得朦胧的你 紧紧抓住抱在怀中\n—— Glow\n  Glow 是 2010 年由 keeno 上传至 Niconico 的初音未来演唱作品：Glow by keeno in Niconico，其作品优秀程度可以由其再生数和再次创作数可知。\n 我最喜欢的版本是 H△G 的版本。\n H△G 是我 18 年听的最多的乐队，主唱 Chiho 声线有元气、充满积极向上的感觉。H△G 是可以把把 irony 这样失意的歌唱得充满希望的这样一个乐队。\n Glow 这首歌在 H△G 这里充满着“高扬感”，正契合歌名和这个乐队的风格；这首歌在鹿乃那边变得舒缓，吉他版本温润动人。希望每个人都可以闪耀。\nインタビュア  自分勝手に諦めては\n自己任意地就放弃\n独りよがりで傷ついてた\n自以为是地受著伤\n年を取ってやっと気付きました\n年纪渐长终於发现\nねえ まだ\n呐 现在还\nまだ間に合いますか\n现在还来得及吗？\n—— インタビュア\n  インタビュア 这首歌的英语是 Interview。这首歌最初在 2011 年由 クワガタP 投稿于 niconico，之后被广泛翻唱。\n 歌曲的歌词很有意思，喜欢的电影、喜欢的食物、喜欢的话语，最后是喜欢的人，可爱的歌词下实际是个失恋的故事。不断地试探喜欢的人的爱好，不断的将自己与她做比较，不断的思考两人的关系。然后自顾自的受伤、自顾自的放弃。直到年纪渐长，自己看清这些事情时候已经与喜欢的人错开了很多。\n V 家的很多曲子喜欢在歌曲的最后部分设置一段额外的副歌，インタビュア 这首歌与上面的 Glow 在这方面是一样的。\n渋谷川  君は知ってるかい？ 渋谷川って・・・\n你也曾听说过吧？涩谷川这条河\n名前を聞いても ピンと来ないだろう（ピンと来ないだろう\n就算听过这个名字，也一时想不起来吧？\n忘れられたように 都会の隅で\n好像早就被遗忘在城市一隅\nそれでも確かに せせらぎ続ける\n可它如今仍然涓涓细流\nまるで僕の 君への想い\n就像我对你的思恋\n—— 渋谷川\n  **《渋谷川》**是由櫸坂46于2017年发行的抹黑純真专辑中的曲目。\n 这首歌在櫸坂46的作品中并不是最高人气的歌，但我觉得这首歌的旋律格外的抓耳，也正是旋律让我喜欢上了这首歌。\n 友情与爱情的界限是被讨论的很多的问题，告白的勇气是用在承担失败后连朋友也无法做的后果上的，又随着时间流逝，在一起的时间平平淡淡的过去，最后毕业、分散、失去联系，只希望从此之后不论何时，我们的关系能像渋谷川一样如娟娟流水一般永不断绝。\n 这是一首值得纪念的歌曲，对我个人来说有着非同寻常的意义。\nLemon  《Lemon》为继2017年6月的《Peace Sign》后，米津玄师的第八张单曲，是TBS系列电视剧《非自然死亡》的主题曲。该曲目在 Youtube 获得了 297M 的播放量，米津玄师也以词曲参加了 2019 年《红白歌合战》，可以说是绝对非凡的一首曲子。即使非日语歌曲圈的朋友也有不少因其名气听过了 Lemon。我在 18 年也购买了 Lemon 的 CD。（只可惜买了普通版的，现在后悔不如一口气买限定盘）\n Lemon 的歌词大概描述的是对已逝的人的怀念，其 MV 有着不少含义，在网上有不少分析。在 2019 红白歌合战 中，米津玄师来到故乡，饱含深情演唱了 Lemon，以怀念逝去的祖父（待确认）。\n 因其名气，有众多的翻唱版本，其中也有不少非常出彩的，比如泠鸢、柚子茶等等。\n 听到这首歌还是因为几年看了《非自然死亡》这部日剧，很优秀的一部日剧。生与死往往是最容易动人的，其讨论的内容也非常有针对性的，比如校园欺凌。虽然最后两话为了收尾略有夸张成分在内，但整体上是一部非常令人感动的日剧。\n夜明けと蛍  明け方の夢 浮かぶ月が見えた空\n於拂晓之梦中 能看见那片浮月之空\n朝が来ないままで息が出来たなら\n若然能永不迎来清晨 如此呼吸生存下去的话\n遠い遠い夏の向こうへ\n那就往遥远 遥远的 夏日的彼方去\n—— 夜明けと蛍\n  夜明けと蛍这首歌由ナブナ作词作曲于 2014 年并投稿至 niconico，在 2015 年由鹿乃翻唱（具体时间不是很确定）。\n 非常有夏天感觉的一首歌，事实上我对这首歌原曲感触不大，但是鹿乃的翻唱版本很特别，将原本热烈夏风的一首歌，通过吉他弹唱，变得非常舒缓，初听就有惊艳的感觉。配合鹿乃接近本声的声线，有与原曲完全不是一个风格的感受。\n 鹿乃的夜明けと蛍收录在 C94 的 mini 专辑 two 中，自己没有买到 CD（Amazon 老是没货），但是我非常想得到扫盘资源。目前即使搜遍了 Google 也没有拿到，十分可惜。\n2020.01.12 Update - 在 Hong Kong 的信和中心买到了鹿乃的 mini 专辑 《one》和《two》，并且恰逢她的《three》发售，也一起买回来了。\nGod knows\u0026hellip;  私ついていくよ\n我正追随而来\nどんな辛い世界の闇の中でさえ\n无论在如何艰苦世界的黑暗中\nきっとあなたは輝いて\n你也定能 光辉耀目\n超える未来の果て\n超越未来的尽头\n弱さ故に魂こわされぬように\n为了不使弱小的灵魂破碎纷飞\nmy way 重なるよ\n我的路 于前方交重\nいまふたりに God bless\u0026hellip;\n如今 神定将佑护我们二人\n—— God knows\u0026hellip;\n  《God knows\u0026hellip;》是根据凉宫春日系列轻小说改编的动画《凉宫春日的忧郁》2009版的第26集或2006版的第12集《Live Alive》中的插曲，由平野绫（即动画中演唱此曲的凉宫春日的配音）演唱。\n 该曲目非常惊艳的一部分是电吉他，全曲有三段电吉他 solo，个人没学过电吉他，不好评判难度如何，但是其乐曲效果是非常的好。人声部分对唱功有相当的要求，平野绫的表现还是相当不错的。\n 最早接触到这首曲子并不是通过动漫，实际上至今我并没看过凉宫春日。第一次听到这个曲目是在 BanG Dream! 的游戏中的翻唱曲目中，在此版本中，电吉他部分被进一步加强了，配合音游的节奏属性，很快喜欢上了这首歌。\n 从对乐队了解开始，个人就对电吉他相当喜欢，类似的我非常喜欢的电吉他 solo 在《韶音赋》这首歌中。\n 歌词部分，这首歌有着相当积极的感情，refrain 部分更加明显的体现，相当燃的一首曲子，走路无聊了会喜欢听一些节奏比较快的歌。\nアンノドミニ  絶望に僕らは導かれて\n我们受到了绝望的指引\n魂の在り処で\n终于得以在\n巡り会えたんだ\n灵魂之所在相逢\n絶望が僕らを呼び合うから\n我们因绝望而呼唤彼此\n始まりの場所へ\n前往初始的地方\n—— アンノドミニ\n  《アンノドミニ》是 Anime 《魔法使いの嫁》中的插曲，由北條響演唱。\n 《魔法使いの嫁》原作为漫画，其中对魔法的考究与描述十分的吸引人，创建了一个以英国周边为背景的、细腻而有趣的魔法生物、精灵、人类共生的世界。阅读过漫画或者看过动漫的朋友在读到这首歌的歌词时，会与作品中的剧情产生共鸣。在我阅读原作时，觉得在其故事之下有悲伤的感觉，这首歌将这种感觉描述的非常到位。魔法世界生死已经无法自己控制，就将感情寄托于灵魂。\n 北條響的声线非常的好，唱功也相当的不错，只可惜她的曲子不是很多，期待她未来的活动。\n晴天前夜  谁にも言えないような 运命に立ち向かおぜ\n与那不可与外人所道的命运 努力战斗吧\n仆らが望んだ仆らの先に それはあるだろう けれど\n在我们理想中的自己的前方 肯定也存在着那个吧 只可惜\n谁もが欲しがるような 世界中に夸（ほこ）れるような\n任何人都在渴求着的 能够向全世界夸耀的那个\nひとりひとつの自由には まだ 名前すらないんだ\n每个人都能获得的自由 尚且 连名字都没有\n—— 晴天前夜\n  《晴天前夜》 由 はりー 于2017年1月11日投稿，计划收录于2017年2月22日发售的《ウォルピスカーター 2nd Album》，在周刊VOCALOIDとUTAUランキング #485・427中获得第八位的好成绩。\n 提到这首歌就要好好说一下 ウォルピスカータ，也称社长。最早我通过《声》这首歌认识到的社长，其声线非常多变，在《声》这首歌中甚至男声女声难辨。在听过社长其他的一些作品之后发现其音域相当的高，发音细腻。唱功的话，个人感觉有些不稳定，但作品整体表现力还是非常优秀的，是 niconico 有名的男唱见。\n 这首歌相当的“抑扬顿挫”，曲调、节奏舒缓紧凑多变。对唱功的要求相当的高，社长作为该曲原唱，将歌曲感情抒发的非常到位。歌词同前面的一些曲子，消极的歌词中透露着积极的感受，正如歌曲名，晴天前最后的风暴夜晚。\n 在这首歌之外依然推荐社长的其他翻唱作品，《アスノヨゾラ哨戒班》《声》《時ノ雨、最終戦争》都是社长非常有特色的曲目。\n 最后 虽然不知道自己未来还会听几年歌，但是我所曾经喜欢的歌都会因为那些时间所发生的事情变得特别，一直存在我的歌单里面。\n对于 19 年，没有太多可说的，只是期盼能走的更远，来日可期吧。\n","id":12,"section":"post","summary":"2018 年就这样过去了，在这一年里，发生了很多的事情。有值得纪念的，有不愿回想的，有些在我十几年的成长中可以称为里程碑，剩下的很多是简单、重复又无","tags":["Music","Life"],"title":"2018 年我听的一些歌","uri":"https://timegg.top/post/2019-01-25-2018-%E5%B9%B4%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E6%AD%8C/","year":"2019"},{"content":"插值法 在数值算例中有广泛的应用。\n 插值的作法，很直觀地來講，就是，(1) 先從表列值來獲得函數 f(x)，再 (2) 用函數 f(x) 求出我們所要的任何特定 x 之 f(x) 函數值。然而，比較精密且系統化的數值方法卻不是用這兩個步驟來進行插值，原因是前述兩階段方法對於插值的精密度並沒有控制，效率較差，也比較會有進位誤差。一般在做插值法，是從欲插值點 x 附近的幾個表列點 xi 開始，建立插值函數 f(x)，並且也試著網羅更多表列點來插值，看隨著項數變多誤差會不會變小，如此找出最適合的函數 f(x)。\n Reference from Interpolation and Extrapolation，这是一个对插值法探讨的比较好的网站，也提供了相对的程式供使用，非常推荐参考。\n函数逼近 在很多方面与插值法比较类似，也具有非常广泛的用处，尤其在近些年的前沿问题深度学习中有着重要的作用：什么是深度学习？（从函数逼近论的角度来理解） - 中国科学技术大学。函数逼近我也会在深度学习中进行更多的讨论。\n本文结构：\n 插值法  Lagrange 插值法 Newton 插值法 Hermite 插值法 三次样条插值    在这篇 post 中，将不会对各种插值法的原理进行太多的讨论，只是将相关资料与 Matlab Code 附于此处，供读者参考。能力有限，可能会有一些错误在里面，希望可以通过留言告知，也请多多理解。\n若公式无法正常加载，请刷新重试。\n正文 Lagrange 插值法 Lagrange 插值法 - Wiki\nLagrange 插值多项式（n = 2 时）： $$ p_2(x)=y_0 \\times \\frac{(x-x_1) \\times (x - x_2)}{(x_0 - x_1) \\times (x_0-x_2)}+y_1 \\times \\frac{(x-x_0) \\times (x - x_2)}{(x_0 - x_0) \\times (x_0-x_2)}+y_2 \\times \\frac{(x-x_0) \\times (x - x_1)}{(x_0 - x_0) \\times (x_0-x_1)} $$ 余项（次数为 n 时）：\n$$ f(x)=p_n(x)+\\frac{f^{(n+1)}(\\xi)}{(n+1)!}\\times w_{n+1}(x), a\u0026lt;\\xi \u0026lt;b. $$ 其中：\n$$ w_{n+1}(x)=(x-x_0)(x-x_1)\\cdots (x-x_n) $$ Matlab 实现：\nfunction [y] = Lagrange (x0, y0) % Lagrange 插值法 % input: (x0, y0): 插值点 % output: y: Lagrange 插值函数 n = length (x0); syms x; s = 0.0; for k = 1:n p = 1.0; for j = 1:n if j ~= k p = p * (x - x0(j)) / (x0(k) - x0(j)); end % if end % for s = p * y0(k) + s; end % for y = s; end % function  本函数直接返回 Lagrange 插值多项式，亦有其他输出方法，也可将误差考虑在内，参考 拉格朗日(lagrange)插值及其MATLAB程序。\nNewton 插值法 牛顿多项式 - Wiki\n均差：\n 一阶均差：$f[x_i,x_j]=\\frac{f(x_j)-f(x_i)}{x_j-x_i}$ 二阶均差：$f[x_i,x_j,x_k]=\\frac{f[x_j,x_k]-f[x_i,x_j]}{x_k-x_i}$ n 阶均差：$f[x_0,x_1,\u0026hellip;,x_n]=\\frac{f[x_1,x_2,\u0026hellip;,x_n]-f[x_0,x_1,\u0026hellip;,x_{n-1}]}{x_n-x_0}$  Newton 插值多项式：\n$$ f(x)=N_n(x)+f[x,x_0,x_1,\u0026hellip;,x_n]w_{n+1}(x) $$ 其中：\n$$ N_n(x)=f(x_0)+f[x_0,x_1]w_1(x)+\\dots+f[x_0,x_1,\u0026hellip;,x_n]w_n(x) $$\n  输入：数 $x_0,x_1,\u0026hellip;,x_n,x$；函数值 $f(x_0),f(x_1),\u0026hellip;,f(x_n)$ 作为 Q 的第一列元素 $Q_{0,0},Q_{1,0},\u0026hellip;,Q_{n,0}$\n  输出：$f(x)$ 的近似值 $b_0$\n  Matlab 实现：\nfunction [ y ] = Newton_Insert( x0, y0 ) % Newton 均差插值法 % input: (x0, y0): 插值点 % output: y: f(x) 近似值 n = length(x0); for i = 0 : n Q(i, 0) = y0(i); end % for for i = 1 : n for j = 1 : i Q(i, j) = (Q(i, j - 1) - Q(i - 1, j - 1)) / (x(i) - x(i - j)); end % for end % for b(n) = Q(n, n); for k = n : -1 : 1 b(k - 1) = Q(k - 1, k - 1) + b(k) * (x - x(k - 1)); end % for y = b(0); end % function  Hermit 插值法 Hermit 插值法 - Wiki\n前面介绍的插值公式，都只要求插值多项式在插值基点处取给定的函数值，在许多实际问题中，不仅要求插值多项式与函数在各插值基点值相等，还需要在相应插值基点处有若干阶导数相等，这类问题称为 Hermite 插值问题。\n在这里只考虑在各基点均有一阶导数的 Hermite 插值问题。\nfunction H = Hermite( x0, y0, z0 ) % Hermit 插值法 % input: (x0, y0): 插值点; (x0, z0): 对应点一阶导 % output: H: f(x) 近似值 n=length(x0); syms x; s=0.0; for k=1:n p=1; for j=1:n if j~=k p=(p*(x-x0(j)))/(x0(k)-x0(j)); end % if end % for b(k)=p*p*(x-x0(k)); q=0; for j=1:n if j~=k q=q+1/(x0(k)-x0(j)); end %if end % for a(k)=p*p*(1-(2*(x-x0(k))*q)); s=a(k)*y0(k)+b(k)*z0(k)+s; end % for H=s; end % function  三次样条插值法 样条插值 - Wiki\n样条插值是分段多项式插值的优化，其中有分段线性插值、分段抛物线插值等多种插值方式。为使分段插值函数在插值区间的子区间的端点连续而使用条样插值的方法。\n函数：\nMathJax BUG\n\u0026gt; \\begin{equation} \u0026gt; S(x)= \u0026gt; \\left\\{ \u0026gt; \\begin{array}{lr} \u0026gt; S_1(x), x\\in [x_1,x_2],\u0026amp; \\\\ \u0026gt; ... \u0026amp; \\\\ \u0026gt; S_i(x), x\\in [x_i,x_{i+1}],\u0026amp; \\\\ \u0026gt; ... \u0026amp; \\\\ \u0026gt; S_n(x), x\\in [x_n,x_{n+1}]\u0026amp; \\\\ \u0026gt; \\end{array} \u0026gt; \\right. \u0026gt; \\end{equation}  $$ a=x_1\u0026lt;x_2\u0026lt;\u0026hellip;\u0026lt;x_{n+1}=b $$\n是二次连续可微的，右方函数都是不高于三次的多项式或者零多项式，且满足条件：\n$$ S(x_j)=f(x_j),j=1,\u0026hellip;,n+1. $$ 则称 S(x) 为函数 f(x) 的三次条样插值函数。\n 输入：$x_1,\u0026hellip;,x_{n+1};f_1=f(x_1),\u0026hellip;,f_{n+1}(x_{n+1});f_{p_1}=f\u0026rsquo;(x_1),f_{p_2}=f\u0026rsquo;(x_{n+1}).$ 输出：$S_i(x)=\\sum\\nolimits_{i=1}^{4} A_{k,i}(x-x_i)^{k-1} = 0$ 的系数 $A_{1,i},A_{2,i},A_{3,i},A_{4,i},i=1,\u0026hellip;,n$  Matlab 实现：\nfunction [ A ] = Cubic_Spline_Interpolation( x0, y0, fp1, fp2 ) % 完备的三次条样插值法 % input: (x0, y0): 插值点; fp1 = f'(x1); fp2 = f'(x_n+1); % output: 详见上述描述 n = length(x0) - 1; for i = 1 : n h(i) = x0(i + 1) - x(i); b(i) = (y0(i + 1) - y0(i)) / h(i); end % for d(1) = b(1) - fp1; d(n + 1) = fp2 - b(n); for i = 2 : n d(i) = b(i) - b(i - 1); end % for % ———————————————————— %用三对角算法求上述方程组的解 % ———————————————————— for i = 1 : n A(1, i) = y0(i); A(2, i) = b(i) - (h(i) / 6) * (m(i + 1) + 2 * m(i)); A(3, i) = m(i) / 2; A(4, i) = (m(i + 1) - m(i)) / (6 * h(i)); end % for end % function  结尾 插值法是函数逼近问题的一种解决方案，函数逼近更多的在于理论方面的说明，如最佳一致逼近、最佳平方逼近等等，这里我也没有尝试写一些比较通用的算法与 Code 供使用（Matlab 工具包中提供了非常多的函数逼近工具可供使用）。在后面了解深度学习的过程中，函数逼近问题肯定是无法被避免的。\n","id":13,"section":"post","summary":"插值法 在数值算例中有广泛的应用。 插值的作法，很直觀地來講，就是，(1) 先從表列值來獲得函數 f(x)，再 (2) 用函數 f(x) 求出我們所要的任何特定 x 之 f(x)","tags":["Matlab","Math"],"title":"Matlab 实现几种常用插值法","uri":"https://timegg.top/post/2018-11-02-matlab-%E5%AE%9E%E7%8E%B0%E6%8F%92%E5%80%BC%E6%B3%95%E4%B8%8E%E5%87%BD%E6%95%B0%E9%80%BC%E8%BF%91/","year":"2018"},{"content":"问题 求解线性方程组\n$$ \\left{ \\begin{array}{c} a_{11}x_1+a_{12}x_2+\u0026hellip;+a_{1n}x_n=b_1 \\ a_{21}x_1+a_{22}x_2+\u0026hellip;+a_{2n}x_n=b_2 \\\n\u0026hellip; \\ a_{n1}x_1+a_{n2}x_2+\u0026hellip;+a_{nn}x_n=b_n \\end{array} \\right. $$\n其中方程组系数 $a_{ij}(i,j=1,2,3,\u0026hellip;,n)$ 与右端项 $b_i(i=1,2,3,\u0026hellip;,n)$ 均为实数，且 $b_1,b_2,\u0026hellip;,b_n$ 不全为零，上述方程组简记为 $$ Ax=b $$ 其中 $$ A=\\begin{bmatrix} a_{11} \u0026amp; a_{12} \u0026amp; \u0026hellip; \u0026amp; a_{1n} \\ a_{21} \u0026amp; a_{22} \u0026amp; \u0026hellip; \u0026amp; a_{2n} \\ \u0026hellip;\u0026amp;\u0026hellip;\u0026amp;\u0026hellip;\u0026amp;\u0026hellip; \\ a_{n1} \u0026amp; a_{n2} \u0026amp; \u0026hellip; \u0026amp; a_{nn} \\ \\end{bmatrix}, x=\\begin{bmatrix} x_{1}\\ x_{2}\\ \u0026hellip; \\ x_{n}\\ \\end{bmatrix}, b=\\begin{bmatrix} b_{1}\\ b_{2}\\ \u0026hellip; \\ b_{n}\\ \\end{bmatrix}. $$ 解线性方程组直接法（也称精确解法）的定义为：\n 若计算过程中没有舍入误差，则经过有限次的算术运算可以求得方程组的准确解的方法。\n 其主要有两类方法：\n Gauss 消去法  Gauss 消去法 Gauss 列主元消去法 Gauss 按比例列主元消去法 Gauss-Jordan 消去法   直接三角分解法  Corut 方法 $L^TDL$ 分解 追赶法    本篇只用 Matlab 实现上述算法，不涉及算法的介绍与证明，如果对证明与原理比较感兴趣，详情参考：\n Wiki - Gaussian elimination Wiki - LU decomposition  并且事实上这些算法在 Matlab 中都有既成的函数或者工具包，虽然 CS 里面有一句话：“如果有现成的轮子那么绝对不自己造。”很有道理，但是对于算法的理解还是需要亲自尝试，这样才能比较好的理解。\n在最初编写这些算法时，我的 Matlab 代码风格还没有确定，以至相比于后续算法的源码，这些源码会显得比较的不规范，我会进行一部分的修正，但是毕竟时间比较久，修正程度可能比较有限，如果有一些问题，欢迎联系。\n正文 Gauss 消去法 Gauss 消去法 function x = Gaussian_elimination( A, b ) % 高斯消去法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A, 1); % 矩阵 A 阶数 if size(A,1)~=size(A,2) || size(A,1)~=n error('Matrix does not match') end for k = 1 : n - 1 if A(k, k) == 0 % 检测 A 是否为正定矩阵 for i = k + 1 : n if A(i, k) ~= 0 for j = k : n t = A(k, j); A(k, j) = A(i, j); A(i, j) = t; end % for else error('A is singular.'); end % if end % for end % if for i = k + 1 : n l(i, k) = A(i, k) / A(k, k); for j = k : n A(i, j) = A(i, j) - l(i, k) * A(k, j); end % for b(i) = b(i) - A(i, k) * b(k); end % for end % for x(n) = b(n) / A(n, n); for k = n - 1 : -1 : 1 sum = 0; for i = k + 1 : n sum = sum + A(k, j) * x(j); end % for x(k) = (b(k) - sum) / A(k, k); end % for end % function  Gauss 消去法就非常的基础了，不过是平时我们解方程的固有过程，用来练习一下 Matlab 基本语言的使用。\n当初在做这些课题的时候对代码的健壮性考虑的较少，主要是来理解算法的。如果有相应的需求，需要进一步的修改。\nGauss 列主元消去法 function x = Gaussian_principal_element_elimination( A, b ) % 高斯列主元消去法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A, 1); % 矩阵 A 阶数 if size(A, 1) ~= size(A, 2) || size(A, 1) ~= n error('Matrix does not match') end % if for i = 1 : n [ap, p] = max(abs(A(i : n, i))); p = p + i - 1; if ap == 0 error('divide by zero!') end % if if p \u0026gt; i t = A(i, :); A(i, :) = A(p, :); A(p, :) = t; t = b(i); b(i) = b(p); b(p) = t; end % if %消元计算 m = A(i+1:n, i) ./ A(i, i); A(i+1:n, i+1:n) = A(i+1:n, i+1:n) - m * A(i, i+1:n); b(i+1:n) = b(i+1:n) - m * b(i); A(i+1:n, i) = zeros(n-i, 1); end % for x = zeros(n, 1); x(n) = b(n) / A(n, n); for i = (n - 1) : -1 : 1 x(i) = (b(i) - A(i, i+1:n) * x(i+1:n)) / A(i, i); end % for end % function  Gauss 按比例列主元消去法 function x = Gauss_proportional_column_principal_elimination( A, b ) % 高斯消去法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A, 1); % 矩阵 A 阶数 if size(A, 1) ~= size(A, 2) || size(A, 1) ~= n error('Matrix does not match') end A_max = max(A, [], 2); % A 行最大值 for i = 1 : n s(i) = A_max(i); if s(i) == 0 error('A is singular.') end % if p(i) = i; end % for for k = 1 : n - 1 %%%%%%%%%% 待完成 r = 1; % 解 abs(a(p(r), k)) / s(p(r)) = max_k\u0026lt;=1\u0026lt;=n (abs(a(p(i), k)) / s(p(i)); %%%%%%%%%% if A(p(r), k) == 0 error('A is singular.') end % if if k ~= r temp = p(r); p(k) = p(r); p(r) = temp; end % if for i = k + 1 : n A(p(i), k) = A(p(i), k) / A(p(k), k); for j = k + 1 : n A(p(i), j) = A(p(i), j) - A(p(i), k) * A(p(i), j); end % for end % for end % for b2(p(2)) = b(P(1)); for i = 2 : n sum = 0; for j = 1 : i - 1 sum = sum + A(p(i), j) * b2(p(j)); end % for b2(p(i)) = b(p(i)) - sum; end % for if A(p(n), n) == 0 error('A is singular.') end % if x(n) = b2(p(n)) / A(p(n), n); for i = n - 1 : -1 : 1 sum = 0; for j = i + 1 : n sum = sum + a(p(i), j) * x(j); end % for x(i) = (b2(p(i)) - sum) / a(p(i), i); end % for end % function  Gauss-Jordan 消去法 Gauss-Jordan 消去法就是在上述任一方法之中，消去步骤中对主元行外的所有行进行操作，其他没有任何变化，代码依方法选择而变，在此不进一步考虑。\n直接三角形分解法 Crout 方法： function x = Court( A, b ) % Court 方法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A); L = zeros(n, n); U = zeros(n, n); for i = 1 : n L(i, i) = 1; end % for for k = 1 : n for j = k : n U(k, j) = A(k, j) - sum(L(k, 1 : k - 1) .* U(1 : k - 1, j)'); end % for for i = k + 1 : n L(i, k) = (A(i, k) - sum(L(i, 1 : k - 1) .* U(1 : k - 1 , k)')) / U(k, k); end % for end % for [L,U] = myLU(A); [n,m] = size(A); y(1) = b(1); for i = 2 : n for j = 1 : i - 1 b(i) = b(i) - L(i, j) * y(j); end y(i) = b(i); end % for x(n) = y(n) / U(n, n); for i = (n - 1) : -1 : 1 for j = n : -1 : i + 1 y(i) = y(i) - U(i, j) * x(j); end x(i) = y(i) / U(i, i); end % for end % function  Court 方法是三角分解法中最简单的一种，计算量会大一些，但该方法适用于任意情况的方程组。\n$L^TDL$ 分解法 $L^TDL$ 分解法适用面比较窄：必须是实对称矩阵。此时使用这种方法可以比较好的减少计算量，增加计算速度，但实际原理与 LU 分解法类似。\n若是追求比较通用的方法，LDU 分解法是 LU 分解法的优化，但整体上大同小异，在此不占用篇幅专门书写它们的算法了。\n追赶法 追赶法的适用范围也相当的窄：三对角实线性方程组。其本质就是 $LU$ 分解法在这里的运用，解这样的方程非常的迅速，需求的计算量也非常的小。\n对于追赶法有一篇比较好的文章可以参考：Thomas, L.H., Elliptic Problems in Linear Differential Equations over a Network. Watson Science Computer Laboratory Report, 1949.\n其中追赶法在国外常称为“Thomas 方法”，在热传导方程等物理方面有着非常广泛的用处。\n结尾 对于实线性方程组，通过恰当的变换，都可以得到任意精确度的数值解或者直接获得解析解，在数值处理上属于最简单的一个类型。\n在数值分析中，这些过程需要交给计算机计算，所以就需要着重考虑其中会由计算机计算产生的误差。因此诞生出了诸多的方法并不断优化，避免了 7种情况 带来的计算误差，使得数据处理更加精确可信。\n数值分析也研究了常微分方程组、函数逼近、超越方程寻根等问题。在这些问题的算法中更加体现出了数值分析的精妙逻辑与魅力，我们使用精妙的方法通过计算机去一步步逼近真实结果，以此用于实际问题中的复杂方程求解。\n这是非常有现实价值与研究价值的，之后我也会分别总结这些方面涉及到的一些算法，本次的线性方程组就是一个简单的入门。\n","id":14,"section":"post","summary":"问题 求解线性方程组 $$ \\left{ \\begin{array}{c} a_{11}x_1+a_{12}x_2+\u0026hellip;+a_{1n}x_n=b_1 \\ a_{21}x_1+a_{22}x_2+\u0026hellip;+a_{2n}x_n=b_2 \\ \u0026hellip; \\ a_{n1}x_1+a_{n2}x_2+\u0026hellip;+a_{nn}x_n=b_n \\end{array} \\right. $$ 其中方程组系数 $a_{ij}(i,j=1,2,3,\u0026hellip;,n)$ 与右端项 $b_i(i=1,2,3,\u0026hellip;,n)$ 均为实数，且 $b_1,b_2,\u0026hellip;,b_n$ 不全为零，上述方程组简记为 $$ Ax=b $$ 其中 $$ A=\\begin{bmatrix} a_{11} \u0026amp; a_{12} \u0026amp; \u0026hellip; \u0026amp; a_{1n} \\","tags":["Matlab","Math"],"title":"Matlab 实现解线性方程组的几类直接法","uri":"https://timegg.top/post/2018-10-12-matlab-%E5%AE%9E%E7%8E%B0%E8%A7%A3%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E7%9A%84%E5%87%A0%E7%B1%BB%E7%9B%B4%E6%8E%A5%E6%96%B9%E6%B3%95/","year":"2018"},{"content":"2019.03 Update: Vol.moe 现已经提供批量下载功能。此文完结。\n原文 这个工具实际上是一个非常简单的东西，但是由于网站确实很不错，所以写在这里作为一个推荐。\n之前在寻找一些漫画资源的时候，偶然遇到了这个漫画网站：Vol.moe\n网站上有很全的漫画资源并提供下载下载，其漫画质量普遍不错。在网上漫画资源比较零碎的环境下非常方便。\nVol.moe 提供普通用户限量限速下载。初期我对漫画需求量比较大，准备一次性大量下载回头慢慢看，于是捐助成为了会员，开始一本一本漫画的下载。\n令人可惜的是网站明确指出：\n Q4: 為什麼沒有批量下載與全選推送？ A4: 本站帶寬有限，所以不鼓勵批量下載和全選推送，希望大家準備看的書才下載。如果確實需要批量，請尋找支持批量下載的下載軟體吧。\n 所以面对 One Piece 、火影忍者 、银魂 等等动辄八、九十卷的下载链接，实在是没有耐心一个一个点下去，所以用 Python 写一个工具自动下载。\nStep 1. 引入 Pack 、填写用户变量\nfrom urllib import parse from bs4 import BeautifulSoup import urllib.request import urllib.error import chardet import http.cookiejar login_url = 'https://vol.moe/login_do.php' url = \u0026quot;https://vol.moe/comic/*****.htm\u0026quot; // 爬取相应网页的链接 values = { \u0026quot;email\u0026quot;: \u0026quot;**********@gmail.com\u0026quot;, \u0026quot;passwd\u0026quot;: \u0026quot;********\u0026quot;, \u0026quot;keepalive\u0026quot;: \u0026quot;on\u0026quot;, }  Step 2. 用户身份登陆，获取 Cookies\n2018.02.10 Update - Chrome 上有很好用的 Cookies 插件，支持直接从浏览器导出 Cookies 文件。如果觉得这部分比较繁琐，可以手工登陆之后 Download 自己的 Cookies，从而省下这一步。\ndata = urllib.parse.urlencode(values).encode(encoding='UTF-8') user_agent = '*********' // 浏览器记录信息 headers = {'User-Agent': user_agent, 'Connection': 'keep-alive'} cookie_filename = 'vol_cookie.txt' // Cookies 保存文件名 cookie_aff = http.cookiejar.MozillaCookieJar(cookie_filename) handler = urllib.request.HTTPCookieProcessor(cookie_aff) opener = urllib.request.build_opener(handler) request = urllib.request.Request(login_url, data=data, headers=headers) try: response = opener.open(request) except urllib.error.URLError as e: print(e.reason) cookie_aff.save(ignore_discard=True, ignore_expires=True) for item in cookie_aff: print('Name ='+ item.name) print('Value ='+ item.value)  Step 3. 抓取用户登陆网页\nimport urllib.request, urllib.parse import http.cookiejar get_url = 'https://vol.moe/comic/10243.htm' cookie_filename = 'vol_cookie.txt' cookie_aff = http.cookiejar.MozillaCookieJar(cookie_filename) cookie_aff.load(cookie_filename, ignore_discard=True, ignore_expires=True) handler = urllib.request.HTTPCookieProcessor(cookie_aff) opener = urllib.request.build_opener(handler) # 使用cookie登陆get_url get_request = urllib.request.Request(get_url) get_response = opener.open(get_request) print(get_response.read().decode())  其实在网页登陆后，打开相应漫画下载页面 F12 拿到的就是包含所有下载链接的 html ，这个网站的链接不是 PHP 单独对话，直接筛选就很方便。\n上面抓取 html 之后筛选，search “下载 epub” 所有的 \u0026lt;a\u0026gt; 自带链接，抓出来之后就能批量下载了。\n不过很值得注意的是，Vol.moe 有如下说明：\n Q5: 下載線路速度限製及IP限製的問題。 A5: 本站帶寬有限，為防止無序無限製的下載，故已經對下載進行了速度限製、IP校驗與限製 同一IP同時下載線程不能超過3個，部分瀏覽器/工具在線程被限製後整個下載任務會失敗，遇此情況請修改設置，或使用Chrome瀏覽器。 部分瀏覽器或下載工具會使用多線程下載，將會被視為多文件同時下載，達到限製後會需要等待較長時間才會解除限製。\n 使用下载工具下载还是要控制一下线程，防止被屏蔽。Vol.moe 服务器位于北美，网站注册于 TW ，下载速度在大陆感觉还是很不稳定，不清楚跟网站审查下行流量有关系没有。\n","id":15,"section":"post","summary":"2019.03 Update: Vol.moe 现已经提供批量下载功能。此文完结。 原文 这个工具实际上是一个非常简单的东西，但是由于网站确实很不错，所以写在这里作为一个推荐。 之前在寻找","tags":["Python","ACG"],"title":"爬取 Vol.moe 的漫画资源","uri":"https://timegg.top/post/2018-07-27-%E4%BD%BF%E7%94%A8-python-%E7%88%AC%E5%8F%96-vol.moe-%E6%BC%AB%E7%94%BB/","year":"2018"},{"content":"前言 这学期参选了数据库系统概论这门课程，虽然最后拿到了还行的成绩，但是因为复习仓促跳过了很多知识点。\n由于 9 月要参加计算机四级(数据库)的考试，在这里整理一下复习时的笔记，准备一下计算机四级的考试。\n 选用教材：《数据库系统概论（第五版）》高等教育出版社ISBN：9787040406641\n 作为课程，涉及到的数据库知识比较基础，这里做出概要、关键点笔记和一些理解。\n 2018.10.25 Update - 数据库四级翻车了。原因是把考纲中 数据库 + 操作系统原理 复习成了 数据库 + 软件工程，考试时候完全不知道是什么，凭着大一学的一点点操作系统知识……也没有糊过去。等明年 3 月份再参加吧。\n 2019.3.3 Update - 计算机四级，就和网上说的一样，非常的水。完全没有必要专门复习数据库，只需要背一背题库就可以通过，甚至在对数据库一知半解的情况下也都可以通过。毕竟计算机四级只有选择题，而且题库一般比较固定。\n 2019.08.23 Update - 计算机四级证书，事实证明，除了混一混学校的评奖加分，没有任何用处。所以我并不推荐专门准备这个，这些时间可以用来干更多有意义的事情。\n 绪论 数据库系统概述 数据库的四个基本概念：\n 数据(data) - 描述事物的符号记录； 数据库(database, DB) - 长期储存、有组织、可共享的大量数据集合；具有 较小冗余度、较高数据独立性、易扩展性、共享性 的特点； 数据库管理系统(database management system, DBMS) - 计算机基础软件之一；提供 数据定义语言(DDL)、数据操纵语言(DML)、数据控制语言(DCL) ； 数据库系统(database system, DBS) - 储存、管理、处理、维护数据的系统；  其中数据库系统包含以下部分：\n 数据库(DB) 数据库管理系统(DBMS) 数据库应用程序(DBAP) 数据库管理员(DBA)  在不引发混淆的情况下我们称数据库系统为数据库。\n数据库发展阶段：人工管理阶段-\u0026gt;文件系统阶段-\u0026gt;数据库系统阶段。\n数据模型 数据抽象阶段：现实-\u0026gt;概念模型-\u0026gt;逻辑模型-\u0026gt;物理模型。\n概念模型例：实体-联系模型（E-R模型）：\n 实体属性：单值属性/多值属性，基属性/派生属性； 联系类型：内部联系/相互联系，一元联系/二元联系/多元联系，普通联系/递归联系；  实体相关的概念对比：\n 实体：客观存在并可以相互区别的事物； 实体属性：实体具有的某一特征； 实体型：实体 + 属性； 实体集：同一类型实体的集合；  数据模型的构成：数据结构、数据操作、数据的完整性约束；\n常见的数据模型：\n 层次模型 - ex. 树 网状模型 - ex. 图 关系模型 - ex. 表  将概念应用于表中：\n  关系 - 一个表称作一个关系\n  元组 - 行\n  属性 - 列\n  码 - 请看后详解\n  域 - 属性选区的范围\n  分量 - 元组中的一个\n  数据库系统结构 数据库系统的三个模式：\n 模式 - 逻辑模式 外模式 - 子模式/用户模式 内模式 - 存储模式  数据库系统的三级模式构成两种映像：\n 外模式/模式映像 - 逻辑独立性 模式/内模式映像 - 物理独立性  关系数据库 关系的种类：\n 基本关系：实际表 查询关系：结果表 视图关系：虚拟表  关于码：\n 候选码：可以唯一确定元组的一组属性就是一个候选码，但其真子集无法唯一确定元组 ，候选码中不止一组属性 主码：候选码中任意一组 超码：可以唯一确定元组的一组属性就是一个超码，超码中不止一组属性 外码：属性中引用的其他实体的主码   候选码是最小超码，主码是候选码的其中一个\n 关系模式 R(U, D, dom, F)：\n R：关系名 U：属性名集合 D：相应属性名集合的域 dom：属性和域的映射 F：属性间数据依赖集合  关系的完整性：\n 实体完整性：主码不能缺省或非法 参照完整性：外码不能非法 用户定义的完整性：用户定义的数据要求  关系操作：\n 集合运算符：交、并、补、差 专门的关系运算符：选择、投影、连接、除 算术比较符：大于、小于、等于、不等于 etc. 逻辑运算符：与、或、非 etc.   关系操作下有相应的 关系代数 和 关系代数表达式 ，这部分不再写在这里了，不妨去看看书。\n SQL 关系数据库标准语言 SQL 三级结构模式：文件(内模式) -\u0026gt; 表(模式) -\u0026gt; 视图(外模式)。\nSQL 实现：数据定义，数据查询，数据更新，数据操作。\nSQL 结构框架：\ninstance // 实例 { database // 数据库 { schema // 模式 { table // 表 view // 视图 index // 索引 } } }  SQL 数据定义 创建模式与删除模式\ncreate schema schema_name\ndrop schema schema_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create schema test_schame authorization auth_name; drop schema test_schame cascade;  关于 cascade \u0026amp; restricte :\n 标注 cascade 是级联操作，其操作（例如drop）会对子目录下项目同等操作；\n标注 restricte 是限制操作，其操作（例如drop）当子目录下项目非空将报错；\n 创建表与删除表\ncreate table table_name\ndrop table teble_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create table test_table ( sno char(10) unique, // 属性名 数据类型 完整性约束 sname char(10) not null, stel char(10), dno char(10), primary key(sno), // 设置 sno 为主码 foreign key(dno) references test_table2(sno), // 设置 dno 为外码，引用自 test_table2 ); drop table test_table cascade;  创建视图与删除视图\ncreate view view_name\ndrop view view_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create view test_view as select column_name // 涉及到 select 一会再说 from test_table where condition; drop view test_view;  创建索引与删除索引\ncreate unique / cluster index index_name\ndrop index index_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create unique index test_index on test_table(sno, sname); drop index test_index;  SQL 数据查询 select 语法很多，具体内容介绍在众多教程网站上也有很多。这里的笔记就是针对比较常见的 student 表进行的各类操作实例，以此复习各类 select 语法。\n// e.g. // 从 student 表中选取 sno 与 sname select sno, sname from student; // 从 student 表中选取所有 select * from student; // 从 student 表中选取 sage 并减 2015；选取 sname 并小写，输出时重命名为 NAME select sage-2015, lower(sname) NAME from student; // 从 student 表中选取 sno 的和，并计 sname 数 select sum(sno), count(sname) from student; // 从 student 表中选取 sno 并去除重复数据 select distinct sno from student; // 从 student 表中选取 dno 为 cs 的 sname select sname from student where dno = 'cs'; // 从 student 表中选取 dno 为 cs 或者 ms 的 sname select sname from studnet where dno in ('cs','ms'); // 从 student 表中选取 sname 倒数第二位为 l 的 sno select sno from student where sname like '%l_'; // 从 student 表中选取 sname 最后一位为 _ 的 sno select sno from student where sname like '%\\_' escape \\; // 从 student 表中选取 sno = 6 的sname select sname from student where (sno\u0026gt;10 or sno\u0026lt;5) and sno=6; // 从 student 表中选取 cno 为 3 的 sname 并按照 grade, sno 排序 select sname from student where cno='3' order by grade desc/asc, sno desc/asc; // student 表中不同 sname 数 select count(distinct sname) from studnet; // 从 student 表中选取 sno 与对应的平均成绩 select sno, avg(grade) from student group by sno; // 从 student 表中选取挂两科以上的学生 select sno from student where grade\u0026lt;60 group by sno having count(*)\u0026gt;2; select student.*, sc.* from student, sc where student.sno = sc.sno; // 同表连接 select first.sno, second.con from test first, test second where ~; // 异表 join select * from table1 left outer join table2 on... /right outer join on... /full outer join on... // 从 student 表中选取大于平均成绩的 sno 与 cno select sno, cno from sc x where grade \u0026gt;= (select ave(grade) from sc y where x.sno=y.sno) // 从 student 表中选取 con 有 1 的 sname select sname from student where exists (select * from sc where student.sno=sno and cno='1'); // 两层 not exists select sname from student where not exists (select * from course where not exists (select * from sc where sno=student.sno and cno=course.cno ) //course that student didnt choose ); // 两层 not exists select distict sno from sc x where not exists (select * from sc y where sno=001 and not eixsts (select * form sc z where z.sno=x.sno and z.cno=y.cno ) //course that they all chosed ); // 不同 select 的结合 select_1 union/union all select_2; select_1 intersect select_2; select_1 except select_2; // 临时表 select sno, cno from sc, (select sno, avg(grade) from sc group by sno) as avg(avg_sno, avg_grade) where sc.sno=avg.avg_sno and sc.grade\u0026gt;avg.avg_grade;  SQL 数据更新 // e.g. // 插入数据 insert into student(sno, sname) values(002, zerotwo); // 从另一个表选中数据插入 insert into student(sno, sname) select sno, sname from other_tabel; // 更新数据 update student set sage=22 where sno=002; // 选择性更新数据 update sc set grade=100 where 'ma'= (select dno from student where student.sno=sc.sno);  除此之外还有 delete 等各类操作，都是大同小异。\n数据库编程  SQL 编程技术可以有效克服 SQL 语言实现复杂应用方面的不足，提高应用系统和数据库管理系统之间的互操作性。\n SQL 编程来访问和管理数据库中数据的方式主要有：\n 嵌入式 SQL (ESQL) 过程化 SQL (PL/SQL) 存储过程和自定义函数 开放数据库互联 (ODBC) etc.  嵌入式 SQL ：\n实例：（更为完善的例子在书上 page.247）\n// e.g. exec sql begin declare section; // 声明主变量 char sno; char cno; char sname; exec sql end declare section; exec sql include sqlca; // sql通信区 int main(){ ... exec sql connect to database_1; // 连接数据库 exec sql declare v cursor for // 声明游标v，指向select的表 select... exec sql open v; for(;;){ exec sql fetch v into :sno, :cno, :sname; // 推进游标 if(sqlca.sqlcode != 0) break; ... // 可以各种操作，也可以内嵌sql语句 } exec sql close v; // 关闭游标 exec sql commit work; // 提交事务 exec sql disconnect database_1; // 关闭数据库连接 return 0; }  由于学期课程中并没有涉及太多的数据库编程部分，这边就先空下来，后来有空了再补充。\n数据库的完整性 三种数据完整性：\n实体完整性：(primary key)\n// e.g. sno char(10) primary key; // 列级定义主码 primary key(sno, cno); // 表级定义主码  参照完整性：(foreign key)\n// e.g. foreign key(sno) references student(sno) on delete/update cascade; foreign key(cno) references studnet(cno) on delete no action;  用户定义完整性：\n// e.g. sno char(10) not null; // 设置 sno 非空 cno char(10) nuique; // 设置 cno 非重复 check(sex in('mail', 'famail')); // 设置 sex ‘选项’ check(sex='famail' or sname not like'ms.%');  对数据库完整性的操作：\n完整性约束\n// e.g. sno char(3) constrant c1 \u0026lt;...\u0026gt;; // 命名约束，把设置给 sno 的完整性约束命名为 c1 alter table student add constraint c1 \u0026lt;...\u0026gt;; // 修改约束  断言\n// e.g. create assertion [assertion_name] \u0026lt;sql...\u0026gt;;  触发器\n// e.g. create trigger [trigger_name] \u0026lt;sql...\u0026gt;;  关于检查约束、断言与触发器的区别：\n  检查约束：检查是一个SQL，它确保在记录上执行操作之前满足条件；\n  断言：断言是一条SQL，它确保条件满足或停止对数据库对象执行的操作；\n  触发器：触发器是在数据库中更新，插入或删除之前或之后执行的一段SQL；\n  数据库安全性 常通过下面几种方式控制数据库安全性：\n用户识别：即最常见的‘登陆’控制。\n存取控制：自主存取控制(DAC)、强制存取控制(MAC)。\n// e.g. DAC grant select on table table_1 to user_1; // 授予权限 grant all priviliges on table student, course to user_2, user_3; // 授予全部权限 grant select on table table_1 to public; // 授予角色权限 grant update(sno) on table table_1 to user_1; with grant option; // 授予可再授权权限 revoke select on table table_1 from user_1 cascade/restrict; // 收回可再授权权限需要cascade  // e.g. MAC // 包含 主体：许可证级别；客体：密级，并满足： * 仅当主体的许可证级别大于或等于客体的密级时，该主体才能读相应的客体； * 仅当主体的许可证级别小于或等于客体的密级时，该主体才能写相应的客体；  视图：前面已大致介绍；\n审计：用户级审计 \u0026amp; 系统级审计；\n加密：常见；\n关系数据理论  关系数据理论涉及了不少逻辑相关，学习的时候觉得很奇妙，尤其是其中的公理系统和以之推出来的最小依赖集求法；我的笔记中只记下了便于复习的提纲，所以较细致的部分还需要参考书上内容。\n 关系模式 R(U, D, DOM, F)\n R：关系名 U：组成该关系的属性名集合 D：属性组U中属性所来自的域 DOM：属性向域的映象集合 F：属性间数据的依赖关系集合  依赖关系 （重要）\n 函数依赖（FD）： 关系 x, y; 若 x1 != x2 能推出 y1 != y2，则称 y 函数依赖于 x。  平凡依赖 / 非平凡依赖； 完全函数依赖（F）/ 部分函数依赖（P）； 传递函数依赖 / 直接依赖；   多值依赖（MVD）： R(U)上关系r，给定的一对（x，z）值，有一组Y的值，这组值仅仅决定于x值而与z值无关，记x-\u0026gt;-\u0026gt;y;  平凡依赖 / 非平凡依赖；    码（复习）\n 候选码：可以唯一确定元组的一组属性就是一个候选码，但其真子集无法唯一确定元组 ，候选码中不止一组属性 主码：候选码中任意一组 超码：可以唯一确定元组的一组属性就是一个超码，超码中不止一组属性 外码：属性中引用的其他实体的主码   候选码是最小超码，主码是候选码的其中一个\n 范式（重要）\n 1NF：所有属性不可分解； 2NF：非主属性完全函数依赖于主码 3NF：非主属性既不部分依赖于码也不传递依赖于码（仅要求最外层是非主属性）； BCNF：每一个决定属性因素都包含码：  所有非主属性对每一个码都是完全函数依赖； 所有的主属性对每一个不包含它的码，也是完全函数依赖； 没有任何属性完全函数依赖于非码的任何一组属性；   4NF：每个非平凡多值依赖 X→→Y（Y不属于X），X都含有码：  不允许有非平凡且非函数依赖的多值依赖 允许的非平凡多值依赖是函数依赖    范式推导：\n 1NF -\u0026gt; 2NF：消除非主属性对码的部分函数依赖 2NF -\u0026gt; 3NF：消除非主属性对码的传递函数依赖 3NF -\u0026gt; BCNf：消除主属性对码的部分和传递函数依赖，此时已经实现了函数依赖范围内的彻底分解 BCDF -\u0026gt; 4NF：消除非平凡且非函数依赖的多值依赖  数据依赖的公理系统\n 逻辑蕴含：对于满足一组函数依赖 F 的关系模式 R\u0026lt;U,F\u0026gt;，其任何一个关系 r 若函数依赖 X→Y 都成立,（即 r 中任意两元组 t, s,若 t=s,则 t[Y]=s[Y]）,则称 F 逻辑蕴含 X→Y; Armstrong公理系统：  自反律： y in x in u =\u0026gt; x-\u0026gt;y in F 增广律： x-\u0026gt;y z in u =\u0026gt; xz-\u0026gt;yz 传递律： x-\u0026gt;y y-\u0026gt;z =\u0026gt; x-\u0026gt;z   推理规则  合并规则： x-\u0026gt;y x-\u0026gt;z =\u0026gt; x-\u0026gt;yz 伪传递规则： x-\u0026gt;y wy-\u0026gt;z =\u0026gt; xw-\u0026gt;z 分解规则： x-\u0026gt;y z in y =\u0026gt; x-\u0026gt;z   函数的最小依赖集：  F 中任一函数依赖的右部仅含有一个属性 F 中不存在这样的函数依赖 X→A，使得 F 与 F-{X→A} 相等（即 F 中函数依赖不能由其中的其他函数依赖导出） F 中不存在这样的函数依赖 X→A，X 中存在真子集 Z 使得 F-{X→A}∪{Z→A} 与 F 等价（即 F 中各函数左侧都是最小属性集中的）   求候选码准则：  准则1：如果属性 A 只在 F 中各个函数依赖的左端出现，则 A 必是码中的属性 准则2：如果属性 A 只在 F 中各个函数依赖的右端出现，则 A 必不是码中的属性 准则3：如果 A 不在F的各个函数依赖中出现，则 A 必不是码中的属性   求候选码方法：  根据准则3：把不在 F 中出现的各个函数依赖中出现的属性去掉，因为这些属性一般对模型没什么意义 根据准则1：确定码中必须有的属性集（设为 M ） 根据准则2：去掉码中肯定没有的属性 确定余下的属性集（设为 W ） 从属性 M 开始，令 K=M，如果 KF +=U，K 就是候选码。否则从W选择属性加入到 K 中，直到 KF +=U，K 就是候选码（注意可能有多个候选码）    // e.g. 求函数最小依赖集实例 F = { A → BC ， B → AC ， C → A }，求 Fmin { [step.1] F= { A → B ， A → C ， B → A，B → C，C → A } [step.2] G=F-{ A → B } AG += AC，不包含 B，所以 A → B 保留 G=F-{ A → C } AG += ABC，包含 C，所以 A → C 删除，令 F=G ， F={A → B ， B → A，B → C， C → A} G=F-{ B → A }， BG += BAC，包含A，所以 B → A 删除，令F=G，F={A → B，BC， C → A} G=F-{ B → C }， BG +=B，不包含 C，所以 B → C 保留 G=F-{ C → A }， CG += C，不包含 A，所以 C → A 保留 [step.3] F={ A → B ，B → C ，C → A } }  数据库设计  需求分析阶段：了解分析用户需求 (数据 and 处理)； 概念结构设计：综合归纳用户需求形成概念模型，形成概念模式 (E-R)； 逻辑结构设计：概念模型转化为数据模型并优化，形成逻辑模式，进一步优化为外模式； 物理结构设计：选定储存结构和存取方法，形成内模式； 数据库实施：建立数据库、编制程序、数据入库、调试运行； 数据库运行与维护：及时评价、调整、修改；  数据库恢复 事务：是用户定义的一个 数据库操作序列 ，这些操作要么都做，要么都不做，是一个不可分割的工作单位，恢复和并发控制的基本单位；\n事务的性质：\n 原子性：要么全做要么不做； 一致性：要么写入正确的结果，要么不写入； 隔离性：详看并发控制（关于交叉进行）； 持续性：commit之后修改是持久的；  故障：\n 事务故障：逻辑故障、完整性约束下的中止事务； 系统故障：停电、死机； 介质故障：储存盘损坏； 病毒：病毒攻击；  备份：\n 动态备份 / 静态备份； 海量备份 / 增量备份；  恢复策略：\n 事务故障：反向扫描log，按步骤恢复至故障事务开始的标记； 系统故障：  log中有记录 commit：redo，正向扫描； log中无记录 commit：undo，操作同事务故障；   介质故障：恢复数据库并常规使用 log 恢复；  检查点技术：checkpoints文件记录当时所有事务清单和最近的log的地址，redo文件记录检查点位置，可以提高故障恢复效率；\n 记录：日志写入-\u0026gt;检查点写入-\u0026gt;数据写入-\u0026gt;重新开始文件写入； 恢复：重新开始文件找到最后检查点-\u0026gt;事务清单上的事务进行审计-\u0026gt;正向扫描log，无 commit：undo，有 commit：redo；  并发控制 面对的三种问题：丢失修改、不可重复读、读取脏数据；\n事务执行：事务串行执行、交叉并发执行(单机)、同时并发执行(多机)；\n技术：排他锁(X) read \u0026amp; write \u0026amp; 共享锁(S) read only；\n封锁协议：\n 一级封锁协议：修改前加上X锁，可以防止丢失修改，不能保证可重复读和脏数据； 二级封锁协议：一级封锁基础上，读取前加上S锁（到读取结束），可以防止丢失修改和脏数据，不能保证可重复读； 三级封锁协议：一级封锁基础上，读取前加上S锁（直到事务结束），可以防止三种问题；  活锁 \u0026amp; 死锁：\n 活锁：一个事务持续等待，没有逻辑上锁死； 死锁：逻辑上锁死；预防或诊断解除（超时法、事务等待图法）；  可串行化调度：多个事务的并发执行是正确的，当且仅当其结果与按某一次序串行地执行这些事务时的结果相同。可串行化调度当然也保持数据库的一致状态；\n可串行性：是并发事务正确调度的准则。在RDBMS中，作为并发控制的正确性准则。一个给定的并发调度，当且仅当它是可串行化的，才认为是正确调度；\n两段锁协议（可串行化的充分条件，但并不保证避免死锁）：\n 第一阶段：获得封锁（扩展阶段）； 第二阶段：释放封锁（收缩阶段）；  粒度：封锁对象的大小，区别为逻辑单元和物理单元；\n多粒度封锁：同时支持多种封锁粒度；\n多粒度封锁协议：\n 允许对多粒度树中的每个节点独立加锁； 节点加锁意味着所有后裔加锁； 显示封锁 / 隐式封锁（因上一条引起）；   多粒度封锁效率低，因为它需要检查上下所有节点的加锁情况\n 意向锁（如果对一个结点加意向锁，则说明该结点的下层结点正在被加锁，对任一结点加基本锁，必须先对它的上层结点加意向锁）：\n 意向共享锁（IS）：后裔拟加S锁； 意向排他锁（IX）：后裔拟加X锁； 共享意向排他锁（SIX）：S+IX的效果（意思是要读整个表并且可能更新一些数据）；   申请封锁自上而下，释放封锁自下而上。\n 关系查询处理和查询优化 查询分析：查询语句的语义分析；\n查询检查：安全性检查 \u0026amp; 完整性检查；\n查询优化：\n 代数优化：关系代数表达式的优化；此处内容较多，详看书本 page.281 物理优化：  基于规则的启发式优化  选择操作  小关系：全表扫描 主码相关：主码索引 非主属性：比例较小索引，较大全表 非等值或者范围：同上 OR：一般全表   连接操作  已按照连接属性排序：排序-合并方法 连接属性上有索引：索引连接法 其中一个表比较小：HASH join方法     基于代价估算的优化  代价估计：  全表B块，全表扫描cost=B 全表B块，选择条件码值对应，平均搜索cost=B/2       基于代价估计的优化  结尾 对照书上看了一看，发现学的是真的粗糙，像数据库编程、数据库安全都很粗略地看了过去，学习过程中也没有实际做出什么东西来，这份笔记涉及的部分也差了很多，只是为了通过期末考试。\n因为学期的课程讲到关系查询就结束了，所以之后的内容如管理系统、大数据部分，在课程和复习中只大致浏览过。\n如果未来有用到数据库的内容，那么再复习并更新这篇文章。\n","id":16,"section":"post","summary":"前言 这学期参选了数据库系统概论这门课程，虽然最后拿到了还行的成绩，但是因为复习仓促跳过了很多知识点。 由于 9 月要参加计算机四级(数据库)的考试","tags":["SQL","Database"],"title":"数据库系统概论复习笔记","uri":"https://timegg.top/post/2018-07-13-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/","year":"2018"},{"content":"Linux 真的是越用越喜欢，或许过一阵子会转战 Linux，在此之前我先把自己 Win 平台上常用的软件列出来，以作备份，也供未来参考。\n由于软件的替换与不断地更新，移动硬盘中各种软件安装包备份删来删去。其实大部分软件都没有太大的必要去备份其安装包，不如直接记录使用的软件，在未来安装新系统或者系统恢复的时候有个参考，直接从相应的官方网站下载也并不会耗费太多的时间。\n同时也可以理清楚我使用 Windows 的一些理念，也作软件推荐使用。\n基本类型：大多为实现使用 Windows 所需要的基本功能的软件\n BandiZip：非常绿色的解压缩软件，“干净”的软件是我最大的需求； Thunder 5：早期的迅雷版本，基本的功能已经足够我的使用。并且早期版本可以避免资源审查、没有限速、没有广告； ScreenToGif：录屏并生成 Gif 图。在聊天向别人展示东西时 Gif 往往比截图好用。该工具只有不到 5M 而且纯净； MEGAsync：个人认为顶级云盘之一，要不是墙内一般人没办法使用，百度网盘早倒闭好几次了； uTorrent：校内 PT 资源下载指定软件；  2019.11 Update - BanditZip 也开始带广告了，我的青春结束了。之后安装 BandiZip 要选择 19.07 之前的历史版本，并在安装之后将其断网。这样就可以避免它的广告了。\nDaily\n Telegram Wunderlist：2019 年被 Windows 收购为 Windows TO-DO 内置在 Windows 1908 版本中。除去同步问题外还是挺好用的； Mailbird：由于是收费软件，后来改成了用 Windows 自带的 Mail 查看邮件； Internet Download Manager：同样也是收费软件，所以后来弃用了； ShadowsocksR AO：日程管理软件一般用一个就够了，AO 比较的重，个人不是很喜欢； Typora：主力的文字书写工具，也是我最喜欢的； WinEdt Sumatra PDF Anki Send Anywhere：终于找到了一个比较好的 iOS 与 Windows 端互传文件的解决方案。Send Anywhere 在同局域网少量文件的情况下互传很快速和方便； Pop Player：传说是最好的本地播放器，不过我的本地播放的需求不大，所以目前并没有很多的体验。但是新版本内嵌了广告，所以还是要下载历史版本并断网禁止更新才可以； Zotero：开源好用的文献管理工具；  Design\n Adobe Photoshop CC 2017 Adobe Illustrator CC 2017 Adobe Premiere Pro 2017 Adobe After Effects CC 2017 Adobe Media Encoder CC 2017 FontView OK：Windows 端快速查看所安装字体的很好用的一个工具； Format Factory Waifu2x-Caffe Sai  2020.01 Update - Adobe 的软件我还是很喜欢追更新的。虽然由于价格问题我确实没有买正版，但是我会避免商用的。另外格式工厂名声已臭，不如都用 Media Encoder。\nCoding\n Jetbrains WebStorm Jetbrains Pycharm Intellij IDEA Eclipse Java Oxygen Visual Studio 2015 Visual Studio Code：自从改到 Linux 端开发，我的 Windows 端就只安装 VSC 了； Matlab R2014a：这软件实在是太大了，安装起来很麻烦而且费时间，所以如果不是实验必要，我一般不会使用 Matlab； SQL Server 2014 Management Studio My SQL Workbench 6.3 CE  OS\n Git Bash MobaXterm Terminus：一个开源的 SSH 和 Shell 工具，做的非常漂亮。没错，这就是我选择它的原因，半透明的亚克力效果非常漂亮。VSC 也可以安装相应的皮肤，不过稳定性不太好； VMware Workstation Pro Windows Sandbox：1908 开放的内置沙盒功能确实方便了很多，之前都是要在 VMware 上专门安装一个 Windows 虚拟机来跑一些奇奇怪怪的东西。使用 Sandbox 就省去了安装虚拟机的麻烦，而且运行性能也还不错； OpenHardWare Monitor：监控系统各种数据的工具，偶尔电脑遇到点毛病，怀疑是硬件问题的时候就可以用这个软件来监控一下系统底层的运行状态； Rufus CPU_Z  Games\n Xpadder 5.7：为数不多的手柄键盘映射软件，从此之后键鼠游戏也可以用手柄玩了； iToolsAVM：iTools 在我的电脑上经常出问题，后来发现 PP 助手还算好用，不是那么流氓，所以之后偏向于使用 PP 助手了； Osu! Logitech G Hub：买了罗技的带几个宏按键的鼠标，就需要安装 G Hub 来设置映射；把鼠标上两个按键设置成 Ctrl + Win + Left 和 Ctrl + Win + Right 并启动虚拟屏幕会非常方便，简直生产力大增；  2019.11 Update - 买了 Steam 手柄之后了解到 Steam 给它的手柄提供了非常强大的自定义工具，真正现了我用一个手柄玩任何游戏的梦想；\n2020.02 Update - 今年才发现 PP 助手倒了，但是对于我来说，无法连接网络的 PP 助手变成了一个很强大的本地 iOS 设备管理工具。没有网络 PP 助手变得非常纯净，恰好满足我的需求。还是要对 PP 助手开发者们致以感谢；\n","id":17,"section":"post","summary":"Linux 真的是越用越喜欢，或许过一阵子会转战 Linux，在此之前我先把自己 Win 平台上常用的软件列出来，以作备份，也供未来参考。 由于软件的替换与不断地","tags":["Windows"],"title":"Windows 常用软件记录","uri":"https://timegg.top/post/2018-05-05-windows-app/","year":"2018"},{"content":"我接触 Photoshop (PS) 大概已经一年了，在此期间断断续续地学了一些东西，也教了一些身边的朋友去使用 PS。为了方便别人和自己，之前写过一些教程，不过效果并不是很好，因为 PS 使用中的知识大量且琐碎，很难在短时间都掌握下来。\n所以与其细致的手把手交别人怎么用某一个工具，不如记录一些我在使用 PS 中的一些理解。我相信这些理解是较为通用的，在更深层次地学习 PS 的过程中或许能有帮助。\n关于软件\n官网下载：如果没有购买许可证有 7 天试用。\n关于平面设计\n 平面设计（Graphic Design），又称图形设计：平面设计师可能会利用字体排印、视觉艺术、版面（page layout）等方面的专业技巧，来达成创作计划的目的。平面设计通常可指制作（设计）时的过程，以及最后完成的作品。 —— Wikipedia\n Photoshop 就是上述所提到的利用专业技巧的工具。有一句被提到无数次的话：Photoshop 的水平高并不代表平面设计的水平高，毕竟工具是工具、设计是设计。\n这句话固然有道理，但是 PS 作为实现设计思想的关键工具，与设计水平形成短板效应。或许一个人有很好的点子，但是没有能力实现；也可能空有 PS 使用水平，做出的东西很难让人欣赏。\n虽然上面提到的两种情况都是极端的情况，但是这里想说的是想要快速提高 PS 使用水平这没有错误，不要被各种劝退学习 PS 的人影响。保持谦虚，不断学习。\n关于审美\n每个人审美各有不同，求同存异。\n关于教程\nPhotoshop 应用很广泛，在网上各处能搜索到 PS 教程。这些教程中偏爱全面、充实，其中的教程视频动辄十几小时长度。能坚持学习完，自然能学到很多东西。\n除此之外的学习途径有目的导向的实践学习方法。在已经了解基础的 PS 工具的基础上，针对一次次项目的具体需求，搜索相关的方法去实现效果。这样的过程时间短，印象深，可以举一反三掌握更多方法。\n两种学习途径各有优劣。面对大型的教程往往不容易坚持下去，而短时间大量的学习容易遗忘；通过各种实践学习到的 PS 知识零散，难以应对比较综合的要求。\n最重要的还是依照自己的习惯来，选择方法坚持学下去才是关键。\nPhotoshop 的层概念 Photoshop 的层概念贯穿全部内容，理解层是大多 PS 学习的第一步，而初学 PS 遇到的不少问题也和层有关。\n善于管理和理解层可以实现很多效果，同时也可以使 PS 更加高效。\n经常涉及的层有：画布、图层、蒙版和通道。\n画布 在创建新 PS 项目时候，我们在项目信息选择的大小即是画布大小。\n画布可以理解为操作者所能看到的范围。超出画布范围即超出查看范围，操作者无法看到其内容。\n画布有这些机制：\n  超过画布范围的图像部分不显示，导出时也不再导出该部分；\n  图层移动到画布外的部分不会被删除，可以重新移动回画布范围内，这点和 iOS App Procrate 有异；\n  可以针对画布范围外的图像进行操作（如画笔），因为画笔等操作是针对图层进行的操作，画布仅为显示的部分；\n想象一下，虽然你看不到画布范围外的内容，但是你拿笔刷的样子非常的帅，甚至可以甩到视野之外。\n  部分操作仅在画布范围内有效（如 Alt + Delete 填充操作），如果操作的图层有在画布外的部分，那么那一部分则不会被填充；\n  一些操作会指明操作对象，如：翻转画布，翻转图层等等。其中值得注意的是，裁剪操作会操作到画布，注意要谨慎使用。\n图层 图层概念基础且重要，因为我们的所有操作都是在相应的图层进行的。\n图层可以理解为我们将一层一层透明的纸叠在一起，它们之间互不干扰：我们可以在第一层画画、第二层写字、第三层粘贴 Logo。这些层相互分离，我们可以自由挪动每一层，改变其相对其他层的位置。我们也可以自由对第一层涂色而不用担心沾到第二层上。同时，上层的图层可以遮挡下层图层，这一点也很好理解。\n图层的方便和好处是不言而喻的。除非你是单图层绘图的神仙，请在合理的情况下多分层并善用“打组”ctrl + g，高效组织图层是优秀 PS 使用者的体现。\nPS 初学者可能会面临经常选错图层和未选中图层的问题：PS 中绝大多数操作都需要选中你要操作的图层，否则无法进行。而有时候选择错误的图层进行操作会产生很多的麻烦。所以，在初学 PS 的时候，每次操作留心一下当前所选中的图层。\n图层有如下几种类型：\n 背景图层：创建 PS 项目时在最底层的图层就是一个背景图层，背景图层不可以调节图层顺序，永远在最下边，不可以调节不透明度和加图层样式，以及蒙版。可以使用画笔，渐变，图章和修饰工具。 普通图层：外部导入图片默认为普通图层，也可以通过其他部分图层栅格化操作变成普通图层，可以进行一切操作。 调整图层：可以不破坏原图的情况下，对图像进行色相、色阶、曲线等操作。调整图层的好处非常多，比如可以逆向修改。 填充图层：填充图层也是一种带蒙版的图层。内容为纯色、渐变、和图案，可以转换成调整层，可以通过编辑蒙版，制作融合效果。 文字图层：通过文字工具，可以创建。文字层不可以进行滤镜，图层样式等的操作。 形状图层：可以通过形状工具和路径工具来创建，内容被保存在它的蒙版中。 智能对像：智能对像实际上是一个指向其它 PHOTOSHOP 的一个指针，当我们更新源文件时，这种变化会自动反应到当前文件中。  关于图层栅格化：很多操作不能在一些图层操作，比如笔刷刷文字图层是不被允许的，但是我们可以通过栅格化将文字图层转化为普通图层。但是因此产生的问题是，我们不再能用文字工具修改该图层上的文字。\n图层栅格化是一种“熵增”性质的操作，在使用中慢慢理解。\n蒙版 蒙版其实可以理解为特殊的图层，其目的在于遮盖。\n蒙版很重要也很方便，在开始阶段不太好理解，不过网上已经有很多比较完善的蒙版介绍了，这里就是一个较为清楚的例子。\n总而言之，使用蒙版只需要牢记黑色遮挡、白色显示就行了。多加练习。\n通道 将一个图层按照三原色拆分为三个图层，这三个图层即通道（当然，通道还有其他的拆分规则）。其本质依然是图层。对每一个通道层的操作也会反应到原合成图层上面。\n通道经常被用于抠图、人像调整、色彩调整上，因为在特定的通道层可以针对一种组成颜色进行操作。\nPhotoshop 机制 “机制”即在 PS 中很通用的部分。在对 PS 工具的了解和熟悉过程中，我们应该会发现这些工具中有不少相似的部分，这些部分效果不同但在一些方面有着异曲同工，这里姑且叫它是 PS 的一些“机制”。\n了解机制可以很好的举一反三。之后拿到一个新的工具，可以很快的熟练它的使用方法。\n  笔刷：PS 中很多工具都是笔刷形式进行操作的（比如画笔、仿制图章、模糊、锐化等等）。调整笔刷的大小、硬度、形状、材质、浓度、透明度，都可以与相应的工具效果进行叠加。\n如：笔刷硬度调小，不仅画笔画出来边缘会更分散，这时候使用仿制图章也会在边缘部分浓度更低、使用模糊的时候边缘的模糊度也会变小。\n笔刷的材质也可以叠加到各种操作中，实现更加方便的修改。\n  确定机制：PS 中很多操作有“确定”这一步（比如导入图片、变换图层），即在上方控制栏中点确定或取消之后，才能进行其他操作。所以如果有时候你发现所有操作都没有反应，这时候可以查看是不是有需要确定的变换尚未点击确定。\n  边框与填充颜色设置：PS 中很多创建的对象都可以调整边缘颜色和填充颜色（比如创建的矩形），这方面与 Office Powerpoint 很相似。\n  不可逆向操作：PS 中的操作在进行之后会即刻保存。比如，当你把一张图片色彩平衡中红色增加25%（色彩平衡面板打开时各参数都在0的位置），确定之后再次进入色彩平衡调节面板，此时各项参数依然在0的位置。如果此时进行红色减少25%的操作，此时得到的图片红色会低于最初状态。\n不可逆向操作也会影响撤回，即：撤回 -\u0026gt; 撤回 = 不撤回（无法递归撤回）。如果要撤回多个步骤，可以使用历史操作功能。\n  Photoshop 原则 “原则”这个词太大了，这里其实是我认为在使用 PS 过程中比较好的习惯：\n  保护原素材的原则：在 PS 的操作中，要尽可能的保护原素材。之前提到的很多操作，如：多复制重要图层作为备份 、不要用橡皮擦而是尽可能使用蒙版 、不要裁剪原素材而是使用复制选区的方法等等都是为了保护原素材。\n这样的好处也是不言而喻的，不仅防止误操作而无法复原，也减少之后重新需要之前的素材的导入操作。\n  分块实现的原则：在 PS 做项目中，每一部分要分块实现，这点和变成的模块和函数一样。例如，如果要把作品风格化，就统一对所有图层操作，中间不做其他部分的工作，在完成这一部分工作之后进行一次备份，之后再进行其他的操作。\n同时也可以进行不同的分支，毕竟甲方的需求往往是多方的，有时需要制作多版本供其选择。\n  自顶向下的工作原则 或者 自底向上的工作原则：这点和写程序很像。以制作一份海报为例，自顶向下即先在海报上面划分好每一部分的工作区，然后分别实现；自底向上即先做好各个元素，然后整体拼合，完成一份海报。\n两种方法各有优缺点，但整体上要保证一个清晰的思路，否则在制作的过程中容易做很多无用功。\n  Photoshop 快捷键 最初我学习 PS 的时候认为快捷键是无关紧要的，无非是提升一些效率。但是在我掌握了一些快捷键之后，体会到快捷键能给 PS 使用者带来的不止效率上的提升。\n一个人的耐心和精力是有限的，在使用 PS 制作作品的时候会被慢慢消耗。比如：在使用工具、调整图层等常用操作的过程中一次次地手动选用工具，不仅思路容易被打断，耐心会很快被消耗。\n使用快捷键可以避免一些讨厌的寻找、切换工具的动作，省下的耐心可以做更多的事。\n在学习 PS 初觉得比较麻烦的事情（比如添加蒙版去掉图片的一部分），到后来很简单的操作就可以完成（加上蒙版，alt + delete 填充黑色，B 调出笔刷，使用 [] 调整笔刷大小，alt + 滚轮 滑动控制缩放，空格拖动画板很快就会完成）。\n所以，掌握部分快捷键在战略上是很有价值的。记忆的过程也要兼顾实践，几次重复使用就可以记下来一个快捷键。\n开始练习 实际操作是很快的掌握、理解一个工具的方法。在有最基本的技能的时候就可以开始做一些练习。下面是当时我着重的几个找练习的方法。\n找好玩的短教程 短教程可以很快的实现，不用担心中间被打断。通过一些短教程的学习，未来想实现一个效果时，可以通过之前学到的方法配合来实现，从而可以做出更多的效果。这个过程类似于记忆法里面的分块。\n短教程自然强调教程要短一些，如果是视频，20分钟以内，几分钟最好，实现一个小功能。太长的教程容易遗忘，边看边记笔记又太麻烦，干脆找一些比较短的教程，看完能做的下来，也不必来回重复看视频。\n几个常用地址：\nBilibili 搜索 PS - 量比较大，总能找到比较感兴趣的；\nDoyoudo - 教程质量有保证，种类比较多，有创意；\n模仿其他人的作品 能用 PS 实现各种功能后，就可以暂时脱离教程了，开始自己摸索。当然，也可以跳过看教程的部分，直接开始模仿制作，这个过程中肯定有很多自己不会实现的东西，这时候再找相关的教程，一点点学习、突破。\n这时候就找一些比较高质量的平面设计作品：海报、传单、网页等等自己去做一做。巩固 PS 的基础技术，还能在模仿中了解到一些优秀作品的制作理念，从中学到一些设计方法，以备后用。\n大一这段时间在学校学生会做一些关于设计海报、传单的工作，在这个过程中搜集到了各类优秀作品，我做出的东西也借鉴了其中的很多东西。\n自己瞎做东西 模仿腻了，就可以自己做自己想做的\n 去汉化组嵌字或者修图，有 Dead Line 生产力加成； 最近听到了一首比较喜欢的歌，拿 PS 给它做一张歌词海报、宣传图片，给别人推荐； 在各种论坛里面水来水去会用到一些表情包，自己会去做一些来用。 周围有许多海报征集活动，时间比较充裕了就回去做一做，作品被选中的成就感也是一种动力。  练习部分的三个阶段是互相参杂的：在模仿和自己自由做东西中发现不会实现的就去搜教程；学习教程中出现了自己的点子就去做一做试试；教程中比较优秀的作品，在看完教程之后自己模仿着做出来等等。在这三个过程的重复中 PS 技术慢慢就提升了。\n在具有一定的 PS 技术之后，平面设计能力的重要性就凸显出来了。\n平面设计涉及字体、排版、配色等几大块，单独一块可能都能拿出来写书，毕竟平面设计确实是作为专业可供选择的。在不断自己学习的过程中，有时间有精力看一些平面设计的专业教程是很有好处的。\n","id":18,"section":"post","summary":"我接触 Photoshop (PS) 大概已经一年了，在此期间断断续续地学了一些东西，也教了一些身边的朋友去使用 PS。为了方便别人和自己，之前写过一些教程，不过效果并不","tags":["Design"],"title":"关于 Photoshop 的学习","uri":"https://timegg.top/post/2018-04-03-%E5%85%B3%E4%BA%8E-photoshop-%E7%9A%84%E5%AD%A6%E4%B9%A0/","year":"2018"}],"tags":[{"title":"ACG","uri":"https://timegg.top/tags/acg/"},{"title":"Database","uri":"https://timegg.top/tags/database/"},{"title":"Design","uri":"https://timegg.top/tags/design/"},{"title":"Life","uri":"https://timegg.top/tags/life/"},{"title":"Linux","uri":"https://timegg.top/tags/linux/"},{"title":"Math","uri":"https://timegg.top/tags/math/"},{"title":"Matlab","uri":"https://timegg.top/tags/matlab/"},{"title":"Music","uri":"https://timegg.top/tags/music/"},{"title":"Novel","uri":"https://timegg.top/tags/novel/"},{"title":"Python","uri":"https://timegg.top/tags/python/"},{"title":"Research","uri":"https://timegg.top/tags/research/"},{"title":"SQL","uri":"https://timegg.top/tags/sql/"},{"title":"Windows","uri":"https://timegg.top/tags/windows/"}]}