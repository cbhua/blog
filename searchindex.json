{"categories":[{"title":"Dairy","uri":"https://chuanbohua.github.io/categories/dairy/"},{"title":"Essay","uri":"https://chuanbohua.github.io/categories/essay/"},{"title":"Lecture","uri":"https://chuanbohua.github.io/categories/lecture/"},{"title":"Read","uri":"https://chuanbohua.github.io/categories/read/"},{"title":"Store","uri":"https://chuanbohua.github.io/categories/store/"},{"title":"Tutorial","uri":"https://chuanbohua.github.io/categories/tutorial/"}],"posts":[{"content":"“不要重复造轮子”整句话在计算机领域很常用，强调如果有既成的工具了，就不要再去费心思自己重复写，有种站在巨人肩膀上的感觉。\n把这句话用到这里的原因是我最近对哲学突然感兴趣，读了几本介绍哲学的书，把曾经没好好上的马哲中的几个问题搞懂了。\n读完之后就觉得，现在我们、至少我、在生活中的那些胡思乱想，或者是一些小小的启发，在两千年以前就已经有人在思考了，并且著书论说，流传至今。与其自己和自己纠缠为什么、该怎么做，不如直接使用哲学家们的思想成果，快捷方便也不容易犯错。\n那反过来想一想就会觉得自己蠢了，花了那么多时间去思考一个个幼稚的问题，得到不成熟的答案还奉为自己思考的成果。\n首先，这件事是真的，想来我之前思考出来的东西确实幼稚，或者即使某天，我的脑子像五月的天空纯净，想出来了一个绝妙的哲学推理，结果一千年前的人已经申请好了专利，并且运用在了生活中。所以考虑这些，自己纠结确实不如直接套用他人思考成果。\n但是自己思考这事肯定不是坏事，参考很多人的哲学思考成果是为了什么，我认为单避免独断论这一件事情就已经是一个充分的理由了。而想要得到这样的结果，自然还是要思考，在了解过一些很有价值的哲学思考成果后，我们的思考依然可以更进一步，或者仅仅使用于每日的生活，都对我有很大的帮助。所以说先别急着自己造轮子，早早学学哲学。\n想要体会直接套用他人哲思成果的快感，就要大概了解我们有哪些选项。这一部分我先大概描述一下哲学史上比较有意思，我认为比较浓墨重彩的部分。在此之后再讨论这些东西对我们思考的基本意义。\n因为我也不是哲学科班出身，所以凭自己理解来写，内容比较单薄，只是哲学历史中的星星点点，并且可能会有错误、或者不合理的地方，欢迎讨论这些，和分享一些你的观点。\n 宗教时期\n哲学发展时期似乎没有明确的划分，大家大多以发展的时代划分，比如公元前、中世纪、近现代等等，或者按照国家划分，因为不同时期的哲学中心往往出现在一个地区。不过这篇文章以内容为重，为了方便理解，就不严谨地把哲学发展的早起划分出一个宗教时期。\n在这个时期内，哲学发展大多具有浓厚的宗教意味，不论是内容或者是形式，并且以基督教发展为主要脉络。\n从雅典时代到东西罗马帝国分裂，一直是基督教是强势方，哲学家为弱势群体。再到后来的基督教三大派系分裂（天主教、新教和东正教），这段时间中的哲思在内容和偏好上都和基督教分不开。作为现代的我们不论偏向唯心还是唯物，总归不会信神了吧，所以这段发展史作为研究哲学发展是很有意义的，但是古为今用的话似乎局限就有点大了。\n不过其中还是有比较有意思的点，“奥卡姆剃刀”就是在这段时期被提出的。\n 切勿浪费较多东西，去做用较少的东西，同样可以做好的事情。—— 《箴言书注》\n 后世常见的说法：“若无必要，勿增实体。” (Non sunt multiplicanda entia sine necessitate.) 是之后爱尔兰哲学家总结的，不过都是一个意思，所罗门诺夫的归纳理论也是基于奥卡姆剃刀公式化的。\n这个原理看似说的大白话，但是确实适用至今，在 AI 和优化领域也广为流传。是现代科学决策理论的基石之一，简称“没事别整那些花里胡哨的。”\n前科学时期\n好了，摆脱了浓重的宗教意味，哲学所思考的内容似乎也更有趣了起来。这段时期取“前科学时期”这个名字的原因是，我认为在这段时间内的哲学思考大多从人出发，强调思考、情感，认知存在，甚至是追求幸福等等，不同于之后科学杀出来之后的“哲学拯救运动”。这些概念之后会再讨论，先从最经典的一句话开始。\n 我思故我在。Cogito, ergo sum.\n 这句话被讨论烂了，我们先跳过去，看看笛卡尔的思考带来了什么。\n首先是形而上学的概念，最早我在本科上马哲的时候，实在不理解形而上学是什么，只记得老师整天在强调什么什么东西又形而上学了，什么什么又不好了，大家不要学习他之类的。整的我觉得当时整天思考形而上学的人们都被宗教洗了脑，每天妄想一些不存在的东西。\n但是这样有名的哲学大家思考出来的东西，就算不考虑时代局限性，其提出这样的概念也是非常 Amazing 的。我们来看看课本上怎么说：\n 形而上学，就是研究世界的本原是什么的学问。\n 换一个更加描述性的说法：形而上学所寻找的是统领一切、高于客观世界而存在的真理。\n现在来仔细看看这个定义，似乎也没毛病啊。一，我们并不知道到底有没有真理，放到现在，万一科学把量子的随机问题解决了，发现机械论成立了，那一堆物理定律、数学定理算不算真理，毕竟机械论确实没办法证伪（机械论的概念一会会提到）。二，我们可以把真理当作认知世界的终极工具，算是实践检验真理的“无穷收敛”情况。\n不过形而上学确实有很多争论，因为单论形而上学这个概念，很多学说都是形而上学之下的，只不过有的基于辩证法、遵守客观现实，但是有的变成了纯粹的唯我论。以至于现在《斯坦福哲学百科全书》也没给出一个关于形而上学的定义。\n所以现在回头看看我们当时争论的不过是一些不遵循辩证法，并且坚持独断论的一些人在不遵循客观事实的情况下进行的想象，这些想象在之后的哲学发展中不攻自破，显得荒谬。\n在这段可以说是“无拘无束”的哲思时代也诞生了几个有趣的观点与假说。\n二元论将物质与精神分离开，强调物质无法干扰精神世界。这个论断看似给人很大的安慰，因为不论我过得怎么样，都只是我物质受到的，只要我精神保持积极，我这个人就没事，因为两个并没有关系。不过一个真正过着二元论生活的人会怎么样呢，估计会是世界上最冷血的人，因为只要他把任何一点喜怒哀乐寄托于外物，比如亲人逝世、与人相爱、仇人羞辱等等，那么他就违背了二元论的原则。\n有够狠，换个好接受一点的。\n阿西莫夫的“盖娅假说”的点子就来自于这个时代的追问：世界的目的性，或者说世界改变的大方向。把这个范围放小一点，把地球想象成一个生命体，所有内部的反应实际上是生命体的生理活动，这个整体的发展视作一个生命体的演变。\n这个假说听起来就很宏大，想象一个以多少个万亿年为周期生长的生物，我们就是其演变的一个原子，大家都可以光明正大地说我是“苍茫大地的一份子”。这个想法很浪漫，有沧桑感，作为科幻小说的 idea 刚刚好。倒是演绎起来会遇到很多问题，这点让历史上认真批评这个假说的人说去。\n科学时期\n好了终于到了科学杀疯了的时期。因为我们现在所生活的世界，几乎没有人不认可科学的力量，所以认可科学、从科学演绎出的哲学更能让人接受，再加上科学的发展加深了人们对世界的认知，哲学思考不再像之前一样难以控制，似乎拥有了一条更窄的、有方向的路。\n首先就是我个人最喜欢的经典经验主义观点：牛顿提出的机械论。解释起来很简单，我觉得有不少人或多或少自己也想出过这个假设：假如所有粒子都可以通过模拟计算得出精确的运动轨迹，那么理论上我们可以模拟整个宇宙的精准变化，或者说，宇宙中发生的所有事情、过去或者未来，都在宇宙大爆炸刚开始的时候被确定了。我今天在写这篇文章，某天某人读到了我这篇文章，都是预定好的。\n有种工科男的浪漫不是吗。虽然目前的科学告诉我们量子是随机的，但是我们也可以猜测量子的随机性是更深层次运动的扰动表现在表面的现象，就像三体运动一样并目前不能被精确预测，或许随着科学的发展、经历了几次颠覆性的改变，我们做到了，到了这个时候我猜机械论肯定又要提到台面上来了。\n机械论明显违背了我们说的自由意志，但是主要问题是，我们嘴上说着它违背了自由意志，但是这件事情并不能证伪，和早期关于存在的思考是一样的。\n机械论也带来了一些虚无主义和享乐主义，只能说机械论并没有把你们安排成太积极的人。这个理论似乎给人带来的负面心态大于正面心态，属于“好听不好用”的理论。\n其实在机械论的深层，运行的是我们喜闻乐见的因果律，哲学上的因果律定义很严格，也有些复杂，不过大概意思和我们平常理解的差不多，还是“因素产生结果”。\nWait 我们是不是漏掉了一个非常有名的原理？没错，是进化论。这是我最喜欢的原理，没有之一，就和我上一篇文章提到的一样，我觉得这个原理真正超出了人类思想范畴，很接近世界运行原理的“真理”。所以我打算之后专门写一篇文章来讲这个，目前暂时先跳过。\n后科学时代\n非常有趣的事情是，科学的推进给哲学家带来了丰富的思考，结果科学自己差点被这些思考“夹死”。\n简单来说就是科学的定位，如果我们坚信科学的力量，那么最终将会导向决定论，虽然不算错误，但是似乎让很多人无法接受；但是如果我们放弃科学，极端情况会变成怀疑论，会影响到因果律的运转，这段辩论非常精彩，推荐找相关的哲学史读一读。\n总之，坚持科学和放弃科学总会到达两个大家都不喜欢的极端。看似这个问题很好解决：我们选一个中间的点不就得了。但是在哲学上这个点还真不好取，因为你需要有理有据的完美地将两个方向划分清楚，只要有一点存疑，就很容易被辩倒。\n康德提出了“物自体”的概念，并阐述了一套理论，不得不说康德是一个程序员的料，他的设计就是程序设计里面的黑箱。\n我来解释一下这个我很喜欢的说法：康德说世界上一切皆为物自体的存在，我们人类可以认知他们，但是，人类只能通过“认知接口”来感知世界，这不就是程序里面的 API 吗；由于人类的认知接口有限，所以我们对物自体的认知程度有限，还有一些部分是我们无法通过既有的“认知接口”去感知的。\n这个说法很巧妙，它把类似于世界上“原理”的东西与人分开，给人类一有限的能力去观测，成功提出了一个让科学处于两种极端中点的说法。不过我个人其实并不是很理解，因为它只是给出了这么一个框架，人类所拥有的“认知接口”就很值得讨论了，这样来说极端情况依然是：人拥有了“全知”的接口，完完全全认清楚了物自体，那么这下子又跑到了机械论下了。\n好了，接下来就轮到大名鼎鼎的实用主义登场了。\n与实用主义齐名的还有经验主义，只不过经验主义很早就出现了，并且在哲学的历史上已经被讨论了很多次，所以主要讲讲实用主义。\n实用主义顾名思义，它真的很实用（请和实用主义原理分开），简单来说，它有一种“我管你怎么讲”的霸气，一个原理，只要它在当下有指导意义、有对我们的帮助，我们就用它，管它其他人讨论这个原理到底是真理与否。\n实际上坚持实用主义的信念，这个对你来说就是真理。尼采就提到过类似的内容：\n 真理和谬误其实全是虚构的，区分真理和谬误的关键是真理实用，而谬误不实用。\n 是不是很省事实用，这样就不用天天纠结自己所相信的东西到底是不是形而上的、到底是不是世界运转的基石等等，有用就好。\n不过问题也有，实用主义容易陷入误区。举一个例子，你只要全心全意相信基督教，那么它可以帮你避开生活中大量的烦恼。很实用，要是每个人都这么搞，全人类幸福感肯定会大幅度增加。但是误区就在这，实用主义并不是乱用主义，乱用主义的原因就在于没有全面的思考这个问题，如果完美地使用实用主义，事实上可以避开绝大多数问题。所以这才有人说实用主义就是“诡辩”，如泥鳅般穿行于各种哲学框架的限制中。\n想了想实用主义，有没有觉得：它实在是太大白话了。事实上就是这样的，我们现在所做的决策，所进行的思考，实际上都可以划分到经验主义和实用主义两种之下。是不是觉得很神奇，哲学界整了两千年的问题，换了一代又一代人去思考，结果放到现代生活，两句话就搞定了。\n当然这也是不全面的思考，人们总归还是要继续探索本源、认知世界。如果只有经验主义和实用主义，那还发展什么，或者说发展缓慢（因为只有极少数人的实用主义可以推进发展）。\n针对人们生活指导方针的哲学危机解决了，那么科学那边呢？\n其实，似乎到现在为止，人们都还没给出一个很好的答复：量子物理的诸多性质、统一场理论的失败（或是尚未成功）暂时打破了机械论和因果律，让科学有了存在的空间。但是边界被打破了，就没有东西来衡量科学的定位了，科学就像是在一个没有边际的空间里飘荡，暂时没有很明确的讨论去指出科学所在，所以科学现在能说的只是：人类的认知能力有限。\n科学也遭难了，我们就想着，实用主义和经验主义之前帮助了人们避免过多的思考，我们是不是可以把这东西也放到科学上想一想。\nMake sense，让我们回顾一下最早提到的“奥卡姆剃刀”，是不是觉得有点相似？相对复杂的理论，砍掉，因为简单的就可用，这就是在科学上运用的实用主义。到这里就不得不承认：\n 那个市侩的、庸俗的、让我们瞧不起的实用主义，竟然是整个科学的核心。\n 再往后的内容就没有多少了，但是核心我们已经拿到了：经验主义和实用主义。善用这两个内容已经可以面对生活中的大部分问题。其他关于科学的讨论还有很多，都有道理，也经常有缺点。\n但是其中有一个我觉得实在有趣：证伪主义。\n他的内容也很简单：只要能够证伪的理论，救属于科学理论。比如：我说“所有的天鹅都是白色的”，你想判断一下这个是我口胡还是真的是想跟你讨论这个事情，就可以想到：只要我找到了一只黑天鹅，这个命题就可以证伪，说明这个确实是科学命题。并不是像“上帝存在”这样的宗教言论。\n所以以后遇到别人的阐述，都可以先过一下证伪主义，看看是不是纯属抬杠。\n 好，内容太多了，差不多已经偏离我写这篇文章的原本目的了。写的过程中越写越起劲，就慢慢跑偏了。\n总之，想说的是，近代哲学和当代哲学给予了非常丰富的关于人生、生活的思考，这些思考大多都在当代社会的检验下得到了一定的认可，按照实用主义的话来说，不妨学习借用一下。\n我们可以很好的用哲学家提供的观点去分析或者构建我们对于事物的思考、对于问题的答案，并且我们的思考也有章可循，便于不断地优化。重要的是，这样不容易犯错，就算不小心犯了错，我们可以立刻根据我们思考所依赖的内容进行修正，这不就是自我思想的迭代吗。\n运用哲学无关纯理性与否，只是在他们搭好的框架下进行自我思考，给出有意义、有帮助的回答，这是很有实用价值的。\n至于实用价值在哪里，就要回到我们在生活中会怎么用到思考。有的是和别人的争论，在这些争论中我们需要讲出我们的见解，而形成这些见解的背景实际上就是你的哲学思考；另外还有做出选择，我们自然要根据自身当下的情况，运用自己思考做出选择，选择无关对错（看怎么看待了），做出选择的时候还是要经过自己的思考；除此之外就是回答一些问题，这也类似于争论时说出自己的简介。\n思考的目的在哪里？这个本身其实就是一个很哲学的问题，但是我们不妨物化一下，“追求幸福”怎么样？就和实用主义的用法要尽可能完备地思考问题类似，我们上述思考的事情最终与个人幸福挂钩。\n还记得之前的一篇关于《美丽新世界》的文章，我尝试提出来一个关于幸福的新定义。那段讨论我觉得确实很有意义，目前也找不到大问题，不过那篇文章只是用来讨论幸福的定义，完全没有提到如何去追求幸福。这篇文章就谈到了一些，希望在思考之后可以找到一些与那篇文章相通的地方，似乎这将是一个很有创造性的内容。\n所以，原本我们在生活中的胡思乱想，放在哲学框架下会变得很有意思，也会让这些思考变得高效。因此，早早了解点哲学，会很帮助思考。站在哲学盖好的大楼上，看待事物会更清楚一些，风景也会不一样。\n","id":0,"section":"post","summary":"“不要重复造轮子”整句话在计算机领域很常用，强调如果有既成的工具了，就不要再去费心思自己重复写，有种站在巨人肩膀上的感觉。 把这句话用到这里的","tags":["Novel"],"title":"不重复造轮子：早学哲学","uri":"https://chuanbohua.github.io/post/2020-09-28-philosophy/","year":"2020"},{"content":"科幻小说读得多了，就会见识到各种各样的脑洞，从最早的平行世界理论到《三体》中的宇宙维度论，这些较为“硬核”的脑洞直接在物理规律上进行了修改，或者是添加了一些内容并进行阐述。除此之外还有一些较为“软核”的脑洞，比如黑暗森林法则或者《朝闻道》中的大统一论，这些像是“宇宙社会学”课题的脑洞也是从不同的角度设定了宇宙的运行逻辑。\n这些脑洞所科幻的层次有深有浅，也就是之前所谓的“软硬核”之分。层次较深的直接针对宇宙的构成、或者运行规律进行修改，这种脑洞阐述的难度很大，也更加容易颠覆一般人的想象。而层次较浅的可以在既有的宇宙运行规律下思考“人文因素”，即这些规律并不干扰世界的运转（狭义）。\n但是，能不能再深一层呢？之前的某一天我在读一些杂七杂八的社会思想文章，比如“年轻人到社会上就会发现事情不是非黑即白”等等这种内容，当时就突然就有了个脑洞：哦，世界上的东西不是非黑即白，那第三种可能是啥？\n上面的脑洞用阐述性的语言来说就是：我们现在的世界中的逻辑（或者说人类对世界上事物的认知）最小粒度是二元性的，即“是”或者“不是”；不管是怎样的事务与问题，我们的思考对其最细致、最基本的认知就是“是”或者“不是”。但是如果这个世界的逻辑最小粒度变成了三元呢？举个例子，我们描述一个东西的存在，除了用“是”或者“不是”描述之外，多了第三种可能，我们暂时称它为“■■”。这个状态我无法描述出来，看样子是超出我思维维度的问题。\n看到这里有没有觉得上面的描述和什么很相似？没错，量子力学中的不确定性似乎可以对应上面的描述。一个粒子的位置和动量存在三个最小粒度的判断：知道、不知道和不确定。\n不过这个并不是我想要的，因为“不确定”这件事实际上处在“知道”和“不知道”的中间。也就是说，如果我们基于“知道”和“不知道”这两个点画一个直线或者线段，那么“不确定”肯定在这条线上，那么这条线（我们姑且叫它“认知域”）还是二维的。\n这样就太无趣了一点，既然说了是科幻脑洞，那我就应该不负责任地放开了去想。\n如果再添一种逻辑种类“■■”，也就是在认知域上再加上一个点，那么此时的认知域就会变成二维的。对于一个事情的判断就可以选择“是”和“不是”之外、也不是不确定的另一种状态，似乎会变得十分有趣。\n但是这样会出现一个问题，前面括号中提到的“或者说人类对世界上事物的认知”是关键。所谓的逻辑二元性实际上是人类认知的范畴，并不能与世界所遵循的原理混在一起。举个例子，或许有一种宇宙生物，在我们眼中消失的东西可以以另一种状态被他们所描述（也就是这个东西所处的状态在“不是”和“■■”连成的认知域上），而我们眼中单纯的存在可能是与“■■”一定程度上的叠加（“是”和“■■”连成的认知域上）。\n所以似乎我们是没办法通过这种方法来刺探宇宙的状态，因为如果更加极端一点，真实宇宙的逻辑种类有“是”、“不是”、“■■”、“▲▲”、“◉◉”…… 等非常多种。人类能做的就是在自己所能理解的逻辑范围内构建科学来理解这个世界，目前似乎人类遇到的问题都还可以 Cover，但是总有一天人类要直面这种逻辑的“降维打击”，有一些问题通过低维逻辑是无法解决的，这时候是不是就是人类科学的末日了。\n嗯……听起来和多维空间的感觉有点像，但是更抽象化了，以至于提出这个概念之后我也不知道怎么往下编了，因为我甚至连一个三维逻辑的例子都举不出来（编，就硬编概念，坑填不上了吧）。但是感觉很有意思，如果某位小伙伴能够演绎一下这个概念，或者有相关的有趣的想法，一定要给我说，我很好奇。\n","id":1,"section":"post","summary":"科幻小说读得多了，就会见识到各种各样的脑洞，从最早的平行世界理论到《三体》中的宇宙维度论，这些较为“硬核”的脑洞直接在物理规律上进行了修改，","tags":["Novel"],"title":"一个关于逻辑的科幻脑洞","uri":"https://chuanbohua.github.io/post/2020-09-20-sciencefiction/","year":"2020"},{"content":"这篇文章有个有趣的背景，它是一篇遗失的文章。\n我最早在去年秋季写了它，上传到了旧 Timegg 上，随着网站服务器关闭，这篇文章没有来得及搬运和备份就遗失了。同时我有印象曾经上传过 QQ 空间，结果在说说清理的时候也删除掉了。\n那么本地备份呢。本地备份在进行一次硬盘转移的时候损坏了，虽然这样的事情发生的概率极低，但是它确实发生了。就这样我的异地异网三重备份全部都丢了。\n我现在只能记起文章的大致内容。因为是一篇“读后感”，所以只要重读这本书，应该能回想起来当时写的内容。正好我刚拿到一本实体版的《夜行》，不管电子版多么方便，读书还是实体版比较有感觉。\n关于文章内容，这应该是我写的最后一篇关于森见登美彦作品的感想，因为这是森见到目前为止的最新的一部作品。我遍读了森见的所有作品，并且一直在期待新作。\n以下内容涉及剧透，或者没看过作品可能有的地方看不懂\n 我们谁都忘不掉她。\n我们六个，是在京都一起度过学生时代的伙伴。 十年前，参观鞍马火祭的途中，长谷川突然间消失。 十年后，六个人再次在鞍马聚首，恐怕是因为想再次见到她吧。\n夜色渐深，彼此轮流诉说出旅行途中的异闻。 我们全员，都遇见了名为岸田道生的画家所画的叫做《夜行》的画。\n 《夜行》的故事很简单，主角大桥君和其四位伙伴在十年前的鞍马火祭中与另一位朋友长谷川走散，之后长谷川便失踪了十年。十年后，五位朋友重新在大桥的邀请下来到了鞍马参加火祭，讲述各自在这十年间的经历，结果发现每个人都经历过一些离奇的事情，并且在这些事件中，总会出现一位叫做岸田道生的画家的作品《夜行》系列。\n有一句话在整篇故事出现了好多次：“世界总在夜里”。十年前，长谷川在鞍马火祭中失踪，虽然在十年后的相聚时，大家都极力避免提到长谷川的事情，但是实际上大家都在那次失踪之后的十年间想念着长谷川。除了大桥，每个人在十年间看都到了夜行这一系列画中的一幅。\n《夜行-尾道》《夜行-奥飞騨》《夜行-津轻》《夜行-天龙峡》\n而在文中也提到了另外一系列作品，即《曙光》系列。据说是与《夜行》相对的、记录着绝无仅有的曙光。\n作品想要表达的是，五位伙伴在长谷川失踪之后都非常想念她，因此他们的世界仿佛都进入了黑夜，每个人都在夜中行走、推进着生活。而在时间的冲淡下，大家也渐渐地敢于接受长谷川消失了这不可改变的事实，也就是“见到了《夜行》这幅画”。唯独大桥君，在十年间从未走出黑夜。\n而在十年后重聚的鞍马火祭上，大桥君在人群中与伙伴们走散，但当他打电话与同伴联系汇合时，却发现世界发生了改变，在这个世界中，十年前失踪的不是长谷川，而是大桥。\n大桥君进入了《曙光》的世界，他在这个世界见到了十年未见的长谷川。而长谷川也为大桥讲述了她在这十年间的经历与故事。\n 岸田氏和长谷川现在还在这个家里生活。他们没有显现姿态，不过是他们的世界被我们的眼睛隐去了而已。同样我们的世界也被他们的眼睛所隐去。能打开这扇窗的，只有岸田氏的《夜行》和《曙光》。\n 直到这时，故事才比较明朗。十年前的鞍马火祭，世界一分为二，在《夜行》的世界，长谷川失踪了十年；而在《曙光》的世界，失踪的却是大桥。大桥在《曙光》的世界中重新见到了《夜行》世界中失踪十年的长谷川，听到了她所讲述的她的十年。此时，大桥终于明白了。\n “我自然地接受了她的那个十年。它确实存在着。就如我的十年也确实存在着的一样。”\n 大桥君此时终于敢于面对长谷川失踪了的事实，从黑夜中走出来。\n 我已经不会再想和长谷川见面了吧。然而对于我来说，仍然清晰回忆起十年之后重逢时她的音容笑貌。她有她的岁月，我也有我的岁月。\n 而因此，大桥重新见到了曙光，甩掉思念，重新开始生活。\n 我站起身，拨通了中井的电话。心中虽然还残留着会不会打不通的不安，但几声呼出音之后，传来了是他带有关心的声音。\n“大桥君……？”\n那个声音如此让人怀念，我深深吸了一口气。”早安“，这么说道。从没有像那个瞬间一样、那么切身的感受到清晨的真意。只为其一度的清晨——。\n一边反刍着这句话，我看向东山的天空眯起了眼睛。炫目之极几乎要引泪而下。山的对面照射来的是曙光。\n  第一遍读完这本书的时候，我把大桥的这种感情当作是喜欢。但是重新读了一遍之后，会觉得把这种思念当作纯粹的喜欢来理解，可能会单调一些。作品中有不少暗示大桥喜欢长谷川，但是友情自然不可以忽略，其他几位伙伴自然是因为失去了一位朋友而伤心。\n这样的主题可以扩展至现实中任何有羁绊的情感，与自己的亲人、朋友或者恋人分开后，世界似乎就分成了两个，在对方的世界里便不再有了你，你的世界中也不会出现他。是接受两个人拥有不同的岁月、迎接曙光；还是陷入思念、漫漫夜行，都取决于自己。\n现在看来这本书表达的是一个很朴素的观点，但是会有共鸣。\n在去年我写下这篇文章的时候，我正在陷入一段时间的胡思乱想，虽然不能说这本书激励了我走出来，但是当时正好读到这本书我是非常高兴的。\n今年也是如此，刚经历了毕业，朋友一个一个都出国工作了，桌游也没人打、游戏也玩得少了。但是想到他们都在经历自己丰富有趣的生活，有着各种各样有趣的新朋友，去往各种漂亮好玩的地方，就会觉得开心。\n等到什么时候再见到他们了，就让他们给我讲讲，在他们的时间里，经历了怎样有趣的事情，见到了怎样好玩的人，是不是很想知道我也经历了什么。\n 至于文章本身，《夜行》属于森见“阴森”系故事的作品，其类似的还有《狐狸的故事》和《宵山万华镜》。但是《夜行》与其他两部作品不同的是，它用几个分散的故事串起来组成主线，表达了一种思想与感受。其他两部作品更倾向于短篇小故事，并没有特别突出的想要表达的核心内容，只当看个痛快。\n《夜行》中的几篇故事，其过程中发生的事情似乎和主线并没有太大的关系，只是为了渲染一种气氛。不过换个角度想一想，作品想要表达人各有自己的生活、各有自己的岁月，相互并不干扰，平行前进。而每篇故事也是发生在一个伙伴身上的，也因此最后一篇才是发生在大桥身上的，前面几篇少作关联似乎也更符合作品想表达的内容。\n对于气氛的渲染，不得不佩服森见的功力。我最早阅读的森见的“阴森“系小说是《宵山万华镜》，在这本书里面森见构建了一个表面并没有任何恐怖元素，却诡异到让人起鸡皮疙瘩的京都宵山祭。给人一种只要在宵山祭中走几分钟，就可以与人间脱离，到一个妖气满满无法逃脱的空间去。\n《夜行》也是如此，虽然作品因为有特定主旨想要表达，而因此表现”阴森“感有所收敛。但是每篇小故事反而让人脱离一些诡异元素地感觉到细思恐极。真正达到了在娓娓道来的日常故事中给人以脊背发凉的怪异感的效果。\n总的来说，我很喜欢《夜行》的设定，共鸣于简单的道理，沉迷于森见灵活的描写。期待森见的下一本”阴森系”作品。\n","id":2,"section":"post","summary":"这篇文章有个有趣的背景，它是一篇遗失的文章。 我最早在去年秋季写了它，上传到了旧 Timegg 上，随着网站服务器关闭，这篇文章没有来得及搬运和备份就遗失了","tags":["ACG"],"title":"森见登美彦作品《夜行》","uri":"https://chuanbohua.github.io/post/2020-09-08-night/","year":"2020"},{"content":"我已经有一个月的时间没有更新过网站了，原因就是我实在忙于准备开学的各种事情。\n 9 月 2 日，我终于来到了位于 KAIST 周边的住处，开始了为期 14 天的隔离。为了这趟飞机，秋季学期入学的大家准备了一个多月的时间，加上旅途中对安全的担心，各种大大小小的突发情况，组成了一次印象深刻的开学。\n大概七月初的时候，我们开始准备开学的事情，期间的事务主要是租房、体检、公证、机票和签证。\n 由于疫情，我们对于能否开学一直保持怀疑，大概七月初的时候，学校还没有发出关于开学的官方通知，大家都有些慌了，毕竟先不说准备签证，机票也不等人。\n等来等去，学校终于在七月上旬发出了通知，内容概括来说就是：秋季所有课程全部 Online，学校不鼓励返校，但是如果你有合理理由，可以自行准备返校。\n这个通知口气很官方，可以达到免责和暗示可以返校的目的。至于合理的理由，对于本科生来说可能需要一些条件，但是对于 Master 来说研究本身就是返校的理由。给老板发了邮件，让他帮我转发一个邮件给学校说明返校的必要性，之后就可以着手准备返校的其他要求了。\n这里需要提一下签证的问题，想要申请留学签，就需要学校的入学证明。只有做好其他返校准备，学校才给发入学证明。\n 所以这时候返校主要准备两件事：体检和租房。\n先说租房，目前疫情下，入境韩国需要 14 天隔离，但是好在韩政府允许居家隔离，只需要完全独立居住即可，也就是说不能有公用部分，比如厕所、厨房之类。\n租房这件事想着简单，但是操作起来问题很多，尤其是和韩国房东交流。房东年龄大多比较大，也因此他们的英语水平不是特别好，有时候只能求助会韩语的师兄来帮忙。除此之外，不少房东并不愿意将住房用于隔离。还有长租短租的考虑，因为隔离结束之后可以申请学校宿舍，便宜又安全。\n找租房也没有太多的途径，找韩国比较大的租房平台，比如 Dabang，一个一个筛选。比较有意思的一点是，韩国大学院周边的租房，因为大多是给学生准备的，房间布置几乎是按照一个模板安置出来的。固有的家具都是床、桌椅、衣柜、电磁炉、洗衣机、厕所这几件，房间面积大多是 20 平方米到 40 平方米（这里的平方米是按照韩国标准来的，换算成中国的平方米标准会小很多），比较大的房间会有阳台。\n价格方面，上面这样配置的房间月租大概在 200k KRW 到 400k KRW 左右，约 1.2k CNY 到 2.4k CNY，包含网络电气（有的也不含电气），一般不含燃气，因为公寓里面大多不通燃气。大田不算特别大的城市，这个价格也算比较便宜。\n租房之后还要签合同，因为需要验房和实体合同，只能求助已经在学校的师兄帮忙跑一趟。签字好之后扫描发给学校。\n 租房的同时也要准备体检。中国大陆这边有规定，如果在境外居住超一年，需要办理国际旅行健康证明，就是俗称的“小红本”。本来这东西不怎么检查，但是我去体检的时候医生告诉我因为疫情，小红本检查变严格了，推荐保险起见还是做了。\n另外 KAIST 给了一张健康诊断书需要填写，主要是流行病的检测，有肺结核的皮试或者胸透，还有常见流行病的抗体检测。大多是和小红本的检测重叠的，所以直接做一个小红本就可以填完整个表。\n出境体检结果大概一周出，拿到表之后和租房合同一起扫描给学校，过了两天学校给发过来了入学证明，可以办签证了。\n 等一下，似乎忘记了什么事情，机票还没买。实际上，在七月份的时候，从大陆出发的航班一直到十月份已经被预定满了。而且价格是平常时段的四倍左右，大概是 4k CNY 到 5k CNY 不等。看来从大陆走似乎是行不通了，港澳台只有澳门可以通行，搜索了一下九月初还有航班余量，价格大概是 1.7k CNY，趁现在赶紧买了。\n 好了，有机票作 Deadline，办理签证也有动力。\n去年去 POSTECH 交换的时候办过一次留学签，流程和材料不算很复杂。但是由于疫情，今年签证要求有一些变化，最主要的是多了核酸检测。这个核酸检测还不是 7 日内，而是 48 小时，也就是说从拿到核酸检测报告起，48 小时之内要把签证材料送到大使馆才行。\n我的户籍地在河南，属于驻武汉领事区，理应在驻武汉领事馆办，但是它因为疫情关了，河南被分配给了驻青岛领区。\n由于实在不想跑青岛一趟，我打算找个旅行社代办。但是在我材料马上准备好的时候，驻武汉领事馆开了，而且开放当天河南籍人员就不能在驻青岛领事馆办理了。\n本来想着不过是换一个领事馆，影响应该不大。结果发现不同领事馆的文件要求不同，而且互不相认，导致我不少材料需要重新弄。\n在此期间遇到了一个比较大的麻烦。韩国每年会评估本地的学校，列出一个非法滞留率低于 1% 的学校名单，去这些学校留学的学生可以免去包括资产证明的一些材料。\n和秋季一同开学的同学聊的时候，谁都没有想到今年 KAIST 居然不在 List 里面，这样我们就需要额外准备很多材料，还要面临拒签的风险。为什么会这样我们也不太清楚，只能照着签证要求来准备。\n 最后卡着核酸检测的时间把材料递交了，签证的事情终于过去了。这期间也夹杂着学校杂七杂八的事情，其中最麻烦的是公证了。\n按照学校要求，所有入学的国际学生需要将自己的学位证和成绩单进行 Apostiile 认证，适用于签署 Apostiile 公约的国家或者地区。但是非常可惜的是中国大陆并不在 Apostiile 公约里面，所以我们只能选择通过韩国大使馆进行公证。\n认证流程可以概括为：公证 → 外事办认证 → 韩国大使馆认证 三个步骤。公证会查验学位证和成绩单的真实性并进行翻译，外事办认证会查验翻译与文件涉外合法性，之后交予大使馆认证。公证处和外事办不属于一个部分，所以需要分开办理。整个流程要 14 天左右，要在开学前拿到。\n 终于凑齐了所有需要的材料，到了出发的时候。\n我们选择的路线是从珠海入境澳门，从澳门坐真航空到仁川机场入境，再由韩国 KTX 转至大田。选择澳门出发的原因是在当时从大陆出发的机票已经被订完了，可以转机的地方并不多，而且大多绕太远。澳门可以持机票过境，所以就选择从这里出发。\n在珠海与同学汇合之后就去澳门海关。很有意思的一点是当晚我们所坐的飞机上几乎都是留学生，因为从澳门出发的其他航班几乎都停了，所以在海关处持机票过境的也都是这些人，大家凑一起非常热闹。\n当晚出现了红色雷暴预警，好在及时消退，没有耽误航班。\n在飞机上也没怎么休息好，担心第二天在机场的情况。我们备好了防护服、护目镜还有基本的酒精和口罩，在下飞机的第一时间穿上。\n幸运的是，我们的航班落地时间是当地的早上 6:30，与其他航班错开时间较大。我们到海关的时候没有人，由于飞机上的学生都是来自大陆的，所以在机场相对比较安全。\n入境检疫要先安装一个 APP 用于隔离期间的监控与体温上报，之后要给在韩国的监护人打电话确认（找师兄帮了忙），最后填表申报，检查一圈之后才放行过境。\n过境之后拿行李，去往大田要坐 KTX。有工作人员安排大巴从机场送到 KTX 光明站，列车上专门分出了几节防疫车厢用于接送入境人员，座位分散，每两排一个人，比较安全。\n到达大田站之后下来就有工作人员进行消毒和填写表格，之后派大巴把我们送到了住所。第二天再去做核酸检测。\n学校在我们来之前会送一箱基本生活用品在门口，包括洁具、纸巾、口罩等，还有一个电热锅还有一些吃的，够撑过两三天的量。\n第二天做过核酸检测之后，居委会(?)还会再送来一大箱吃的和消毒用具，量还不少。\n然后就到了我现在的状态，把前几天落的课补一补，写作业等隔离结束。然后就可以去学校和实验室报道了，真期待解放的那一天。\n 现在想来整个开学的过程也不过如此，按部就班地来，但是回想起当时折腾时候的心态就又觉得这是一个辛苦的过程。为自己折腾的时候也会觉得累，只是过去之后的快乐是真切地。还有家人的帮助、朋友的支持，不管怎样，这都是一次难忘的开学。\n","id":3,"section":"post","summary":"我已经有一个月的时间没有更新过网站了，原因就是我实在忙于准备开学的各种事情。 9 月 2 日，我终于来到了位于 KAIST 周边的住处，开始了为期 14 天的隔离。为","tags":["life"],"title":"开学流水账","uri":"https://chuanbohua.github.io/post/2020-09-03-go-to-korea/","year":"2020"},{"content":"N.B. 我个人没有受到过任何游戏专业的科班教育，下面的很多内容都是我根据玩过的很多游戏自己想出来的，或者是受到网上一些内容的启发所得到的。所以说有一定概率是片面理解，读个开心或者有所交流都可以。\n 游戏有很多种性质，可重复性是其中的一种，强调重复进行游戏的体验，这点与游戏的生命周期息息相关，毕竟每个人对于玩腻的游戏总提不起太大的兴趣。\n对于网络游戏来说，可重复性往往很容易提升。如车枪球类，由于几乎没有完全相同的操作，所以就没有相同的两局游戏，其游戏的可重复性大大提升了。但是玩家依然可能会在更加广义的情况下感觉到厌倦，如人物技能、队伍配比等。\n对于卡牌游戏，可重复性是非常重要的元素，毕竟卡牌游戏的大多数操作都可以精准复盘，其操作粒度很大，很容易出现非常接近的两局游戏的情况。如果一个玩家体验过多类似场景的卡牌复盘，就会觉得厌倦。卡牌游戏的设计相较于其他游戏面临着更大的压力。\n桌游受限于实体，没办法随便地增加设定或者内容，这导致可重复性直接影响着一款游戏的生命周期长度：狼人杀等无规则边界游戏可以自由演绎，跟不同的人进行游戏其演绎方法不同，这使得狼人杀的可重复性很高，而 TRPG 系列更甚；相较来说一些剧本类型的游戏，如《山屋惊魂》，其可供使用的剧本量直接决定了一群玩家的游玩次数上限——毕竟知道了真相之后没有人有重复游玩的动力。\n如果非要抠狼人杀等桌游的游玩次数上限，只能说如果一位玩家熟练充当了各类狼人杀中角色，见过了绝大多数套路，那么他可能会对狼人杀产生厌倦；而 TRPG 也会因为故事的老套而丧失吸引力。但是发生这种情况之前，这些游戏已经达到了非常高的可重复性标准。\n我们在购买桌游时，会很关注 Broad Game Geek 上面对于该桌游可重复性的参考，毕竟我们都不想几十块甚至几百块买的桌游玩了两三天就玩腻了。这一点适用于平常可以长期在一起玩桌游的朋友们，对于破冰游戏或者仅仅是社交为主要目的的游戏，就不用考虑这些。\n就和上面说的一样，每种游戏的不同部分，可重复性都不太相同，这些整体合起来就决定了整个游戏的可重复性评价。\n以一个比较经典的游戏作为例子：大富翁，这类游戏的操作随机性非常强，毕竟几乎全部游戏内容推进由骰子完全随机进行，随机到一个人都可以玩的程度。因此它游玩过程中的可重复性并不算很低，每个玩家在每局不同的游戏中面临着各种各样的起起落落。\n但是若论游戏的目标性，大富翁就会差得很多，无非是买房、升级房子、收钱这些，地图板块也比较有限，地区换皮不影响整体游戏玩法。再加上繁琐的钱币转换，导致大富翁在我们这里进行次数并不多，只在大家都累的情况下，不动脑子的玩一次。所以整体上评价大富翁的可重复性的话，只能说是非常一般。\n在关键的地方增加游戏的可重复性可以大幅度提升游戏质量，而在无关紧要的地方提升游戏可重复性就会让游戏显得很繁琐。\n写这篇文章的动机是最近我买到了之前想玩很久的一个桌游：《全球惊悚》。作为比较有名的大型桌游，其价格曾一度劝退，知道两年后的现在我才成功玩上。毕竟是 Board Game Geek 上的高分大作，这个桌游的质量确实很不错，在内容丰富度和平衡性方面都做得挺好。只是在我初玩这个桌游的时候，就预感到了这个桌游的可重复性很成问题。\n以下的描述我尽可能避免提及游戏内的元素，以至于即使没有玩过这个桌游的读者也能读懂：《全球惊悚》的获胜方式是完成三个神秘任务。但是游戏本体针对每个 Boss（即每局游戏）只提供了四个可供选择的任务，也就是说每局任务是四选三。这使得一局游戏之后、至多两局游戏之后，对于所有玩家来说任务就是公开的，便没有任何剧情上的新颖感，而这正是这个桌游好玩的关键元素之一。\n除此之外，大多数任务的种类都比较接近，通过每回合行动收集一种叫做“线索”的道具，然后使用到任务指定的点上。这也让游戏乏味了很多。毕竟游戏极大的篇幅侧重在了探索中的遭遇，而当所有玩家明确目标之后，这些遭遇就变得无关紧要，一切行动以攻破三个（已知的）任务为目标。\n这就好比大家把动物之森完成了房债模拟器。在这种情况下，这个桌游其他部分的可重复性都变成了繁琐的负担，毕竟单以获胜为目标的大家并没有心思去关注它。整个游戏的可重复性甚至被压缩到了四个不同 Boss 的四局游戏中。\n幸好，桌游的一种乐趣在于和不同的人玩，对于每个人来说都是崭新的游戏。所以我仍可以尝试把初次体验《全球惊悚》的快乐带给其他人。\n说过了《全球惊悚》这一反面例子，我很想说说《魔城马车》这一正面例子。《魔城马车》是我最喜欢的桌游之一，这个桌游难得地办到了极高的可重复性与游戏趣味性的平衡。这是一个阵营类型的游戏，每一局人物阵营配分配不同，在相互试探他人阵营的同时搜集圣物获得胜利。\n不同于狼人杀阵营模式，《魔城马车》阵营分布是对称的且没有套路；也不同于《风声》类包含不同人物的阵营对抗。这样朴素的阵营对抗加上千变万化的游戏进程推进，使得《魔城马车》具有极高的可重复性，在我这里可被称作典范级别的。\n若要说《魔城马车》的些微缺点，只能说每一局游戏前期推进对于玩得较多的玩家比较无聊，后期卡牌流动又比较受限，且获知对方阵营的方法比较少。但是即使如此，马车让我和我的朋友们玩了两年的时间，体验着实优秀。\n总之，在设计游戏的过程中，往往较少的约束会带来更高的可重复性，当游戏推进可以跳开既有的游戏卡牌时，并且调用人的主观能动性，那么这个游戏在可重复性方面已经可以达到非常高的层面。\n但是需要注意的是一个游戏被称作优秀的游戏并不只在于无限的可重复性（并且这也常常不可能），更为重要的是在多次重复中，依然可以吊起玩家的兴趣，在可重复性与可玩性中间取得较好的平衡。在有限量的游戏内容中创造出更广阔的游玩体验，而不是靠不断注入内容来引发玩家兴趣。\n","id":4,"section":"post","summary":"N.B. 我个人没有受到过任何游戏专业的科班教育，下面的很多内容都是我根据玩过的很多游戏自己想出来的，或者是受到网上一些内容的启发所得到的。所以说有","tags":["ACG"],"title":"桌游的可重复性思考","uri":"https://chuanbohua.github.io/post/2020-07-22-board-game/","year":"2020"},{"content":"这是一篇关于智云云台的纵向测评。\n这是一篇纵向测评，说来惭愧，我至今为止只用过两个云台，还都是智云这个品牌的。没有亲自使用就没有发言权，所以我是做不了横向测试的。所以说只能简单说说这两个云台的使用体验差距，以及我对其功能的评价与期待。\n我使用的第一个云台是智云 Smooth 4。这是一个手机云台，没办法安装相机，这是促成我更换云台的最大动力。目前使用的云台是云鹤 M2，可以架起我的微单。之后将从几个我比较在意的方面对比两个云台。\n结构\nSmooth 4 结构比较简单一些，三轴中俯仰轴是一个手机夹，水平轴收纳时可以扣在航向轴上来睡眠。这个睡眠功能非常好用，方便快速返回拍摄状态。\nM2 结构就复杂很多了，单三轴调平都得花一小会，收纳的时候每个轴还有螺丝需要松开，整体上来说配置要麻烦太多。并且 M2 睡眠状态下无法扣合，导致即使是睡眠状态携带，依然要用手抓好三轴的位置，麻烦太多。\n大小\n大小是一个云台非常关键的属性，因为这关心着你是否愿意把它带出去。Smooth 4 相当大，其握柄很长，加上泡沫包装盒的空间应用率不高，导致整个 Smooth 4 会在背包中占据很大的空间。背包不够大的话，单云台就占用了半边。\n不过 Smooth 4 手柄长也有一定的好处，如果你不是很在意划伤云台，那么可以把云台像三脚架一样直接插在背包侧袋，这样拿出来也好拿。就是偶尔没注意，转身的时候磕到了就会很心疼。\n相比来说 M2 的大小就好很多，其手柄较短，三轴电机的折叠方法比较省空间，整个包装大小属于可接受的范围。\n所以单论云台大小，M2 优于 Smooth 4.\n功能\n功能方面其实没得比，M2 属于专业云台，Smooth 4 是入门款，各方面功能都是 M2 吊打。取几个比较关键的差别。\nM2 可以手动设置电机强度，取决于云台支撑设备的不同。也就是说不论是轻型的 Go Pro，还是中型的 iPhone Pro Max，甚至是微单，都可以有使用的电机强度来达到最好的云台效果。因为如果使用较高的电机强度支撑比较轻的 Go Pro，在稳定过程中可能会出现震动。\n而 Smooth 4 只能用于手机，其手机夹是固定在云台上的，不能装相机或者 Go Pro 之类的设备。电机强度没办法替换，所以根据手机重量不同，云台的使用手感也不太一样。\n其次是 M2 有摇杆，可以控制云台移动。摇杆这个东西在最初我挑选云台的时候并没有考虑，因为觉得用处不是很大，反正自己转云台也是转，没有必要专门使用摇杆。但是在平常的使用中会感受到摇杆的重要性，它可以很大地提升一些特殊镜头的稳定性，比如全景或者定点跟随。如果没有摇杆就只能举着云台左右移动，不论怎样，稳定性都会受到一定的影响。\n除了上面说到的比较明显的差别，还有一个不太容易发现，但是关键时刻影响体验的差异，即三轴限制。Smooth 4 的航向轴无法旋转 360°，而且水平轴是锁定的。没错，水平轴锁定，没有方法旋转水平轴。所以说 Smooth 4 能做到的特效比较有限。M2 就比较全面了，三轴都是可以任意旋转，这样的话全跟随会比较自然一些，而且也可以实现一些比较特别的特效。\n价格\n价格是很关键的元素。在我买相机之前就考虑了配一个云台，但是相机云台最主流的大疆如影系列，入门款价格就要 2500 左右，标准版的在 4000 靠上。这价格都快赶上我的相机了 ，所以只能看看其他品牌的。\n智云的这个云台应该是我能找到的最便宜的相机云台，大概 1100+，相比 Smooth 4 发行价 799 也没贵多少，只能说对于有相机云台需求的人来说 Smooth 4 性价比真实低得不行。不过也因此 Smooth 4 贬值的很快，2020 年春季价格大概降到了 400 左右，算是对得起它的功能。\n整体上我还是觉得云台是个挺保值的东西，其迭代速度大概是三四年才有一个新版本，而且新功能不多，旧云台的价格也不会下降很多。不过云台作为摄影设备，属于一种耗材，磕磕碰碰很难避免，所以因成色掉价不少，买一个用到坏掉退休想起来也不是很贵。\n说了好多东西，到现在为止我还没拿我的 M2 认真出来拍视频，应该还有很多隐藏的优点和缺点还没有被发现。目前总的来说 M2 是这个价格能买到的最好的（好像也是唯一的）相机云台，而手机云台的选择就广很多了，甚至收二手的完全没有问题，因为这东西甚至比 Kindle 吃灰率还高。\n","id":5,"section":"post","summary":"这是一篇关于智云云台的纵向测评。 这是一篇纵向测评，说来惭愧，我至今为止只用过两个云台，还都是智云这个品牌的。没有亲自使用就没有发言权，所以我","tags":["life"],"title":"智云云台 Smooth 4 \u0026 M2 简易对比","uri":"https://chuanbohua.github.io/post/2020-06-22-panzit/","year":"2020"},{"content":"Steam Controller 推出了好几年了，最早 Steam 在 2015 年开始卖这个手柄，价格并不便宜。最早的售出价格为50刀，由于只能在美区 Steam 上购买，因此还需要加上国际转运费用和美国本土配送费，总花销下来大概 ￥550 左右。单论手柄价格，对比 Xbox 经典款和 PS4 经典款还是便宜一些的，但是相对于其他两种并不算很方便去买到。\n我买这个手柄的契机是 2019 年黑五附近，当时 Steam 搞了个清仓活动，50刀的 Steam Controller 只卖 5刀。\n我当时了解到这个消息的时候满脸都是 ？？？，不知道该从哪里开始吐槽好。Steam 的手柄这几年来卖得确实不怎么地，所以就赶紧清仓完事，之后不搞手柄了。\n但是这个折扣的价格就比较离谱，原来你们卖个手柄都赚这么多的吗？或者 G 胖良心亏本卖手柄？\n总之，抱着买一个 G 胖亏一个的心态我去美区 Steam 看了看，发现还真是 5 刀一个，那这种事情怎么能旁观，就算冲着之后会绝版的情况我也得买一个。\n其实最开始我是担心已经没货了，毕竟和我一样心态的人应该不少：手柄好用不要用是一回事，但是之后这手柄就绝版了，5块钱买一个收藏起来总没错。不过想到这个活动只能在美区 Steam 购买，需要 VISA 和美区账号，还有全局 VPN，应该能劝退不少人。\n我买的还算比较早，因为活动刚开始我就看到了那个消息，就跑过来买了，所以存货应该还挺充足。我一共购买了三个，两个是给同学的。所有手柄大概持续了一天多一点就卖完了，只庆幸我当时买得早。（G 胖的清仓大胜利）\n我所买到的价格为 5刀手柄本体的价格 + 8刀的美国本地运费的价格，没错，真正的运费比产品贵系列。然后再加上转运的费用，大概每个到手的价格为 ￥120 左右。\n我为了买这个手柄还现场学习了海淘：找了个转运公司，要了邀请码注册了账户，交了转运费，之后就开始了漫长的等待。\n不得不说贪便宜的海淘的周期实在是太长了，在美国地区，手柄从发货到送到仓库花了 7 天，但是整个转运流程花了整整两个月。所以手柄到我手上的时候我已经回国了，幸好当时没有把这个手柄送到交换的学校。\n 下面说说手柄本体，我用这个手柄也半年时间了，拿它打了不少游戏，各种类型的都有。\n和网上很多评价这个手柄“异型”、“功能鸡肋”、“不适应”不同，我个人非常喜欢这个手柄。\n首先我的手还算比较大，这个偏大的手柄我握起来正舒服。但是如果手较小一些，握这个手柄可能会比较辛苦。这就是为什么很多人说这个手柄并不考虑亚洲人手型的原因。手柄整体形状使得握持感还不错，虽然相比 Xbox 似乎还有一些差距。\n这个手柄最有特点也最有区分度的地方就在于两个触控板。Steam 在设计这个手柄的时候就给它赋予理念为非常新颖的手柄，事实确实也是这样。\n这两个触控板的手感非常的好，手在上面滑动的时候，手柄会持续反馈震动，越靠近边缘，震动反馈越强烈。其触控板的材质是磨砂塑料，触摸手感还行，毕竟不能苛求在手柄上放玻璃。\n触控板的精准度很不错，几乎可以达到笔记本触摸板的滑动精准度，但是 Steam 手柄似乎是为了针对游戏进行优化，触控板控制鼠标的时候会有物理惯性，你可以把鼠标甩出去（这个过程中的震感很爽）。\n既然有两个触控板，那么可以搞得事情就很多了。\n首先是使用触控板进行第一人称游戏时的优势。传统手柄移动视角大多使用右摇杆，遥感控制幅度是相对较难的，所以视角移动速度一般不太容易控制。但是如果是触摸板的话就不一样了，可以靠手指在上面滑动来实时控制视角转动速度，其感受和鼠标控制非常接近了，我甚至可以用这个手柄很舒服的玩 Minecraft，即使我之前非常抵触用手柄玩第一人称游戏。\n其次是控制鼠标，玩一些不太方便用手柄玩的游戏。一个例子是饥荒，我觉得纯手柄的操作方式来玩饥荒实在是很难受，物品框要一个一个选，物品要一个一个操作，原不如键鼠玩得痛快。但是有 Steam Controller 的触摸板映射为的鼠标就不一样了，我可以直接把键鼠的按键映射到手柄上，然后用触摸板控制鼠标，使用体验甚至比键鼠还好。\n手柄背后有两个额外的按键，类似于 Xbox 精英手柄背后的四个额外按键，可以在一些游戏中起到作用。但是在 Steam 手柄上的这两个按键的手感真的不怎么样，而且我一紧张老容易用力抓手柄，就会误触，所以我也没怎么用这两个额外按键。\nSteam 为自家手柄提供了很完善的手柄控制台，可以针对每一个游戏写一套映射并保存，之后打开任何一个游戏，手柄会自动切换到对应该游戏的映射方式，非常方便。\n官方在宣传手柄的时候强调了“窝在沙发里玩游戏”，这是一个很棒的想法。有了这个手柄，大部分游戏都可以使用它来操作，就算它原来是键鼠游戏。而一个手柄的大小和使用方便程度都远没有一个手柄来得舒服，而且是一个蓝牙手柄，真正做到窝在沙发里打饥荒。\n手柄的缺点也不是没有，首先是这个手柄长得确实丑，有特色归有特色，但是异型程度确实影响了手柄的设计感和美观。另外是质感不怎么样，全塑料+部分地方磨砂，轻倒是还算轻。\n值得吐槽的是，这个手柄是 15 年的手柄了，作为一个蓝牙手柄依然使用的 5 号电池供电。第一次使用手柄的时候需要拆开背板，往里塞两个电池。\n但是小毛病在我这里瑕不掩瑜。在拿到这个手柄之前我就想象我能用手柄玩几乎所有游戏，这样多方便，Steam 的手柄帮我实现了这个愿望。所以现在看来这个手柄停产还是挺可惜的，之后估计短时间不会有这样带有触摸板的手柄了，该键鼠操作还是键鼠操作。\n","id":6,"section":"post","summary":"Steam Controller 推出了好几年了，最早 Steam 在 2015 年开始卖这个手柄，价格并不便宜。最早的售出价格为50刀，由于只能在美区 Steam 上购买，因此还需要加上国际转运费用和美","tags":["life"],"title":"Steam Controller 简易测评","uri":"https://chuanbohua.github.io/post/2020-06-21-steam-controller/","year":"2020"},{"content":"这里是重读《美丽新世界》之后的一些感想。上次读这本书的时候还是高中最喜欢科幻、最喜欢反乌托邦主题的时候。只不过当时理解能力有限，观点浅薄，只是作为图一乐的小说读完了。\n这次时隔好几年之后重新翻了翻这本书，觉得当年漏过了不少东西，并且尝试整理文章的脉络和挖掘较为深层次的东西，产出自己的理解。\n这次和之前的文章不太相同，我想先把原作的几段摘录放在前面，之后再进行讨论。\n 只有艾普斯隆能够做出艾普斯隆式的牺牲，原因很简单，对于他们来说，那并不是牺牲，他们不会和你作对。他们所接收的培育规定了他们必须遵循的轨道。他们只能这么做，他们的命运已经注定好了。即使出瓶后，他们仍然困在一个瓶子里面——一个看不见的按照胚胎期和婴幼儿时期的固定模式行事的瓶子里面。\n  福特纪元四七三年。几位主宰者将塞浦路斯岛上面的所有居民都迁走，并不特别准备的两万两千名阿尔法迁徙过来。他们拥有一切农业和工业设备，而且由他们实施自治。结果与所有的理论预测非常吻合。土地没有好好被耕种，而且所有的工厂都在罢工。每个人都藐视法律，没有人服从命令，所有被分配去从事低级工作的人总是在勾心斗角争夺高级工作，而所有的到高级工作的人都在相互倾轧，不惜一切代价也要保住自己的位置。六年后他们发动了一场惨绝人寰的内战。两万两千人中有一万九千人被杀了，幸存者们一致向世界主宰者们请愿，要求恢复对塞浦路斯岛的管制，而他们也实施了管制。这就是迄今为止世界上曾经出现过的由阿尔法构成的社会的局面。\n  最佳的人口数字以冰山为模型——九分之八的人在水平线下，九分之一的人在水平线上。\n  他会被流放发到一个岛上，在那个地方他会遇到世界上最有趣的男男女女，所有由于某种原因拥有了太强烈的自我意识的个体。他们都是不满足于正统思想的人，有自己的思想的人，无法融入集体生活。总而言之，每一个人都是独特的。\n  宗教情怀能够补偿我们的失落，但我们并不感到失落。失落和宗教情感是多余的。我们让他们痛恨孤独，而且我们安排他们的生活，让他们几乎没有孤独的机会。代替激情治疗。每个月定期一次。我们为整个身体注射肾上腺素，它就如同生理意义上的恐惧与愤怒，能带来谋杀苔丝德蒙娜和被奥赛罗谋杀的滋润身心的效果，却不会带来麻烦。\n 一个人的自由是追求幸福的权力。\n这是一句很老的话了，说得也很有道理。这句话定义自由为一个人能去追求自己想要的各种东西的状态，比如金钱（虽然金钱并不一定是最终目的）、比如旅行去一个地方、比如和别人说任何想说的事情。\n但是这个关于自由的定义在《美丽新世界》这里需要进行一定的修改。我认为一个更为完备的关于自由的定义应该为：\n自由是一个人有可能/有能力/被允许执行一种使自己幸福的方法的状态，即使是一种新的方法，而这方法曾经并不会被你或者别人认为可以使你幸福、甚至是可能曾经被认为是背离幸福的事情。\n这就像是给前述自由的定义赋予了“可能性”的性质。即在这种定义下的自由不仅是拥有自由的能力，也要拥有自由的可能性，这个可能性就像是原作中描述的“瓶子的大小”。\n有读过这本书的人或许会说，这个定义根本就是针对着这本书中的情况写的，只是为了解释书中的内容，并没有普适性。对于普适性的讨论可以放在后面，与其说这个定义是针对这本书中的内容写的，不如说是受到书中情况启发而写出来的，之后我将尽可能地一一解释。\n首先说一说这个定义本身。\n在一般情况下，这个定义与前述定义并没有太大的差别。比如你在家太闷了，于是任意往返城市公园以散心，这里面包含了行动自由在内的多种自由；同时，你或许会以任意伤害其他人为自由，但是这种行为自然不会被允许，不过你在一定程度上是可以执行的，如果你确实以此为幸福源泉，那么你有可能执行这些，在此层面上你依然是自由的，只不过自由程度只有一点点。\n而对比前后定义的不同，可以考虑这种情况：或许信仰宗教会让日渐辛苦的你幸福，但是信仰宗教在一个地方被禁止了，你从小就不会知道信仰宗教会有怎样的后果，甚至你根本就不知道有宗教这样的东西。那么在这种情况下，即使你一日三餐饱腹而幸福，在此方面也不会被认为是自由的。\n将情况扩展至更广的范围，在这个定义下没有绝对的自由。每个人认知总会受限，而人类总体的知识也限制在一定的程度内，人类所知的获取幸福的方法总是有限的。那么在不同情况下，导致不自由的主体不同，可以指导我们采取不一样的态度。\n最容易想到的就是法律，除此之外还有道德和科技等等；法律和道德约束我们的想法，让我们不会去考虑红线之外的事情；而科技的发展不足让我们不可而知更高层次的科技，从而无法知晓高一级的科技给我们带来的幸福感的方法。\n比如法国大革命的人权宣言中写道：\n “Liberty consists of doing anything which does not harm others.”\n Liberty 是被法律所限制的。\n所以，如果是政府限制我们的自由，我们可以反抗，或者另辟蹊径；如果是发展限制我们的自由，人类就努力推进科研。生活中，如果钱限制了我们的自由，我们就工作去换钱；如果视野限制了我们的自由，我们就去读书。\n当我们去争取一种自由的时候，我们可能也在丧失另外一种自由。自由的程度也是主观上的，有人会以安居乐业无所忧虑为自由，即使他们无法接触到现有生活外的东西；有的人即使是主宰者，也让我们感受到视野的狭隘而觉得不自由。\n所以对于《美丽新世界》中人类自由的观点，更为精确的表述应该为：以我所能接受的自由的程度来看这些人，认为这些人都是不自由的。\n但是单论自由似乎意义并不是很大，我们都能从书中读到，这些人在新世界中是幸福的。上面自由的定义中强调了追求幸福这件事情，那么自由和幸福的关系是什么？\n在《美丽新世界》中，似乎自由和幸福是一对反义词。新世界中的大部分人，包括高级阿尔法，都是不自由的，但是他们幸福。这些人无权利知道在既有生活之外有让他们感到幸福的东西，比如最简单的亲情与爱情，这些都是在福特纪元之前可以给人们带来幸福的东西。文中也提到了：\n “你追求的不是幸福的权力，而是不幸福的权力。”\n 这些人可能发自内心地感觉到幸福，但是他们很不自由。这听起来可能很矛盾，但是可以被解释。\n自由是包含在人的天性中的东西，人们生来追求一定的自由。当你习惯在旷野上自由奔跑，就不会希望被关在牢笼里面；当你习惯食物充足的生活，就不想每天为了饱腹而发愁。\n但是人的天性中也在追逐幸福，而追求自由是追求幸福中的一个步骤。当一个人绝对幸福的时候，他就不再会去考虑自由的事情；如果一个人依然要追求自由，那么说明这种程度的幸福对他来说并不够。\n上面提到了，没有绝对的自由，那么就没有绝对的幸福。假设一种真正自由的情况：一个在新世界中真正自由的人，可以在这个世界中执行他能得到幸福的所有方法，这个人即使理解了亲情与爱情也不会再幸福、即使理解了宗教亦不会幸福、即使百年后发明的更好的刺激感官的方法也不会让他幸福，能让他感到幸福的所有方法都包含在了这个世界中。在这种情况下，这个人才可以说获得了绝对的自由。\n这自然是不可能的，没有人知道他理解了爱情之后会不会沉沦，没有人知道他认识到亲情时会不会对自己的出生感到伤心，没有人知道百年后新科技带来的感官刺激是怎样的体验。\n所以就需要用各种各样的方法，强化幸福，断绝人们追求自由的心。让我们看看新世界做了哪些事情。\n首先有几个最核心的东西，苏摩就是其中一种。最简单粗暴的获得生理上幸福的方法，没有副作用，易获取，还有什么东西比这个更能强化人的幸福的呢。脑中大量的多巴胺可以轻易盖过任何平常获得幸福的感受，可以说苏摩把幸福强化到了极点，几乎没有自由的必要去超过它。\n生理上的幸福有了，那么心理上的呢，另一个核心的东西就是“我为人人，人人为我”。这个刻入 DNA（没错，原作中差不多就真是接近刻到 DNA 里了）的观念极大地弱化了人与人之间的差异，这样的弱化可以有效地解决多种问题，比如嫉妒、认同感缺失等等。这样每个人并没有太大的心理幸福的追求，全身心去感受苏摩带来的生理上的幸福就可以了。实在不济，还有感官电影可以帮你解决这样的问题。\n生老病死，没问题，新世界也都想好了针对的方法。人类生殖本性通过滥交解决；催眠教育让人们不再忌惮死亡；医学的发展让人们没有疾病与衰老。有了这样的基础，人们可以把所有的视线放在其他可控的幸福追求内。\n也可以换个角度来思考，把新世界中所有产生幸福感的事务统称为娱乐，那么这个娱乐杀死了宗教、杀死了英雄主义、杀死了哲学，杀死了所有人。\n这点的解释可以与上面很相似这点的解释和上面可以很类似，娱乐即为强化幸福并且降低自由的一种工具。娱乐本身就与短暂的幸福（即快乐）绑定，所以娱乐就是实现强化幸福的功能。\n那么降低自由该如何处理？这就和宣传的方法类似了，通过控制娱乐的内容，来引导人们的思想，逐步的让人们所娱乐的内容限制在很小的、可控的范围内。让他们不去触及其他的内容。\n 哲学教我们去怀疑那些显而易见的事，宣传却让人去接受那些本应该怀疑或审慎做出判断的事。\n 书的价值自然要体现在对现世的思考上，所以就有必要看看九十年前上述自由与幸福的矛盾在今天的体现。\n按照上述自由的定义，一个没有车而想要车的人可以在足够的时间内通过工作挣到钱来获得车，从而获得幸福，这是社会提供给人的一种自由；一个没有房子而想要在北上广买房子的精英可以通过创业赚到数千万而买到房子，获得幸福，这也是社会提供给人的一种自由，虽然实现它的概率并不高，但是对于这些人来说，他们相信这种概率，也就相信这种自由。\n当然，如果一件事情实现的概率很低，那么它就不能称它为自由，比如一个身心俱疲的流浪汉可能通过创业赚到钱买一幢北上广的豪宅，但是这对于这个人来说，这并不算一种自由，因为他知道这种情况发生的概率不值得有任何期待，所以这对于他来说等同于不可能，即使社会允许发生这样的情况。\n除去这些非常现实的例子，还有很多可以思考的情况，言论上的自由、阶级流动上的自由、选择的自由等等。一一展开会无穷无尽。总之，这样的自由给我最大的启发是：任何时候都想一想自己思考自由的方式是不是被限制了，然后再针对性地去抗争，要思考，要有警惕感。\n 最后讲讲这本书行文上的特点，这本书的行文我并不是很喜欢。虽然大量用在几位阿尔法之间交谈、日常上的笔墨能够从各种细节上细腻地透露出新世界的特征，但是如此大量的日常描述让人读起来非常不顺而且略显枯燥。不过既然是描述性的小说，这种文字风格是可以被接受的。\n这本书文字的另一个特点是那个时代的很常有的、用现代文字为标准对比来说就是有些“啰嗦”。考虑到《美丽新世界》这本书作于20世纪30年代，当时流行的作品行文风格很多是这样。除此之外我觉得可能也会与翻译有一定的问题。\n全文没有激烈的冲突，没有扣人心弦的剧情，整体上缓缓推进。在结尾章节之前，读者应该已经理解和猜得差不多了，只是一般比较零散不容易组织，并且短时间内不容易形成语言来表达，这时候最后一段的思想对抗揭示新世界的核心就会读起来很痛快。\n本书终止的也很痛快，留下大量的时间和内容供读者思考。或许继续讲下去也没有太多的意思，或许有的人可以想到使得这个新世界毁灭的方法，从而完成一篇续作，总之，作品到此为止表达完了作者想表达的东西，其目标已经达到。\n作为乌托邦三部曲中的一部，人们自然会拿它和《1984》、《我们》相比较，这些等我读完了再写。\n另外是一本网红书《娱乐至死》，或许有翻一翻的价值。\n","id":7,"section":"post","summary":"这里是重读《美丽新世界》之后的一些感想。上次读这本书的时候还是高中最喜欢科幻、最喜欢反乌托邦主题的时候。只不过当时理解能力有限，观点浅薄，只","tags":["life"],"title":"《美丽新世界》中的自由与幸福","uri":"https://chuanbohua.github.io/post/2020-06-19-brave-new-world/","year":"2020"},{"content":"Yeah，小程序居然过审了，你可以通过扫描下面的 QR Code 或者在微信搜索“我是欧皇吗”找到这个小程序。这是 48h 从零开始的微信小程序挑战的结果。可以在 GitHub 上看到这个项目。\n这个挑战开始得很曲折，是这样的：最近在家的空闲时间比较多，想着自己开发个游戏，开个大坑，毕竟做游戏这个事情我从好久之前就在想了。选定了 Unity 框架之后发现 Premium 可以用 GitHub Education 认证，于是我就去找 GitHub，提交了学生证扫描件之后需要两三天才能出结果，在这两三天时间里不知道干什么，就搞个微信小程序吧。\n所以，我尝试在 GitHub Education 过审前把这个坑填上。\n说实话我个人很不喜欢微信，但是 Share 一个工具的几种途径：APP（Android 也不是不行，但是我没办法开发 iOS）、网页（我的 ECS 刚到期），而且反正是瞎做着玩，就试试微信小程序吧，毕竟最近这么火。\n稍微扫了一眼 Hello World 文档，就开始写程序了。实际上请不要这么做，踩坑多跟这个有关。\n微信小程序的框架很好懂，写起来和网页差不多：HTML + CSS + JS，只是多了一些额外的配置数据和微信自带函数的调用，搜一搜，看看文档都可以做到。\n《我是欧皇吗》这个小程序的功能很简单，就是计算抽卡游戏涉及的概率计算，这点在 GitHub README 上面有介绍，或者打开小程序自然就可以懂了，这里就不提了。\n因为功能很简单，所以 JS 写起来也非常简单，大概 10 分钟就可以解决的程度，其本质就一个包含组合的算式： $$ C_{gacahTimes}^{winTimes} \\times probability^{winTimes} \\times (1-probability) ^ {gacahTimes - winTimes} $$ 即： $$ \\frac{gachaTimes!}{winTimes! \\times (gachaTimes - winTimes)!} \\times probability^{winTimes} \\times (1-probability) ^ {gacahTimes - winTimes} $$ 其中 gachaTimes 即抽卡的次数，winTimes 即出货的次数，probability 即出货概率。\n单算概率多无聊，最近经常和同学打日麻，对各种役种的和率有了一些认识，正好去天凤上搜了搜有相关的和率统计，所以就把各种日麻和率写在对应概率范围内做参照，丰富一下内容。\n作为一个对日麻概率和对抽卡概率都有概念的人，不得不说一些对照结果还是挺出乎意料的，虽然知道抽卡全不中的概率不低，但是没想到高到和我和一次断幺九差不多，这也算达到了我增加这一部分的效果。\n核心写完了，剩下的就是补全其他的东西了，数据需要输入，于是最烦人的正则检查就有必要了。\n需要考虑的情况包括：填写的出货次数比抽卡次数还要多，填写的抽卡次数太高而超过了微信小程序的计算范围，导致 return 一个 NaN，或者是概率实在太低，微信小程序的最小浮点数是 1e-10 左右，比这个更小就变成了 0。这些情况都需要考虑对应的输出。\n不得不说刚开始写这个的时候完全没有考虑到鲁棒性检查这么复杂，所以导致后面改的时候已经乱成了一团，现在想来，如果在设计的时候考虑好过大、过小、错误输入的情况，直接划分四块条件渲染就可以了。\n但是当时确实没有想这么多，在一个渲染块里面各种混乱的 if 判断给我后来改代码带来了太多的麻烦。\n不管怎样，鲁棒性检查这部分弄完了，就该做页面间通讯部分了。因为结果输出在 Result Page，而输入数据在 Cal Page。但是在最开始的时候我因为没有仔细阅读文档，对微信小程序的 onLoad 和 onShow 等几个函数没有搞清楚触发时间，导致直传的数据一直得不到刷新。虽然问题很容易就解决了，但是因为没好好读文档浪费了不少时间。（毕竟这么基础的东西没有不读的道理）\n数据传完了，整个工具就可以用了，之后绝大部分时间是在设计 CSS。不得不说微信小程序的 CSS 设计很不方便，缺少了类似于 Chrome 中好用的 Inspector，这样在设置 margin, padding 或者 location 的时候都需要手动给每个块添加黑色边框，以方便定位。\n我平常用 CSS 很少，模块定位很不熟练，就将就着按照比例摆了摆，测试了几个主流的手机分辨率都没有乱版的情况就放那了，算是歪歪扭扭地把 CSS 拼好了。\n不过抛开定位的问题，我的按钮和艺术字的设计还是不错的。\nCSS 弄完，设计了一个 icon 就到了第二天晚上了。说实话，到现在为止我还没有读微信的小程序审核手册，甚至压根就没考虑过这个小程序会不会过审。于是随便写写简介，传了个头像就提交审核了，过两天看看结果怎么样。\n提交审核之后会想起这两天搞得东西，简直乱七八糟，总结起来就是有这几个问题：\n 微信小程序的文档基础部分一定要通读，否则就像页面生命周期函数顺序搞不清楚耽误大量的时间，还要重构代码；一些基础的功能微信已经给出了实现方法，照抄就可以； 小程序开发的问题搜索条目数不是很多，毕竟专门玩小程序的人也不是那么多，有很多问题还是要自己动手读文档去解决的； 开发程序要遵循既有的开发流程规划，比如规划功能、分析需求、列举限制、框架设计，在此之后再动手去写，会高效很多，还能避免很多重构；  不过不这么被坑一次我说不一定还不理解上面的内容，所以两天时间的代价试错几个经验还是很值的。完成了基本的入门，之后如果还想进一步做小程序就读读其他人的源码学习学习，慢慢来。\n……\n但是。\n我觉得我没有下次了。\n再见，小程序。\n反正源码已经丢在 GitHub 上了，开发讲究一个开心就行了。\n玩 Unity 去了。\n","id":8,"section":"post","summary":"Yeah，小程序居然过审了，你可以通过扫描下面的 QR Code 或者在微信搜索“我是欧皇吗”找到这个小程序。这是 48h 从零开始的微信小程序挑战的结果。可以在","tags":["Javascript"],"title":"小程序《我今天是欧皇吗》","uri":"https://chuanbohua.github.io/post/2020-06-09-lucky/","year":"2020"},{"content":"桌游说小众也确实有很多人在玩，说大众出圈的也就三国杀狼人杀几个。我们玩过的一些也不过是桌游里面最爆款的，说不上是硬核桌游玩家，但是就这些桌游帮我们在大学里度过了快乐的时间。\n我开始玩桌游可以追溯到小学的时候，大概零几年，那时候虽然家里已经有电脑了，但是作为一个小学生没有太多可感兴趣的内容，也没有手机和 iPad，那时候的娱乐就全靠实体玩具。\n正好当时游戏王特别的火，和身边同学人手一摞卡瞎玩，网上搜了搜大概了解了规则。但是即使是当年早期的版本，对于我们二三年级的小学生来说依然是不太容易记住和理解的，比如牌速、连锁和一些怪物效果和魔法陷阱卡的冲突等等。\n所以当时玩游戏王就真如同口胡王，对于很多我们不了解的规则，大家都一起想一个比较中和的解决方案，然后修订我们的规则。\n比如当时我们完全不知道融合怪物需要额外放在融合怪物区，结果把融合怪物都混杂在卡组中，只有抽到了才能召唤。这就导致融合怪物的性价比极低，我们商量之后决定：如果场上存在融合怪物的所有祭品，并有融合魔法卡，那么可以直接从卡组中翻出这张融合怪物，之后洗切卡组。这样实际上达到了和标准规则接近的效果。\n游戏王满足了我们对卡牌游戏的最初级想法，并且也让我们体验了规则制定者的乐趣。由于盗版的卡片更新频率非常慢，到后来大家都对万年不变的卡组感到腻了，就开始魔改玩法。\n我们修改召唤规则、战斗血量减少的方法、魔法陷阱卡的使用时机，整个把游戏王变成了“无限火力”模式。这么做能成功的原因是因为我们有大量的时间去重复游玩来测试一个规则的有效性与平衡性，如果大家按照新规则玩的时候提出了异议，经过我们的讨论会进行修正。最后经过几个月的调整，游戏王原本的规则已经被改得面目全非，但是非常有趣。\n之后四五年级的时候，我们发现了除了卡牌之外其他好玩的。\n四五年级的我们开始在电脑上玩起了电子游戏（万恶之源），包括网络游戏和一些单机游戏，在此之后我们的各种游戏都或多或少受到了电子游戏的影响。\n虽然电脑游戏好玩，但是受到家长约束我们并不能长期坐在电脑前， 我们最主要的娱乐方式依然是实体游戏。但是受到一些 RPG 游戏的影响，我们开始进一步的魔改游戏王。\n先说这两年时间里我们的成果，我们在之前没有任何了解的情况下，从零发明了类似龙与地下城的 TRPG。我们写了角色书、绘制了装备技能卡牌、用多米诺骨牌代替金币、游戏王卡牌代表怪物，再加上几个骰子，就构成了一个最基本的龙与地下城的游戏。\n我们根据游戏王怪物种类不同，将桌子划分为不同的区域，比如天堂、地狱、丛林、龙穴等等，在这些地方能够遇到青眼白龙、真红眼黑龙等 Boss，还有各种各样的怪物。同时桌子中心是我们的城镇，我们设计了多个 NPC，配置一般参考传统 RPG，有药师、铁匠、国王、旅馆、商人等等。\n我们也将我们想到的各种内容搬到我们的游戏内部，比如挑战塔、悬赏任务榜、额外副本、分支结局等等。让游戏尽可能地丰富与耐玩。\n游戏的内容设置或许不是亮点，毕竟都是受到网络游戏启发，或者是直接借用过来的。真正的亮点在于游戏中的判定机制。\n每个人各有不同的属性点数，根据点数计算嘲讽，在特定区域进行一些行为时通过投掷骰子判定遇怪（踢门），在战斗中不同的属性按照骰子数值触发不同的攻击效果和伤害。\n在战斗之外，属性值会同样影响爆率、交易、任务回报等内容，且全部由骰子在一定程度内驱动。并且因为游戏由我们控制，具有无限大的自由度，背刺 NPC 或者盗窃或者抢劫都是可以讨论的，一些奇策都是城主没有想到的。\n这个过程持续了好几个月的时间，在此过程中我们依然往里添加各种各样的东西，实体的玩具都被我们发挥了最大的用处，反复利用，大家收集的硬币或者游戏币也都作为 Token 放在游戏中使用，甚至大富翁、象棋或者国际象棋被我们混合使用：骑士还是骑士，国王还是国王，但是他们不再在方砖中受到约束地行进。\n发挥所有人的想象力，我们在自己搭建的 RPG 世界中做出各种荒诞古怪但是有趣的事情，我们觉得那时收获的快乐远超一些网游。\n这一系列 TRPG，我们通关了重启，总结有趣的经验，再通关再重启，玩了好多遍，陪伴了我们小学剩下的两年时间，也拉拢了不少朋友一起玩。\n最后完结是由于这游戏最大的缺点：大家分别考到不同的初中，之后就没有太多的时间相聚，且我们构建的旧坑也很难让新朋友加入，这些玩具也就在箱子里躺倒了现在。\n直到几年后，我才了解到以《龙与地下城》为代表的 TRPG 系列，似乎找到了一些当年的感觉。也觉得当时我们几个从零捏造了这样的玩法对于小孩子来说实在是壮举。\n这段经历给我对游戏的态度带来了一些影响，或许是在我们的 TRPG 中习惯了那种无限自由度和人人都是城主的自由感，我总抱着“玩游戏而不是被游戏玩”的态度拒绝所有网游，因为它们确实太花费时间与绑定用户。我平常的游戏集中于沙盒类型独立游戏，网游社交的优点交给联机来解决。\n时至今日我和身边要好的朋友有机会还会一起打桌游，我们在四年间也玩了不少桌游，未来有机会也会玩下去，因为桌游实在是电子游戏无法替代的，甚至有想过自己将一些喜欢的桌游迁移到 PC 上去，将会是一个以年为单位的大工程，不过游戏开发者是我曾经的一个梦想，现在技术够了，为了实现梦想不如试一试。\nOne More Thing 我们玩过的一些桌游 ：\n 狼人杀； 三国杀； 风声； 魔城马车； 山屋惊魂； 富饶之城； 宝石； 人生履历； 阿瓦隆； 暗影猎人； 大富翁； 大富翁 - 幸福人生； Majsoul； 全球感染； 小白；  准备玩的桌游：\n 全球惊悚：太贵； 魔镇惊魂：太贵； 全球感染 - 传承：太贵；  我们几个玩的桌游比较偏向于克苏鲁风格，而且强调多人参与感，有对抗性会好玩一些。\n","id":9,"section":"post","summary":"桌游说小众也确实有很多人在玩，说大众出圈的也就三国杀狼人杀几个。我们玩过的一些也不过是桌游里面最爆款的，说不上是硬核桌游玩家，但是就这些桌游","tags":["Life"],"title":"小学时候的桌游","uri":"https://chuanbohua.github.io/post/2020-06-01-childhood/","year":"2020"},{"content":"我坚定地崇尚科学，因此喜欢硬派的科幻小说。但是同时我喜欢妖怪文化，所以京极夏彦的书和森见的书我都比较喜欢。\n我本来是冲着妖怪来读京极夏彦的书，但是和各路书评一样，京极夏彦在《铁鼠之槛》这本书中大肆展示其对禅的理解，也尽全篇之力讨论佛教门派之间几十年的纠纷，这都偏离了我对一本妖怪小说的期待。\n我是无神论者，因此不会去信奉宗教，不过我不认为宗教是不可理解的事情。\n虽然没有见到妖怪有些许遗憾，但是读完之后我对禅这种东西感到了好奇。虽然前半本对于禅讲述得讳莫如深，以至于读起来有些难受，但是后半段的一些观点和论述还是有意思的。\n其中我印象最深的是《十牛图》，这一系列图在原作中出现在作品中仙石楼房间的挂轴中。《十牛图》是《禅宗四部录》中的一部，为《信心铭》《证道歌》《坐禅仪》和《十牛图》。关于这点，实际上我并没有得到验证，毕竟我对佛教研究非常的少，姑且摘录于原作中的说法。\n《十牛图》顾名思义是由十张画组成，借鸟口之言就像是连环画。其第一张名为“寻牛”，展现了主角突然发现牛不见了。\n这点在介绍的时候是一个伏笔，《十牛图》描写的世界从这里开始，没有之前，这名主角的男子发现自己的牛不见了就前往寻找。\n之后的第二张图是“见迹”，第三张图是“见牛”，这里只表现了看到牛的一部分，没有看到全部的牛。\n之后“得牛”，然后“牧牛”与“骑牛回家”，表现了男子完全驯服了牛。这一部分有一个讨论是关于牛的颜色，“得牛”时牛为黑色，但是“牧牛”时牛为白色，这点暂时也不解释。\n再往后就是《十牛图》的重点了，如京极堂解释：一般这时候按照正常发展就是男子与牛回家和乐融融生活，但是《十牛图》的第七幅展示的是“存牛忘人”，整个画面中并没有牛的存在。\n至此，牛没有了，之后的三幅画中再也没有提到牛的存在。第八幅的“人牛具忘”甚至直接是一张白纸，作为起承转合的转。\n仙石楼的《十牛图》到此为止，也就是只有八张，后两张的“返本还源”和“入禅垂手”并没有在仙石楼中。\n关于《十牛图》的描述到此为止，之后开始了众人对这系列图的解释。敦子提示这一系列图描绘的是悟道之前的过程。关于这个的理解，原作中给出了几种：\n第一种是简单的按图直接理解，即牛就是悟，整个过程对应求悟，找到悟，获得悟。但是似乎佛教中强调悟不是获得的，所以寻找这件事是奇怪的。\n第二种是补全画前的故事，即悟丢失了，然后寻找悟，最后得到悟。但是这点与第七张画之后的内容冲突，男子从空无一物开始，到空无一物结束。\n第三种是由京极堂提出，也就是作者对《十牛图》的观点。牛在这系列图中实际上是比拟悟的存在，而不是真实的悟的存在。如果把牛视作“原本的自己”，那么就可以理解为男子知道自己本身是“牛”，但是以为“牛”在别处，也就是真正的自己在别处，于是寻找，最后找到。\n但是仅仅找到了“牛”不行，还需要变为自己，想要“得到自己”就需要让“牛”不见。于是最后画中再也没有牛了。\n这个解释中有一个矛盾，即“真正的自己”不可能同时存在两个，也就是男子与“牛”。所以说实际上“牛”本来就不存在。\n其实男子自一开始就自己一个人，但是“原本的自己”消失了，经过了一圈的寻找，到最后“人牛俱忘”的时候所有东西都消失了，达到了佛教中的“一切皆无”的境况。\n看到这里总感觉能理解又不能理解的样子，似乎佛教的各种公案都是这种感觉，有各种各样的解释，只要说得通，怎么解释都可以，有种诡辩的感觉。\n不过原作在这里举了一个例子：“怀有目的意识到它的时候，都还不是真的”，比如生病的人会意识到健康，但是真正健康的人并不会意识到健康。失去健康这种概念的时候，一个人才是真正的健康。不管是对于自己或者是对于世界，还在怀疑自己是什么，世界是什么的时候，都还不是真的。完全没有自我和世界的时候，才第一次拥有了自我，拥有了世界。\n这段理解让我第一次有理解了公案的感觉，简单来说就是我第一次觉得“有道理”。在此之前的各种阐述，要么飘渺不知含义，要么实在违反个人观念，以至于难以接受与理解。\n至于第九和第十幅图，就关于悟道之后的内容了。\n《十牛图》有两个版本，一个是普明的，另一个是郭庵的。其中普明的《十牛图》以类似于“人牛俱忘”结尾，寓意人悟道之后便完结。而郭庵版本的《十牛图》包含了之后的两张“返本还源”和“入禅垂手”。这一点在京极夏彦这方面被表以赞美，因为最后两张图强调了即使因为“人牛俱忘”大悟，也并非就此结束，这也只是回归了原本的姿态，之后也必须继续修行下去，否则就是假的与错误的。\n郭庵的《十牛图》教诲悟道后的修行是非常重要的。而作品中仙石楼缺少了很重要的最后的两张画。\n现在回头再读作品中这一部分，我才意识到这是一个关于后续剧情发展的伏笔，而且是相当明显的伏笔，不得不赞叹这一部分的设计。\n抛开使用《十牛图》来解释佛教的悟道，这一系列图在现在已经可以用来解释更多的东西，比如心理学上的人格解释，或者是个人与个人的意识之间的关系等等，各个读起来都令我觉得深入又难以理解。作品中提到的很多公案亦然，有各种难以理解的解释，甚至其中的一些解释各有冲突。\n虽然我在原作阅读中对《十牛图》这一部分起了一点点兴趣，但是我依然对佛教和悟道的各种东西保持着难以理解的认知，或许我是距离禅最远的一类人中的一个。\n思考意义这类事务，在我脑中常常是自己与自己辩论的过程，这个过程消耗精力，少有成就。艰难思考，拓宽观念与理解，或许是僧人们耗费多年时间所做的事情。\n","id":10,"section":"post","summary":"我坚定地崇尚科学，因此喜欢硬派的科幻小说。但是同时我喜欢妖怪文化，所以京极夏彦的书和森见的书我都比较喜欢。 我本来是冲着妖怪来读京极夏彦的书，","tags":["Life"],"title":"《铁鼠之槛》的《十牛图》","uri":"https://chuanbohua.github.io/post/2020-05-28-mouse/","year":"2020"},{"content":"我喜欢的一个乐队：End of the World，他们的一首歌在网易云被删除了，不是因为没有版权整个乐队的歌曲下架，而是单单只有这一首歌被下架了。\n我听日语歌比较多的原因之一，那里面没那么多的情歌——不如说有很多关于其他主题的歌。不是说一些反对战争、歌颂自由的歌就比情歌高尚，本来就有很多主题可以写歌，不用全纠结在情歌上面。\n我不觉得 End of the World 的这首歌想针对什么，也没必要做这种事情，只要听过这个乐队其他歌，大多数人都会这么想。\n在我刚开始听到这首歌的时候，就知道这是有可能发生的事情。我不敢说，也不去想。\n 歌词：\n「人」と描いて他人という意味の\n描繪著「人」字卻意味著其他\nこの国はヒトを恐れて生きてきた\n這個國家活在對人民的恐懼中\nけれど「人」の「間」にあるものは\n但是在「人們」彼此「之間」存在的\n不安や恐れじゃなくて\n不是不安也不是恐懼\n愛だと子供たちに「教え」たい\n而是想「教導」孩子們學會愛\n「何か」が終わってしまったけれど\n「某些」東西已經結束了\nそれは同時に「何か」が始まって\n然而同時也是「其他」東西的開始\n「始まり」はいつでも怖いけれど\n雖然「起始」總是令人感到害怕\nだからこそ「僕ら」は手を繋ごう\n但是正因如此，就讓「我們」手連手吧！\nWe are with you\n「人」の「為」と描いて偽りだと\n描繪「為了」「人們」的虛情假意\n僕らはいつでも主張してきた\n卻成為了我們一貫主張的理想\nけれど本当の気持ちはいつだって\n然而真實的內在始終\n迷い間違え、とりつくろって\n是徬徨迷茫著、被粉飾掩蓋住\n偽りから始まるんだ\n以虛假做為一切的起始\n「何か」が終わってしまったけれど\n「某些」東西已經結束了\nそれは同時に「何か」が始まって\n然而同時也是「其他」東西的開始\n僕らは「出来る事」が皆違うから\n我們彼此「能做的事」都不盡相同\nだからこそ「僕ら」は手を繋ごう\n但是正因如此，就讓「我們」手連手吧！\nWe are with you?\n「何か」が終わってしまったけれど\n「某些」東西已經結束了\nそれは同時に「何か」が始まって\n然而同時也是「其他」東西的開始\n「終わり」はいつでも悲しいけれど\n雖然「終結」總是令人感到悲傷\nだからこそ「僕ら」は手を繋ごう\n但是正因如此，就讓「我們」手連手吧！\n「僕ら」の「夢」が儚いと言われようとも\n就算「我們」的「夢想」被說是場黃粱一夢\nそれを止める理由にはならない\n依舊不會成為止步的理由\nもしもソレが嘘や偽りだとしても\n然而即使夢想只是一場虛假的謊言\nソレが「真実」に変わるまで\n直至夢想「成真」為止\n僕らは謳う\n我們依舊會高歌\n 所幸 Apple Store 还有这首歌，我就想听个歌而已，谁每天整这些有的没的。\n","id":11,"section":"post","summary":"我喜欢的一个乐队：End of the World，他们的一首歌在网易云被删除了，不是因为没有版权整个乐队的歌曲下架，而是单单只有这一首歌被下架了。 我听","tags":["Life"],"title":"Never Ending the World 被下架了","uri":"https://chuanbohua.github.io/post/2020-05-25-end-of-the-world/","year":"2020"},{"content":"对大多数人来说，研究型留学申请是一个比较煎熬的过程，在这个过程中不仅每天要忙着整理各种学校的信息、修改自己的PS、SOP、推荐信、还要给各学校的老板写邮件套词。模板套没必要，学术套太辛苦，面对着投出去十不回一的邮件、没有音讯的 Offer，更煎熬的是内心。\n似乎人的能力都是在较为极端情况下逼出来的，我从这忙得乱七八糟的半年中学到了不少东西。我相信这些通过自己经历学到的东西可以伴随我很长时间。\n面对焦虑 留学申请很容易焦虑。更何况我在申请的时候只选择申请研究型。\n研究型 Master 或者 Ph.D. 的申请时间线普遍较长，因为加上了与导师打招呼的环节，也就是套词。\n不同于授课型的申请，可以针对学校修改一下 PS 等文件之后同步投递。套词自然不能在一个学校同时套两个老板，而且老板回复邮件普遍容易拖延。\n虽然根据经验，如果老板3天之内不给回复，那么大概率是没有希望的，但是安全起见，同校两封邮件间隔5 - 7 天比较好一些。\n套词也不是一封邮件解决问题，之后往往有多次交流，最终还有面试。因此，整个套词战线可以拖到 3 - 5 个月长。在这个过程中，身边许多的同学都已经拿到授课制的 Offer 了，尤其是英国、香港的一些学校下发 Offer 很早。\n在这种情况下很容易产生焦虑，而焦虑会极大地降低我的效率。\n每天我都会在起床之后、吃饭的时候，甚至正在改自己资料的过程中都会有这样的想法：\n“自己到现在还没有拿到一个老板的口头 Offer”，\n“同学一个一个都已经拿到 Offer 了”，\n“我会不会最后申请失败了，一个 Offer 都拿不到吧”\n笼罩在这些想法中，心态会变得很差。\n在所有的休息时间和空闲时间，这些事情也依然充满着头脑，让我休息也无法安心休息、准备资料也没办法全身心投入，每天都在焦虑中度过，陷入一个恶性循环。\n最严重的时候，我的身体出现了不良的反应：胸部如同被压住，呼吸不上，眼前发黑。我意识到这个不是生理上的原因。\n有幸的是，这种不良反应只出现了两次。我似乎通过一些方法缓解了一部分，之后会嘲笑自己怀疑抑郁这件事矫情。\n直到这件事之后，我才认为不少留学生在外时间久了会出现抑郁倾向这件事是可理解的。我在这边可能暂时理解不到他们面临着哪些压力，可能是工作，可能是绿卡，也可能是 GPA，长期顶着这些压力，出现一些心理问题的征兆似乎是自然而然的。\n不过理解归理解，出现这种情况还都是自己的错。\n或许当时我可以用找工作这条后路来安慰自己，但是在申请留学上，我没办法让步，只能成功。因为有成功留学归来的姐姐，如果我申请留学失败了，那么失败带来的感受，应该会陪伴我很多年。\n当时的我一直在焦虑，之后才慢慢能认识到问题在哪。反思产生这种焦虑心理的原因，有两个：\n不去交流 所有的焦虑都憋在心里。\n我本身是一个喜欢交际的人，但是申请留学的这一学期我正好在 POSTECH 交换，陌生环境和不多的朋友让我很少有交流的欲望，毕竟身上还有这么多要紧的事情。\n当时在图书馆或者自习区都是一个人，与朋友交流也不涉及这方面的问题，即使提到，也是相互保留着谈谈自己未来的规划。\n在自己一个 Offer 没有落定的情况下给别人讲自己未来的规划是一件很煎熬、很难受的事情。\n憋到心里难受了就窝在寝室，躺一躺尝试用放空自己的方法来应对。事实证明这种方法起着相反的作用。\n庆幸的是当时的我意识到了这个问题。\n我开始三天两头的约好朋友打球，有的同学也在申请的路上，我们在打球的过程中放开来谈自己的申请情况。我会把我连续套失败了好几个老板的事情说给他听，不为了他的安慰，自己会好很多。再加上运动的效果，每次打完球回来会轻松一些。\n另一件事是在我的生日当天，买了一个蛋糕，难得地把朋友凑齐在 Lunge。那天大家在 Lunge 从九点聊到十二点，非常热闹。虽然大家从川普聊到意识形态、从游戏聊到电影，没有怎么涉及留学相关的事情，但是经过了这一晚上，心情还是好了很多。\n所以在此之后，如果遇到类似很消极的心理状态，找身边的人聊聊比长期憋着好。\n不去做 感觉焦虑了就让自己忙起来，这是很有效的方法。现在看来当时的自己惰性很重，早上起来躺在床上，一遍焦虑自己依然没有收到老板回复，一遍又不想起来，非要拖沓半个小时。\n当自己忙起来的时候，沉浸在写邮件、改 PS/CV 的过程中的时候，就感受不到焦虑。并且如果自己确实充实得忙了一整天，晚上就能够安心地睡觉。\n这种感觉就像是“尽人事，听天命”。抛开用这种方法会不会走弯路，让自己忙起来对缓解焦虑是很有用的。\n让自己忙起来要对付自己的惰性。这个过程需要一些技巧，根据从心理学选修课上学到的东西，得给自己设置反馈点。\n留学申请是个长期反馈的过程，比每一学期的专业课学习还要长。制定每日、每周目标加上一些奖励能帮助坚持过这一段时间。\n所以之后如果遇到一些不得不做和有价值但不想做的事情，“闻斯行诸”是很好的方法。过程中再去考虑自己的方向有没有做对。虽然有时候会犯错，但是总比什么都不干好。\n辨别信息 申请过程少不了去搜索引擎或者论坛了解大家的经验，这些平台有知乎、小木虫和主流的几个留学论坛。\n先说结论，看别人经验一定要先确定对方的情况。这个情况包含申请人的资历情况，当年的留学申请大环境等等。\n出身学校 211 和 985 申请起来有很大差距，985 中的学校和学校之间申请起来也会有很大差距。应该意识到，虽然网络上有千千万万人，但是个人情况能和你相同的没几个，碰到校友已经不容易了，更不要说 GPA、IELTS 和研究经历等一些指标。更何况留学申请有运气成分和与当年的时事情况相关，复刻别人的成功是件低概率事件。\n所以任何人说申请一个学校简单或者是难，都没有用。别整些有的没的，被唬住了不去申请耽误事情。\n举个例子，HIT 和 KAIST 是合作学校，作为 HIT 的学生申请 KAIST 就会容易很多。但是对于其他 985 就会变得很困难，因为 KAIST 每年的名额确实很少，平均入学率也是出名的低。\nHong Kong 地区学校的套词也是，总有人说不管怎么发邮件老板都不回，但是自己实际投起来回复率还是可以的。\n所以在学校申请难度的判断上，主要参考历年已录取学生的具体统计数据，主观上的评价都没有价值。\n除此之外就是信息的来源，能去官网看的就不要看各种营销号和别人转发的信息，包括 DDL、GPA、语言要求等等，会耽误大事。\n规划 规划要趁早，我的申请算是惊险上岸，已经意识到了有些事情确实是短时间突击不出来的，还有一些东西是错过了就不再来的，比如评奖和精力的重心。如果当时没有意识到这些东西的重要性，之后就没有机会拿到了。\n刚上大学的时候，由于出身十八线小城市，视野不够开阔，大学规划上犯了不少错。现在看来个人规划上有很大的改良空间，如果能重来一遍大学，我还有很多的事情想要干。过去的事情也就想想，赶紧做好之后的事。\n都已经是大学毕业的学生了，规划事情就不能和之前一样一个学期一个学期得来，需要较为细致的规划两三年的情况，然后考虑十年的职业规划。比如在 Master 入学前就要考虑两年后毕业的出路，如果打算读 Ph.D.，就专心搞科研，发好文章，还要提前准备 GRE（最好能在 Master 入学前就考出来） 等等；如果准备工作就抓紧时间找寒暑假的实习，平时练习刷题，维护 GitHub，关注国内行业情况。\n除此之外，理财、政治意识什么的都赶紧学起来，都是之后会用到的东西。\n最后 人从历史中得到的教训就是人从来不吸取教训。\n希望自己不要这样。\n","id":12,"section":"post","summary":"对大多数人来说，研究型留学申请是一个比较煎熬的过程，在这个过程中不仅每天要忙着整理各种学校的信息、修改自己的PS、SOP、推荐信、还要给各学","tags":["Life"],"title":"在留学申请过程中学到的","uri":"https://chuanbohua.github.io/post/2020-05-16-%E7%95%99%E5%AD%A6/","year":"2020"},{"content":"众所周知的 MNIST 数据集的源文件就是以 IDX 数据形式存放的，其文件名为：\n train-images-idx3-ubyte train-labels-idx1-ubyte t10k-images-idx3-ubyte t10k-labels-idx1-ubyte  MINST 数据集的官方网页有写明其 IDX3 文件和 IDX1 文件的具体内部结构。但是大家一般使用 MNIST 数据集都是直接用 PyTorch 提供的 MNIST Class，似乎没有很多人研究直接从 IDX3 和 IDX1 文件中读取数据。\n从源文件读数据的方法在一定情况下是需要的，毕竟也有很多数据集是以 IDX 类型文件提供的。这里构建了一个（个人感觉）较为完备和易用的方法来读数据。\nN.B. 太长不看可以直接拉到最后。\n正文 IDX1 和 IDX3 文件结构 内容结构在上面提到的官方网站写的很清楚了：\n The IDX file format is a simple format for vectors and multidimensional matrices of various numerical types.\nThe basic format is:\nmagic number\nsize in dimension 0\nsize in dimension 1\nsize in dimension 2\n\u0026hellip;\nsize in dimension N\ndata\nThe magic number is an integer (MSB first). The first 2 bytes are always 0.\nThe third byte codes the type of the data:\n0x08: unsigned byte\n0x09: signed byte\n0x0B: short (2 bytes)\n0x0C: int (4 bytes)\n0x0D: float (4 bytes)\n0x0E: double (8 bytes)\nThe 4-th byte codes the number of dimensions of the vector/matrix: 1 for vectors, 2 for matrices\u0026hellip;.\nThe sizes in each dimension are 4-byte integers (MSB first, high endian, like in most non-Intel processors).\nThe data is stored like in a C array, i.e. the index in the last dimension changes the fastest.\n 总结下来就是一个 IDX 文件头部的一些二进制数据说明了这个文件的数据类型、数据量和每个数据的大小，之后每个数据就一个挨一个以二进制数据排列。\n例子：具体到 MNIST 数据集：\n[offset] [type] [value] [description]\r0000 32 bit integer 0x00000803(2051) magic number\r0004 32 bit integer 60000 number of images\r0008 32 bit integer 28 number of rows\r0012 32 bit integer 28 number of columns\r0016 unsigned byte ?? pixel\r0017 unsigned byte ?? pixel\r........\rxxxx unsigned byte ?? pixel\r 0000 到 0004 位置上的数据是 magic number，也就是说明本数据集的数据类型；\n0005 到 0008 位置上的数据值是这个数据集的数据量，在 MNIST 中的值为 60000，说明这个 MNIST 数据集有 60000 个数据；\n随后 0009 到 0012 和 0013 到 0016 的数据分别指图像的高和宽.\n再往后每个二进制表示一个像素，中间没有隔断，需要自己按照头部数据裁剪。比如这里就可以从 0016 这个二进制数据开始，每 28 * 28 个二进制数据可以转换为一个图片，一直进行下去。\n了解源数据结构之后就容易下手了。\n初始化 Dataset 类 毕竟数据要自己处理成数据集，所以 Dataset 类要继承着 torch.utils.data 的 Dataset 写一个：\nN.B. 这个数据集的类姑且命名为 MNIST\n#!/usr/bin/env python3\r# -*- coding:utf-8 -*-\r# author: Chuanbo HUA\r# date: 2020-05-06\r# update: 2020-05-10\r'''\rData Processing.\rDecode IDX files to dataset. - IDX3: images.\r- IDX1: labels.\r'''\rfrom torch.utils import data\rclass MNIST(data.Dataset):\rdef __init__(self):\rpass\rdef __getitem__(self, index):\rpass\rdef __len__(self):\rpass\r 之后定义头部数据的 Offset，可以看到 IDX3 的头部是 4 个 int，IDX1 的头部是 2 个 int。这里涉及 struct 的 calcsize 函数，之后裁剪图片数据的时候也会用到，可参考 Python 3.7 Doc 中对 struct 的介绍。这里的含义即为 4 个 int 的二进制大小。\nimport struct\rself.img_offset = struct.calcsize('\u0026gt;iiii')\rself.label_offset = struct.calcsize('\u0026gt;ii')\r 然后以二进制读取数据集文件，并获取头部数据。这里 'rb' 指 read \u0026amp; binary。\nbin_data = open(img_path, 'rb').read()\r_, self.num_img, self.num_rows, self.num_cols = struct.unpack_from('\u0026gt;iiii', bin_data, offset=0)\r 之后就可以开始读图片了。网上很多关于读取 IDX 文件的教程都是包含头部文件一口气读完并写入内存。这样很占用内存和低效。\n根据 PyTorch 的 Dataset 优化规则，我们最好把读文件这样较为消耗算力的操作放在 __getitem__ 函数中，而不是在 __init__ 函数里面一口气加载完。而且 IDX 二进制读取是调用底层的 C，读的速度非常的快。\n所以说初始化的时候只需要获得一些关键的数据保留在成员变量中即可，主要操作都放在 __getitem__ 函数中。\n除了基本的头部数据之外，初始化还储存了几个数据，方便之后 get item 函数调用。这两个 csize 分别是图片和标签的二进制长度，之后读数就按照这个长度依次读就可以。\nself.img_fmt = '\u0026gt;' + str(num_rows * num_cols) + 'B'\rself.img_fmt_csize = struct.calcsize(self.img_fmt)\rself.label_fmt = '\u0026gt;B'\rself.label_fmt_csize = struct.calcsize(self.label_fmt)\r Get Item 函数 Offset 有了，每个数据的长度有了，那么读第几个数据只要算一算起始位置就可以。\n例子：比如要读第 10 个数据，每个数据的二进制长度是 4，算上头部占了 16 个数，那么第 10 个数的位置开始于 16 + 9 * 4 = 52，即 0052 到 0056 这四个二进制数表示第 10 个数据。\nimg_data = open(self.img_path, 'rb').read()\rlabel_data = open(self.label_path, 'rb').read()\r# self.img_offset 指的是头文件长度\rimg_offset = self.img_offset + self.img_fmt_csize * index\rlabel_offset = self.label_offset + self.label_fmt_csize * index\rimg = np.array(struct.unpack_from(self.img_fmt, img_data, img_offset)).reshape((1, self.img_rows, self.img_cols))\rlabel = struct.unpack_from(self.label_fmt, label_data, label_offset)[0]\r 整合 把上面的整合起来，加上 input 和 output 就是一个效率不错的 Dataset 类了。\n#!/usr/bin/env python3\r# -*- coding:utf-8 -*-\r# author: Chuanbo HUA\r# date: 2020-05-06\r# update: 2020-05-10\r'''\rData Processing.\rDecode IDX files to dataset. - IDX3: images.\r- IDX1: labels.\r'''\rimport numpy as np\rimport struct\rfrom torch.utils import data\rfrom torchvision import transforms\rclass NetFlowTrain(data.Dataset):\r'''\rDataset of train set.\rThe percentage of train set is 70%.\r'''\rdef __init__(self, img_path, label_path):\r'''\rArgs:\rimg_path: str=...\rlabel_path: str=...\r'''\rself.img_path = img_path\rself.label_path = label_path\rself.img_offset = struct.calcsize('\u0026gt;iiii')\rself.label_offset = struct.calcsize('\u0026gt;ii')\rbin_data = open(img_path, 'rb').read()\r_, self.len, self.img_rows, self.img_cols = \\\rstruct.unpack_from('\u0026gt;iiii', bin_data, 0)\rself.img_fmt = '\u0026gt;' + str(num_rows * num_cols) + 'B'\rself.img_fmt_csize = struct.calcsize(self.img_fmt)\rself.label_fmt = '\u0026gt;B'\rself.label_fmt_csize = struct.calcsize(self.label_fmt)\rprint(\u0026quot;Create train dataset successfully. \\n -\u0026gt; Number of image: %d \\n -\u0026gt; Size of image: %d * %d\\n\u0026quot; % (self.len, num_cols, num_rows))\rdef __getitem__(self, index):\r'''\rReturns:\rTurple: (image: array, label: int).\r'''\rimg_data = open(self.img_path, 'rb').read()\rlabel_data = open(self.label_path, 'rb').read()\rimg_offset = self.img_offset + self.img_fmt_csize * index\rlabel_offset = self.label_offset + self.label_fmt_csize * index\rimg = np.array(struct.unpack_from\\\r(self.img_fmt, img_data, img_offset)).\\\rreshape((1, self.img_rows, self.img_cols))\rlabel = struct.unpack_from(self.label_fmt, label_data, label_offset)[0]\rreturn img, label\rdef __len__(self):\r'''\rReturn:\rInt: the length of dataset.\r'''\rreturn self.len\r 其他的操作和普通数据集处理类似，如归一化等等。\n","id":13,"section":"post","summary":"众所周知的 MNIST 数据集的源文件就是以 IDX 数据形式存放的，其文件名为： train-images-idx3-ubyte train-labels-idx1-ubyte t10k-images-idx3-ubyte t10k-labels-idx1-ubyte MINST 数据集的官方网页有写明其 IDX3 文件和 IDX1 文件的具体内部结构。但是大家一般使","tags":["Python","ML"],"title":"PyTorch 针对 IDX 类型数据文件创建 Dataset","uri":"https://chuanbohua.github.io/post/2020-05-11-dataset/","year":"2020"},{"content":"年轻人不要碰的东西系列：国外老土键盘、塑料玩具小人、暖儿罩子、大功率电暖风、截图神器、电疗入门教程……。\n现在看来，上面的东西里面似乎只有大功率电暖风我没有接触过，剩下的都或多或少有入坑或者了解。\n国外老土键盘我入坑的很早，早在大一的时候买了电脑（虽然当时学校是不允许的），就想着配个键盘。家里台式机的键盘都是薄膜键盘，用了很多年了也用腻了，在了解到机械键盘这一品类之后就开始入坑了。\n当时的自己入坑快退烧也快，见识不多要求也不高，直接一步到位，买了 IKBC 的 F87 时光机。\n选轴方面就很莽了，也没买试轴器，也没找同学的键盘体验，按网上给的定位买了个红轴的。事实证明这个选轴是选对了，即使到现在，我最喜欢的轴也还是红轴。\nIKBC 的键盘用了两年多了，中间敲过代码、写过文章、甚至打过一些音游（OSU!），质量是没得说，至今也没有出现双击或者失灵的情况。现在 IKBC 的键盘价格也低了不少，给同学推荐机械键盘的时候我大多都盲推这家的。\n买了这个键盘之后就退烧了，毕竟我也挺喜欢 IKBC F87 黑的造型，不追求键帽和客制化，没有进一步的追求。\n但是之后又了解到其他的一个键盘门类，静电容键盘。\n本来我也没太大的兴趣，认为除了触发方式不同之外，静电容和机械键盘手感上应该没有那么大的差距。看网上大家吹得各种玄乎，我除了好奇之外也没什么想法。\n有这个想法是在 China Joy 上。19 年 China Joy 上 Real Force 专门搞了个键盘的展区，展示了一些 Real Force 当年的一些限定款产品，并且可以体验。\n可以体验就挺好，我就在那里啪啦啪啦敲了好久。不得不说，静电容键盘的手感，还真的和机械差很多。\n描述感觉有一些困难，由于缺乏经验，我也不知道“静电容键盘手感和少女酥胸一样”这句话哪来的。\n总体上来静电容键盘的感觉就是软。即使是 45g 触发重量，也比红轴轻了一些，就更别说 35g 这种超轻触发重量了。而且相比红轴纯粹的直上直下（至少是毫无段落感，顶多越到底部触发重量越大），静电容的胶碗能带来微弱的段落感，比茶轴轻很多的那种。\n而且按键按压到底部是软的，也因此带来了静音的效果。机械键盘按压到低大多感觉像是敲到了塑料或者钢板上，而且由于机械的按键结构，其回弹噪音也挺大。\n总之就是作为一个红轴爱好者，虽然红轴在机械键盘中算是轻重量、软手感、低噪音，但是在静电容键盘面前还是差太多了。\n于是从这次 China Joy 开始，就有想法找个时间换个静电容键盘试试。\nReal Force 的静电容被称为键皇，HHKB 也是同等的档次。虽然我对静电容感兴趣，但是花这么多钱买一个键盘，我还是拒绝的。有这个钱赶紧给截图神器配个云台不好吗。\n所以找到了 Niz 这个国产静电容键盘品牌。最开始我还是担心国产静电容的手感和质量，但是参考了不少人的意见，大体上是可以用不到一半的 Real Force 的钱体验到 80% 以上的手感，姑且试一试。\n于是就买了 Niz Micro 84 35g 这一款静电容键盘，不带蓝牙的（虽然鼠标蓝牙很好用，毕竟要甩来甩去，但是键盘蓝牙对我来说似乎用处不大）。\n买来用了几天之后觉得，没错，是这个手感。我喜欢把出发键程调到最短，这样可以大幅度的提升我的打字速度。同时从红轴切过来还是要适应适应，毕竟触发键程短，还没想就敲出去了，打字错误率有所提升。\n35g 的重量确实非常的轻，似乎没有几个键盘能有比 35g 更轻的触发重量了。用这个键盘打字非常的轻松，真正实现了手指在飘的感觉。\n造型方面，我不太关心，但是这个经典的键盘配色我还是挺喜欢的。Niz 良心的使用了十字键帽，方便自己配色，不过我没有这个需求就不管了。\n值得一提的是这块键盘的 L2 操作，两个 Fn 配合 WASD 可以移动鼠标，ZXC 分别是鼠标左中右三键，同时配有小键盘区和系统音量和音乐控制，使用起来确实很方便，可以做到多数场景下手不离键盘。\n令人感动的是 PgUp, PgDn, Home, End 这些使用 Linux 常用的按键都在这个键盘上以 L1 单按键出现。同时键盘也有非 L2 的方向键。可以说，Niz 84 这个键盘布局是我心中最理想的键盘布局。\n静电容键盘适合用于大量打字的场景，省力又快速，对于敲代码这种事情就因人而异。有的人喜欢用青轴，充满力量的敲下每一行代码，毕竟需要程序员敲代码的量并不是很多，不如体验体验青轴这种充满诚意的敲击方式。\n键盘就是程序员和开发者的手，换一个自己喜欢的键盘，生产生活中也有动力。\n好，我再也不跳键盘的坑了。Real Force 和 HHKB 的键盘，我绝对不会买的，一定。\n One More Thing.\n这篇文章是 Store 这个分类的第一篇文章。这个分类是用来记录开箱各种奇奇怪怪东西的，或者是一些小物件。\n总之，是个三次元的分类，确信。\n","id":14,"section":"post","summary":"年轻人不要碰的东西系列：国外老土键盘、塑料玩具小人、暖儿罩子、大功率电暖风、截图神器、电疗入门教程……。 现在看来，上面的东西里面似乎只有大功","tags":["PC"],"title":"国内老土键盘 Niz plum","uri":"https://chuanbohua.github.io/post/2020-05-09-%E9%94%AE%E7%9B%98/","year":"2020"},{"content":" 在这个时代，希望是和钻石一样稀有的东西。\n 流浪地球中这么说。\n虽然在现实生活中我们并没有面临那么严峻的未来，但是存有一些对未来的期待总是一件有价值的事。\n这个想法是前几天我去南京参加姐姐婚礼的时候出现的。我去年暑假曾经在南京的 HUAWEI 实习了两个月的时间，而这次过去的时候想着旧地重游，就自己跑过去 HUAWEI 研究院的门口看了看。\n现在回想当时的实习生活，那时的我对各种事情都充满热情，每个周末都跑到周边的城市旅游，像上海、苏州、扬州都跑了个遍，南京本地自然逛了个遍。同时也不计较实习的工作内容，荣辱不争，纯粹的在享受经历。\n如果让现在的我加入华为，在这里开始工作生涯，那么我觉得我绝对不会有当时的心态。总觉得这样的生活少了一些盼头。\n去年在这里实习有恃无恐，因为我知道九月份我就要出国，开始我为期一学期的交换生活。而且我也并没有打算要接受 HUAWEI 的转正 Offer，所以在这里就体验体验就好。\n在未来有美好愿景的盼望下，就能更好的享受当下的生活。\n现在想来，如果我接受了 HUAWEI 的 Offer，今年学期结束后来到这里，租房、入职、安排工作……开始面对不知道哪里是尽头的工作生涯。这样的生活我肯定会觉得缺少什么。\n生活中确实有一些小乐趣和小期待。男/女朋友的下一次约会、周末上映的喜欢的电影、喜欢的明星要来开演唱会等等。但是会不会有“人生被设限”的感觉。\n现在的自己可以享受每一天，因为我期待着未来不久留学的生活。不论是不是自己的妄想，总感觉自己之后可以遍走很多国家、有着不设限的人生。\n所以生活有希望才会有乐趣，艰难的时候知道熬一阵子能走出来才有动力。\n希望自己 Master 期间能保持乐观，有所期待。\n 如果不能乐观了，之后可能会有一篇关于走出低谷的文章。\n","id":15,"section":"post","summary":"在这个时代，希望是和钻石一样稀有的东西。 流浪地球中这么说。 虽然在现实生活中我们并没有面临那么严峻的未来，但是存有一些对未来的期待总是一件有价","tags":["Life"],"title":"生活需要一些期待","uri":"https://chuanbohua.github.io/post/2020-05-07-%E6%9C%9F%E5%BE%85/","year":"2020"},{"content":"这是远程联机游戏的终极解决方案。\n不得不说别人建立虚拟局域网都是为了远程办公或者是使用校网权限，而我天天搞各种计算机网络的东西都是为了和同学联机。\n联机游戏的连接方式有 Steam 提供的服务器、游戏官方提供的服务器(MC 的领域)、公开的游戏平台(各种战斗平台之类的)，一些较老的游戏支持直连。但是就是有的游戏只支持局域网联机，想远程和同学玩只能自己搭远程服务器。\n搭一个远程局域网可以解决所有支持局域网联机游戏的联机问题，一劳永逸不赶紧试试。\n搭建远程局域网的工具有很多，比如偏向技术一些的通过 VPN 硬件设备搭建的 SSL VPN, PSec VPN 结构局域网，或者是大众一些的向日葵。其中一个很有名的是 Hamachi，这玩意我当年联机 Terraria 的时候就尝试用过了，迫于当时年轻不会搞，就没用下去。\n但是这些软件不开源，都是商业软件，不符合 Linux 哲学，所以找到了 ZeroTier.\n相关的教程比较多，但是这毕竟不是一个大众软件，没有完善的很高质量的教程。所以这也算个综述文章，把坑尝试排一排。\n这个文章写的是一个 Ubuntu 主机作为 Moon 主机的搭建过程，原理在最后讲一点点。\n开始搭 整体流程：\n ZeroTier 官网注册 + 配置一个网络 Ubuntu 主机安装 ZeroTier 并连接服务器 Ubuntu 主机开启 Moon 并生成 Moon 配置文件 Windows 客户端安装 ZeroTier + 导入 Moon 配置文件  其中ZeroTier 官网注册 + 配置一个网络可以参考这篇文章到第八步，写的很详细。\n云服务器配置 ZeroTier 然后就可以开始配置 Ubuntu 云服务器上的内容了。对于 Linux 系统 ZeroTier 官网有提供快速的安装脚本：\nSSL base curl -s https://install.zerotier.com | sudo bash\nGPG base：（在连接过程中基于 GPG 隐私控制会让流量更加安全）\ncurl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg' | gpg --import \u0026amp;\u0026amp; \\\rif z=$(curl -s 'https://install.zerotier.com/' | gpg); then echo \u0026quot;$z\u0026quot; | sudo bash; fi\r 装完之后连上刚才在 ZeroTier 上创建的网络：sudo zerotier-cli join aabbccdd ，aabbccdd 是 ZeroTier 上的 Network ID。\n加入成功会有 200 join OK 的提示，如果这时候去看 ZeroTier 后台的话也是能看到这个设备的，如果网络设置成 Private 的话，别忘了在后台同意一下。\nN.B. 虽然连接网络是可以交给用户而不用 sudo，但是下一步生成 Moon 配置文件需要写入 /var ，早晚还是要转到 root 权限，所以直接全部 sudo 好了。\n之后生成 Moon 配置文件（需要 root 权限，而且是要切换 root）：\ncd /var/lib/zerotier-one\rsu\rzerotier-idtool initmoon identity.public \u0026gt; moon.json\r 然后此目录下会生成 moon.json 文件，将文件中的\u0026quot;stableEndpoints\u0026quot;: []中填入云服务器的公网 IP，如 \u0026quot;stableEndpoints\u0026quot;: [\u0026quot;100.100.100.100/9993\u0026quot;]，别忘了 9993 的端口和引号。\n说到端口，这个时候需要在你云服务器的运营商后台的安全管理上把 TCP 的 9993 端口开放，这样之后才能生效。\n修改完 moon.json 之后运行指令 zerotier-idtool genmoon moon.json 以生成签名文件。该签名文件就在本目录下，名称格式为六个 0 + Network ID.moon。\n这个签名放这里还不行，需要在本目录下创建一个名为 moon.d 的文件夹，将这个签名文件挪进去：\nmkdir moon.d\rmv 000000aabbccdd.moom ./moon.d/\r 到这服务器端的配置就完成了，重启一下 Zero Tier 服务就会生效：service zerotier-one restart\nWindows 客户端主机配置 ZeroTier 好，网上大部分教程都到这里为止。剩下的内容简单，问题也多。\n毕竟我准备用这个来联机游戏，所以除了服务器，其他平台都是 Windows。Windows 上的 ZeroTier 软件安装很简单，一个 msi 安装包直接运行就可以。\n连接起来也是有 GUI 的低成本操作，右键 Windows 工具栏中的 Zero Tier，选择 join network 填入 Network ID 就可以连接。\n值得注意的一点是别忘了设定防火墙，强烈不推荐全关，随便找个开放 Windows 网络端口的教程顺着做一下，这样安全的多。如果想测试是否在一个局域网里，也可以把 Ping 的端口打开。\n在 Windows 上安装完 ZeroTier 之后，把 Linux 上的签名文件复制到 C:\\ProgramData\\ZeroTier\\One 下，这次同样需要创建一个 moon.d 的文件夹，再把签名文件放进去。\n之后需要在 Windows 上重启 ZeroTier 的服务，只退出重启软件并没有用，需要用 cmd 或者 PowerShell 运行指令重启服务 net stop ZeroTierOneService, net start ZeroTierOneService。\n或者任务管理器中 Server 栏找到 ZeroTierOneService 右键也可以重启。\n确保防火墙关了 + ZeroTier Server 运行正常 + 连上 Network 也同意了。Ping 一下云服务的虚拟内网 IP 试一试。这个 IP 可以用 ifconfig (Linux) 或 ipconfig(Windows) 查看，或者在 ZeroTier 后台中看到。\n如果不出意外的话，所有按照这个流程操作的 Windows 主机可以互相 Ping 通。\n联机试试 这个时候已经可以相互联机了，支持局域网联机的游戏在创建好房间之后其他朋友也可以看得到了。也可以通过内网 IP 直连。\n但是有时候质量奇差，这个时候就要看看 Moon 配置的对不对了。如果你有一台不是云服务器的 Linux，那么查看方式可以直接运行一条指令 sudo zerotier-cli listpeers，其输出中会指明哪个是 Moon。\n那么在 Windows 上有没有这个指令呢？可惜，我没找到，Windows 上的 ZeroTier 本身就没有提供 Shell 的指令，而且客户端也没有相应的界面（不知道未来版本会不会更新），所以说在 Windows 上确认 Moon 服务器似乎不太行，还是得用 ZeroTier 提供的基层指令。\n如果 Moon 没有问题，这个情况就变得玄学起来了。\n上可甩锅网络运营商，毕竟众所周知联通移动电信三家网路远程连接日常出问题，而且这些网络运营商本质抵触私建远程局域网，会断连接；下可怀疑 ZeroTier 的优化，毕竟网上还真每太多人拿这个来联机游戏，可能远程连个 Linux 可以低延迟，但是面对大量数据包交换的游戏 ZeroTier 并没有优化其传输。\n毕竟网络这东西从物理层面都复杂，一旦远程了分析起来问题更麻烦。所以还是早早开学和同学物理局域网联机好了。\n一些原理的理解 计算机网络的知识就不讲了，说说 ZeroTier 的网络结构。\nZeroTier 在世界各处有一些主机提供数据交换的处理工作，一些关于服务器的收费项目这些也是开发者的收入来源。我们在 ZeroTier 后台创建的网络就是由他们这些主机负责转发包的，只是免费网络有 100 个接入限制。\n但是喜闻乐见，这些服务器都不在大陆境内，所以访问速度自然会慢，如果不做处理的话连 Ping 的稳定都不能保证。Moon 就是为此设计。\nZeroTier 的这些主机是 Planet 行星主机，我们可以用自己的主机作为 Moon 卫星主机。成功建立连接之后（包含签名认证），我们就可以比较快的用 Moon 来交换数据、组建网络，来获得一个质量比较好的虚拟局域网。\n那么这么看来 Planet 主机似乎没有用处，ZeroTier 为什么不提供直接运行在 Moon 上的搭建虚拟局域网的软件。个人认为难点在于组网过程中的麻烦，倒也不是不行。目前已经有这样的工具了，如果可以全部由自己解决，那么才能叫得上是终极解决方案。\n","id":16,"section":"post","summary":"这是远程联机游戏的终极解决方案。 不得不说别人建立虚拟局域网都是为了远程办公或者是使用校网权限，而我天天搞各种计算机网络的东西都是为了和同学联","tags":["Linux"],"title":"ZeroTier 建立虚拟局域网","uri":"https://chuanbohua.github.io/post/2020-04-21-zerotier/","year":"2020"},{"content":"这里是网站的更新报告。\n2020/04/15 网站基于 Hugo 重建，托管于 Github。重建后网站结构如下：\n Home：主页，7篇为一组展示所有文章； Archives：按照时间线顺序展示所有文章名称； Categories：按照特定分类展示文章，分类种类及含义如下：  Dairy：针对有时效性或特定时期的事件进行描述或评论的文章； Essay：表达个人各类感受的文章； Lecture：学科相关的各类文章； Read：关于一些书的介绍或感受； Travel：游记； Tutorial：针对不同需求所写的一些教程文章；   Tags：按照特定领域展示文章，设定 Tag 原则为该文章涉及哪些领域的知识； About：网站简介；  网站变化主要有：\n 原网站 Travel, Bookshelf, Store 板块将会以文章形式展示； 网站评论系统暂时没有比较好的解决方案，对网站内容有修改意见推荐直接邮件联系； 由于是静态网站，一些资源无法直接进行分享；  网站会继续一步步变好，也会有更多内容。\n2020/03/05 网站二周年站庆；\n做出决定，准备将网站变回静态网站。原因简单但充分；\n2019/12/15 分析目前游客情况、服务器运行情况，决定将服务器连接质量与连接速度视为首要保持目标，资源共享板块制作放缓；\n资源共享板块涉及版权(主要)、带宽、稳定性、网站定位等多种问题的考虑，目前仍在考虑和筹措中；\n2019/11/05 在网站服务器上创建私人同步云盘，支持外部连接，方便各类资源共享：\n 允许下载除 pdf 格式外的多种安全格式，如 epub (书籍分享)、mp4 (视频原片分享)、bt (大型资源分享)； 目前尚未针对单个 IP 设定下载限制，未来根据带宽、流量、云空间考虑，若有限制则另行设定； 由于网站服务器空间有限，目前暂不开放用户上传功能，未来根据服务器迁移和云空间拓展考虑。  新增 Store 页面，用于共享一些资源。\n2019/09/15 网站重建：\n遗失文章不再恢复；同时早期的一些文章会选择性的保留； 重命名 Kurakun\u0026rsquo;s Gallery 为 Travel，用以存放我在各处旅游的一些照片; 重命名 Nozomi\u0026rsquo;s Bookshelf 为 Bookshelf; Remove Register System，不过本来网站的注册系统就形同虚设; 学习生活繁忙，这学期可能只有少量更新；  2019/07/18 网站服务器出现不可逆状况，网站数据大量丢失（100% 网站框架、70% Posts）；\n网站不再可以连接；\n确认丢失数据无法复原；\n网站停止更新，我们有缘再见；\n2019/03/05 网站一周年站庆；\n原网站所有文章迁移完成；\n迁移后网站各种功能通过测试，网站正式重新开放；\n2019/03/02 不再使用 www.huachuanbo.top 域名，网站域名更改为 www.timegg.top，原 Timegg 项目不再可用；\n不再使用 GitHub 托管网站，网站迁移至独立服务器重建，带来的影响有：\n 网站所有元素均有本服务器提供，避免不稳定、速度慢等各种问题； 网站评论系统为本地评论系统，撰写适用于本网站的隐私条例； 网站功能扩充，包括但不限于 PDF 阅读、资源本地化、下载连接本地提供； 网站浏览数据不再向 Google Analysis、Baidu Analysis 公开； 网站不加入 Google 搜索引擎、Baidu 搜索引擎；  2019/02/19 更换第三方评论系统平台：Gitalk 更换为 LiveRe 评论系统，欢迎使用；\n开放 RSS 订阅，订阅链接：huachuanbo.top/feed.xml；\n网站加入 HTTPS 协议，保护用户信息安全；\n网站加入网易云音乐插件，可以在 Post 或者网站各处添加网易云音乐模块；(音乐外链部分有 bug，修复中)\n更换网站封面图；Pixiv 画师：コーラ；\n2019/02/13 Blog 加入 CC BY-NC-SA 4.0 创作协议，详情 Ref Wiki-Creative Commons license；\n重新修改了 Code 部分的 CSS，支持 Matlab、C++、Python、Java、PHP 等多种常用语言；\n使用 MathJax© 优化数学公式部分，支持 LaTeX、MathML、 AsciiMath 等多种常用公式编辑方式；\n2018/08/13 本学期准备 IELTS 与竞赛，任务较重，除 Posts 更新外未维护网站；\n微调 Code 部分 CSS，美化代码块；\n测试 Google Fonts 整体效果，美化、整理 Blog 字体；\n将 Blog 中的一些图片推至图床，一定程度提升大陆地区访问速度，但稳定性较差，可能偶有无法加载的情况。下一步准备建立自己的云盘以提供图床功能；\n2018/07/26 加入搜索功能，使用方法：在站内任何位置双击 Ctrl 即可调出搜索栏；\n完成 Google Search Console 认证，网站加入 Google 搜索，可在 Google 中搜索 huachuanbo 找到网站；\n加入 百度统计 与 Google Analysis，开始统计网站数据；\n2018/07/22 加入板块 Nozomi\u0026rsquo;s Bookcase，用来存放一些书的读后感；\n加入板块 Kurakun\u0026rsquo;s Gallery，用来存放平时的绘画作品；\n2018/07/13 Fix Posts，正式开始添加文章；\n2018/07/06 修改网站信息，完善网站设置；\n配置域名 www.huachuanbo.top，网站可以正式以该域名连接；\n加入评论系统 Gitalk；\n2018/07/05 期末考试结束，创建 Github 仓库，导入框架，建立主页面、About、Tags；\nFix CNAME，网站可以正式连接；\nFix READEME，完成网站简介，正式开始使用；\n2018/05/03 正式注册域名 www.huachuanbo.top;\n2018/03/05 个人网站企划正式启动；\n","id":17,"section":"post","summary":"这里是网站的更新报告。 2020/04/15 网站基于 Hugo 重建，托管于 Github。重建后网站结构如下： Home：主页，7篇为一组展示所有文章； Archives：按","tags":null,"title":"更新报告 Update Reports","uri":"https://chuanbohua.github.io/post/2020-04-15-%E6%9B%B4%E6%96%B0%E6%8A%A5%E5%91%8A/","year":"2020"},{"content":"去年春季拿到了交换生的 Offer，想到要在国外呆上半年的时间，应该会有不少出去旅游的机会，所以准备做一些 vlog。\n做 vlog 的点子有很久了，早在 2016 年刚刚高考完去香港玩的时候我就拍了个视频。当时拿的是一个旧的微单，而且没有稳定器，拍出来的东西现在看来是一塌糊涂。何况当时剪辑水平也不怎么好。\n这次想来想去还是拿手机拍吧，主要原因是我一直没有换相机，手里还是老的微单，拍视频效果不太令人满意。除此之外我也带不了太多的东西过去，再添相机的话携带上很麻烦。\n于是趁 618 挑了个手机云台，买了外接麦克，凑了一套标准入门的 vlog 设备来。毕竟也是抱着拍一拍试试水的心态，没有一步到位。\n拿着这套装备半年间跑了不少地方：南京、上海、苏州、扬州、深圳、Pohang、Busan、Daegu、Seoul、Hong Kong，也拍了很多素材，积累不少经验。在 Seoul 视频剪完之后，我来反思一下这半年来拍 vlog 遇到的一些问题。\n首先要说的是，我拍视频和剪视频是“意识流”。我在此之前尝试看过一些关于拍视频的书籍，但是大多都看不下去，里面影视技巧或镜头语言等理论内容似乎很高深，难以直接应用到自己拍视频的过程上。我也翻过很多人的 blog 去看看其他人总结的经验，不过感觉大家提到的东西大同小异，没有太多让我感觉很闪光的东西。\n所以我拍视频和剪视频都是随着自己性子来，觉得这个地方拍好看就拍，觉得这个地方这么剪好看就剪。也因此犯了不少错误，经常剪完之后感觉不对，和想象中有一些差距。这些就是之后要改的地方。\n设备上的问题 在此之前我的设备是：iPhone XR + 智云云台 + Rode Video Micro 麦克风。\n拍摄设备 首先从视频质量上说起，iPhone XR 已经可以应付大部分场景，配合上稳定器能达到一个很不错的整体效果。不过之后可能要求会越来越高，还是想要换一个微单来应对更多的场景和获得更好的效果。\niPhone 夜景尿崩不是一天两天了，即使是 2020 年，手机拍摄夜景视频也是比较困难的事情，这点可以参考 Busan Firework Festival 那个视频。相机在夜景方面配合镜头相对会好一些。\n另一个想要的效果是景深的控制，毕竟很多具有电影感的场景需要比较浅的景深，而现在手机在视频上还做不到很好。\n升格方面，iPhone 1080p 下可以拍到 240 fps，相机倒也没很大的优势。素质方面有人讨论，但是不成结论，这点等换微单了再作对比。\n换微单的一个附加好处是之后不用再从 iPhone 中麻烦地导出视频了。我目前的主力平台是 Windows，一般需要用 Send everywhere 或者 iTunes 导入，每种方法都比较违反 Apple 哲学，只恨没有 Airdrop。\n另外 iOS 和 Windows 在视频编码方面似乎向来不和。Adobe PR 19 版之前本体不兼容 mov 格式，还需要自己转码。目前 PR 原生兼容了 mov，但是据说效率不行，容易吃处理器卡顿，在 Windows 平台上快速预览素材也略显麻烦。\n稳定设备 稳定设备的效果超出了我最初的想象。这一点也是对比没有稳定器情况下的视频得出的。\n“电影感”的一个特征就是平稳推进，有了稳定器， broll 就可以放开了拍，控制好构图光线，一般素材都可以用。而且稳定器也是升格的好辅助。\n缺点也很明显，这东西确实太大了，而且架设起来很麻烦，做不到随开机随拍。不过对我个人来说这点倒不是很大的问题，这一学期间出去玩都是全程稳定器不离手，已经习惯了带这么个东西。另一个缺点是贵，手机云台还行，相机云台会贵一些，这些都算在买相机的预算里。（如果好用了就把手机云台出掉）\n原本买相机的时候为了节省预算，考虑买个八爪鱼脚架完事。但是考虑之后觉得还是有必要配上云台，毕竟现在云台已经成了我的必备拍摄辅助。\n相机 + 云台那重量，想想就刺激。\n收音设备 Rode Video Micro 这个入门款收音效果还不错，之后就接着用了。\n其他 摄影包。\n在我关注这方面之前，我一直认为摄影包是那些背着大量镜头和多个相机，甚至数个脚架的专业摄影师才会用到的。事实上，很多普通的背包不考虑摄影的需求，其结构很不适合放相机和云台等设备，损坏是小事（不），日常使用麻烦是真的麻烦。\n所以之后准备买个摄影包，但是摄影包又不太兼容日常使用，这点就有些尴尬。\n软件上的问题 目前主力 Adobe Premiere 2020，在此之前用过 iPadOS 上的 LumaFusion。同学给我推荐了达芬奇，不过我还没有尝试。\n软件上还是 PR 用的还不够熟练，应该深挖一下里面的一些常用功能，来节省一下重复操作的精力。这点也是我放弃 LumaFusion 的原因，这个软件很强大，也很好用，但是脚本化和可扩展性做的还是与 PR 有一些差距。不过抱着 iPad 在被窝里剪视频也是挺舒服的，iPad 渲染效果也比 Windows 感觉上流畅很多。\n至于比较大型的视频剪辑，我有些担心电脑带不动，不过短时间我应该不会尝试 4K 高帧率。\n素材上的问题 音乐的选择 目前自己的曲库很匮乏，原因在于最近一段时间不是很着迷听音乐了。\n我用的音乐是从 Sound Cloud 上下载来的开放版权音乐。虽然目前还没有并且短时间不打算从视频中获得任何收益，但是姑且保留一颗版权意识的心。\n欧美的很多音乐强调节奏，我不是很喜欢，也觉得不太适合用在我的 vlog 里面。比较轻的音乐质量有时候不是很好。挑音乐是个很花时间的过程，我经常坐在椅子上没事打开音响搜来搜去一个小时过去了也没有找到几首比较满意的 BGM。\n我了解到一些 vlog YouTuber 都会选择直接购买轻音乐曲库，搜了搜价格之后觉得我用爱发电还是暂时先不考虑这个。不说价格的话付费曲库的质量确实很好。\n之后要多花时间找找音乐以作备用，毕竟到剪视频的时候再去广撒网从头找音乐效率会很低。\n风格的把控 我现在刚拍了不几个视频，对自己的视频风格还没有一个整体上的概念。但是之后是需要考虑这个事情的。\n目前拍的几个视频都是旅游途中伴随着拍摄的，所以能看到视频中并没有太多的以人为主体的 ARoll。我觉得这样的视频可能会比较单调，或者说是容易缺乏主题和整体风格。所以之后要慢慢增加 ARoll 的片段。\n那么问题就来了，我目前的口胡能力似乎不是很强，经常在现场想不到很好的表述的方法。跟同学可以你一句我一句的交换看法，但是当我自己对着摄像机连续表达的时候就会遇到思路上的卡壳。\n这点确实需要多练才能有长进。在去年拍摄之后的日常生活中，我都主动的去练习用较为流畅、成型的语言来描述身边的事物。希望之后拍摄的时候口胡能力有所上升。\n视频的准备 经过了几次比较惨烈的取材，我深刻认识到了拍摄提前准备的重要性。我经常会开玩笑说后期的我大概率想干拍摄的我。没用的镜头拍了一大堆，想要的镜头都给略过。\n最早我尝试了提前准备拍摄内容，但是当时没有太多经验，本身就不了解自己想要拍什么，所以也写不出来比较好的提前准备的视频稿，就这样开始随便拍。那时候我觉得成视频后期占的比重很大，我前期拍摄就把好玩的东西尽可能地一股脑拍下来就完事了。\n这个方法可行，但是还是基于有一定经验的情况下。拍视频的时候会觉得一个场景非常漂亮，就连续以各种角度拍了很多，但是在后期的时候，这个场景并不在主线内容中，就用两三秒的视频略过了。\n浪费素材是小问题，更大的问题是后期偶尔会想要一些特定角度的视频，比如在某个地方如果来一个升格就很好，或者是在这个地方来个特写可以有效地放缓视频节奏等等，但是前期就是用了 30 fps 拍这一段，还来了个超广角。\n前后期的矛盾确实很难调和，毕竟拍摄的时候很难有成品的概念，不容易预料到后期剪辑时需要哪些素材。但是缓解这个问题还是可以通过打视频稿做到的，最不济规划一下行程的主题也算。\n在交换期间的英语课上，我们小组最后被要求完成一个关于中韩文化差异的 vlog，Prof 给我们一个用于画分镜的册子，并指导我们如何用拍摄电影的安排模式来拍一期采访。这个 Project 给我留下的印象很深，亲自实践发现一个视频前前后后的工作远超过拍摄的过程，前期准备和后期处理才是视频的主体。\n所以说以后要好好做出行计划或者是拍视频计划，不只是景点规划。\n没了 不，问题还有很多。反正最近没办法出门，尝试撩一撩一些 vlog up 学一下经验，面基 + 看书。下半年出国可以多拍一些。\n希望之后不要再是我自己一个人拍了。\n","id":18,"section":"post","summary":"去年春季拿到了交换生的 Offer，想到要在国外呆上半年的时间，应该会有不少出去旅游的机会，所以准备做一些 vlog。 做 vlog 的点子有很久了，早在 2016","tags":["Life"],"title":"关于 Vlog 的反思","uri":"https://chuanbohua.github.io/post/2020-04-07-vlog/","year":"2020"},{"content":"前言 这是关于大学第四年三篇文章中的第二篇，主要记录我在 2019 年上半年申请交换生的过程。至于下半年我交换期间的生活，之后可能会另开一篇文章来专门写。\n出国看看这个想法我在几年前就已经有了。曾经与新加坡国立大学交换的姐姐交流的时候，我就对留学生活有了兴趣。稍微长大一些，到了上高中的时候，我的这种想法就更加强烈。\n那么姑且先迈出一小步，出境看一看。\n于是在高中二年级的时候，我办理了身份证和港澳通行证，去香港旅游了两周。第一次走出大陆，这次的旅游给我带来的影响很大。从一个“十八线”小城市走到了香港，我感受到的远不止视野的开阔、观念的改变和文化的冲击。虽然之后几年我去过很多其他地方，但是这些地方带给我的印象总不及最初的那次香港行。\n到了大学期间，我自然想要追求走出去的机会。于是交换生自然是我的一个选择。\n正文 交换生的动机 除了出去看看之外，交换生作为一份经历是很有价值的。\n如果未来准备留学，那么在交换生期间与交换学校的 Professors 打好关系，成功要到一封推荐信会给之后的申请带来很大的帮助。\n2020.4.14 UPDATE：要到推荐信的方法有很多种，比如在教授的课程中表现突出（多与教授交流问题，各种实验和 Presentation 尽可能展现自己的能力）、直接在教授实验室做一个小项目、经常性的请教问题等等。总归是要找到方法和教授建立联系。\n如果交换的学校又恰好是你的 Dream School，那么事情就更简单了，交换期间可以让你早早的套好 Professor。申请的时候学校委员会也会一路绿灯。\n大多数情况下，记录在你 CV 里面的交换经历在套磁的时候总会吸引到 Professors，增加申请的竞争力。如果还有一张漂亮的成绩单，那么效果就更好了。\n如果未来准备工作，虽然交换经历在招聘中起到的作用有限，但是也会让 HR 在阅读 CV 时眼前一亮。交换期间所做的项目等等也会在面试中体现价值。\n不过整体上来说，就如实习那篇文章所提到的，工作的申请还是着重在能力上。申请交换生在找工作这方面性价比不是很高。\n交换生对考研和保研的“用处”并不是很大。但是在被考研备考束缚之前，或者保研决定之后，放飞自我出去看看也是挺好。\n除此之外，交换有一个隐藏的好处，即可以换掉本校的课程。比如我系大三上的课程微分几何和概率论考试以惨烈著称，如果这学期去交换，那么就可以用对方学校的学分换掉这学期课程，从而避免成绩单爆雷。\n不过对方学校的课程往往也不是那么好学，万一翻车了，回来之后换的分数还不如这边考试的就很亏。换分优势这点因人而异，如果你喜欢一考定成绩，那么可能本校更适合一点，如果喜欢把学习分散在平常，那么大部分交换学校都是这样。\n最后想说的是，交换生是学校这个平台带给我们的宝贵的机会。大多数情况下都是用本校很低的学费对换掉了对方学校昂贵的学费，在交换期间只需要支付基本的生活花销，就可以在一个很好的大学留学。是性价比很高的选择。\n交换学期的选择 比较常见的选择是大三上学期和大四上学期，不过大四上学期是考研准备的时期，对于考研的同学来说考研准备和交换生完全冲突，一般不会考虑。\n其他时期通常有各种各样的事情，比如大三下学期恰逢各大公司的实习生招聘，在这一学期可以申请当年暑假的实习，其优势在上一篇文章中已经提到了不少。不过实习生招聘如果全部是在网上进行，那么倒是并不耽误交换。这点还是取决于当年的情况。\n大四下是毕业设计时间，我校是允许学生在其他学术机构进行毕业设计的。但是事实上，能在其他学校找到一个接受你毕业设计的老师并不是很容易。一般这种情况和留学申请的套磁成功是一个性质，如果有这样的机会自然是最好。\n另外，由于春节，国内学校春季学期开学普遍较晚，如果申请春季交换生（也就是每一级下学期的交换生）可能就需要早早出发去开学。\n至于更早的学期，有些对方学校似乎不允许，即在本校两年以内的学生不推荐申请交换生。至于允许的学校，就要求语言成绩要尽快的考出来。交换生这件事情理论上是越早越好，不过也要考虑每个人的具体情况。\n总体而言似乎大三上学期是最理想的交换学期。如果有交换的目标不妨把这个时间设为基准。\n那么问题来了，这样的话语言成绩就要在大三上之前拿到。大一大二就不能以四六级来要求自己了，早早开始 IELTS/TOEFL 的准备。因为如果在大二拿到了不错的语言成绩，那么在大四的出国申请也是可以用的。\n交换国家/地区和学校的选择 交换生的申请和访学、夏令营等等不太相同。一个学校所拥有的交换生名额，就如其名，是需要和对方学校讨论合作并签约才会有的。所以一个学校的交换生项目往往很有限，按照学校排名列举出来之后，一般也没太多纠结的余地 —— 好的和差的相差不少。\n值得注意的是每年学校的交换项目会发生变化，这些都受到本校与对方学校合约变动的影响。可能某个交换项目去年还有，但是今年突然不提供了；或者从来没有合作过的一个学校，今年突然开始和本校合作了等等。这些都是要以当年学校国际合作处公布的消息为主，最好能直接联系国际合作处的老师询问。\n交换和留学不同，并不代表着你会在一个地方停留好几年，所以可以放开了选择。发达如香港地区、法国、英国、韩国都很好，远至新西兰、澳大利亚也都是选择。取决于你喜欢哪个学校和国家/地区。\n一个不能避开的考虑是花销。选择不同留学地区的花销自然不同，虽然学费可以互换，但是生活费还是要自理。不过相比学费，基本的生活费就少多了。学校的交换生招生简章上通常会有交换学期中的大致花销。\n申请 CSC 奖学金倒是可以连生活费也免掉，甚至有所结余，但是并不是每一个项目都是可以申请的。我当时进行交换的时候并没有申请 CSC 的项目，所以不是很了解，在此不提。\n仔细考虑之后，锚定一个学校就可以向国际合作处老师提交申请了。\n交换生申请的准备 N.B. 这里提到的交换生都指的是 Course-taking 交换生，如果要读 Research 交换生的话，提前联系老师和套磁流程差不多，可以直接参考第三篇文章。\n既然交换生名额是学校出面谈好的，那么申请交换生的时候需要面对的竞争只有来自校内的。只要学校推荐出去，对方学校一般不会设什么障碍。不过偶尔也会有学校亲自筛选，这种申请起来会麻烦一些。\n本校在放出当年的交换生项目的同时会给出一份学校的要求，包含 GPA 或者排名，和语言成绩。\n对于竞争不太激烈的学校，只要满足条件就可以被选中。有时候甚至与对方学校沟通，降低一点要求也是可以的。\n对于竞争比较激烈的学校，筛选会在本校进行或者交换学校进行，这时候就按照学校要求竞争名额。有时候对比 GPA，有时候需要额外的答辩。所以英语成绩和 GPA 自然是越高越好。\n按照往年的情况，好一些的学校 GPA 需要 85/80 以上，如果竞争激烈还要再高一些。一些较为普通的学校大概在 75/70 以上。\n所以如果很早就有打算申请交换生，那么就尽力把 GPA 提高，受益的当然不止这次申请。\n关于英语成绩。毕竟这里是申请交换生，不属于正式入学，所以有不少学校把语言成绩下放到 IELTS 6.0 / TOEFL 70。甚至不是特别好的学校只需要 IELTS 5.5 即可。\n不过，不论多少分，语言考试都还是要花时间准备和考试的。就像之前提到的，语言成绩要趁早。\n交换生的申请 如果是校内选拔，在被选为推荐人之后，就要开始着手准备对方学校所需要的材料了。如果是对方学校亲自筛选，那么就需要先提交材料。\n与留学申请相比，交换生的申请材料准备就简单好多了。\n这里从申请的时间线说起。\n学校一般会在 3 月份、最晚不超过 4 月初的时候放出交换生选拔通知。在这期间要多多关注学校的国际合作处新闻公告板块，也可以和国际合作处老师提前联系好。需要在规定截止时间内上交给国际合作处一份申请表。\n由于这一部分的时间一般是我们自己学校规定，所以说在一些情况下是可以通融的（比如申请数量过少等等）。不过一份申请表又不难做，赶紧交上最重要。\n之后，如果是本校筛选，那么学校会公布推荐人名单，拿到推荐名额之后大约有 15 天的材料准备时间。在材料准备时间内需要把所有东西提交给国际合作处，然后由国际合作处邮寄到对方学校（如果需要）。这个时间就不能推迟了，毕竟事关对方学校的录取工作。\n不同学校录取时间不同，对方学校录取之后会邮寄入学证明之类的文件，以供办理签证。签证办理时间就没有那么急，只需要在去学校之前拿到就可以。\n所以根据申请的时间，普遍有这些东西需要准备。不同学校可能会有额外的要求。\n首先，最重要的，护照。感谢 19 年 4 月的新政策，在异地办理护照方便多了。如果在还没有护照的话，就尽可能早的办出来。护照有效期 10 年，不用担心过期。毕竟拿到推荐名额之后的 15 天内办理一个护照时间会很紧张。\n成绩单也是早早的拿到手，毕竟薛定谔的教务处经常会没有人。获取成绩单的流程是教务处打印中文成绩单、自己一一对应翻译成英文、再找教务处的老师打印英文成绩单。\n关于翻译成绩单，新版的教务系统提供学校认可的课程名称翻译，免去的曾经翻译课程名的困惑。这里的一一对应是要求每项课程和中文成绩单位置一样。\n本次打印成绩单数量不用太多，一般两份，一份给学校，一份准备签证申请（你别说，有的地区签证申请确实要你的成绩单）。毕竟之后还会新增课程，到时候还要重新打印成绩单。\n提示：教务处的成绩单一份￥10而且只能刷校园卡，所以去之前保证校园卡里余额是够的。\n语言成绩单就好解决很多，IELTS/TOEFL 都有成绩单寄送服务。如果学校并不需要成绩单原件，那就更加简单了，直接复印/打印就可以解决问题。\n关于在读证明，有些学校需要学校专门开局在读证明，这种时候就拿学校的模板按照对方学校要求改一改，去教务处盖章即可；有的学校直接认可学信网的学籍认证，这样就比较方便，直接下载打印即可。因为也要有教务处参与，所以这个东西也是早早弄好。\n在读证明可以打印两份，因为之后护照申请或许会用到。\n有的学校会要求推荐信，不过推荐信似乎在筛选中占比不大。第一次写的话可能会纠结，去论坛参考一下其他人的推荐信是怎么写的，交换生的推荐信要求没有那么严格。然后自己写一份（没错），去教务处打印到学校的纸上盖章找老师签字。\n没错，推荐信也要麻烦教务处，所以说早早跑去弄。\n剩下的就是学校的各种表格，如换课、学生出入境登记、院系老师意见什么的。里面的签字还要按顺序来，比如导员先签，然后系里签，然后院里签，然后教务处，然后国际合作处……。往往搞这些表格签字要把主楼翻个遍。所以在出发去主楼之前可以拟定一个游览路线图。\n这些一般都在确定推荐名单之后做。鉴于日常有领导找不到的情况，前前后后应该会花好几天，跑好多次主楼。如果你一次办完了，那么恭喜你，你就是天选之子。\n除此之外，一些学校的申请会同时需要线上填报和上传文件的扫描件。倒是没有很多需要注意的事项，按照申请系统中的需求填写即可。有时候需要写一些研究计划和申请动机，这些内容可说的东西太多了，我把它们放到了第三篇留学申请里面，可供参考。\n最终，把所有材料准备好、提交完成之后，就可以耐心等待 Offer 了。\n出发之前 Offer 到了！\n又有一堆事情来了。\n其中最重要的自然是签证的申请。伴随对方学校送来的 Offer 一般会有一份正式的录取证明，这个是用来申请留学签证的关键材料。\n签证可以选择自己办理或者是找中介办理。如果有不错的中介，个人推荐交给中介去办，一般价格不会在办理签证本身价格之上太多，省时省力。因为亲自办理签证是要去大使馆的，到了这个时候学期也进行到期末复习的阶段了，花时间自己跑大使馆办理签证比较划不来。\n签证也会需要很多的材料，不过和之前相比就好弄的很多了，而且时间上也没有那么紧张。之前多打印的成绩单、在读证明或许都可以派上用场了。\n之后就可以专心准备期末考试，等待学期结束。\n大多数学校的选课时间安排在开学前的半个月时间，普遍在八月中旬。要注意的是，抢课这回事，不管是国内外高校，都是很严重的。\n所以还是有必要连接一个比较稳定快速的翻墙线路，在开始注册课程的时候赶紧把想要上的课抢到。这就需要提前做一些工作，预先挑好想要上的课程。如果是读 Research 型，老师或许会给你推荐一些课程。如果没有老师指导的话就看自己的兴趣和规划，按照学校的学分要求选课。\n抢不到课或者选中了自己不太喜欢的课程倒是不用很担心，很多学校有第一节课是介绍课程的设置。Professors 会在第一节课介绍课程的定位、大致内容和课程安排，学生根据这一节课决定要不要退这一门课。有的课程实际报名的人数太多， Professors 也会考虑增加课程的容量，最多情况下甚至可以拓展到两倍的人数。\n个人在 POSTECH 交换的时候发现确实很难找到“水课”。每一门课程，甚至是一些名字听起来就很“水”的课程，都出乎意料的硬核。每一个学分都不容易拿到。所以不管选了什么课程，还是要做好心理准备。\n不过虽然课程难度都挺高，一个课程的得分情况还是会和 Professor 有关。有的 Professor 会设置更高的 A 的比例，拿到 A 或者更高意味着你回校之后可以换到不错的分数，从而提高 GPA。\n关于课程得分情况的信息倒是不容易得到，毕竟往届交换的学长学姐提供的信息有限，与当地学生又不容易建立联系。所以归根结底还是要加倍的努力，来拿个不错的成绩。\n出发 所有的事情都已经准备好，出发去开始下一个学期吧。\n结尾 交换生申请实实在在的有一种为自己未来在自己手中的感觉，自己准备材料一步步递交、拿到 Offer 再一步步申请签证，之后是慢慢处理各种新鲜的学校的事务，每一步都刺激着我对不久之后交换生活的想象。\n归根结底，这种感受的原因就在于交换生申请时候的压力小。申请交换生的时候正是大学中的“田园时代”，每一件事都感觉很有趣，不担心失败之后的影响，只是每天想象着自己在陌生地方的生活。\n即使是现在，写着这篇文章，我也能感受着当时准备材料时候的激动。只愿这种心态能多保持一些时间。\n“当我和世界初相见，当我曾经是少年。”\n","id":19,"section":"post","summary":"前言 这是关于大学第四年三篇文章中的第二篇，主要记录我在 2019 年上半年申请交换生的过程。至于下半年我交换期间的生活，之后可能会另开一篇文章来专门写","tags":["Life"],"title":"大学第四年的交换","uri":"https://chuanbohua.github.io/post/2020-04-03-%E4%BA%A4%E6%8D%A2/","year":"2020"},{"content":"KDD 2019 有不少 RS 的文章是围绕 Ratings and Reviews Information 进行的，这两种内容慢慢加入 RS 的考虑当中，以获得更好的稳定性和动态性能。依然有少数的文章在讨论 RS 的鲁棒性。\n更多的 RS 开始使用深度模型，比如 Deep Q-learning 或者 DNN 之类，以获得更好的随时间增加的准确性。也有文章讨论冷启动的问题，不过还是少部分。\n大多数 RS 的文章集中解决在一个特定环境下的 Recommendation 问题，比如道路推荐或者是购物推荐，考虑多种多样的现实情况，其中 Rating 情况被考虑的比较多，较多相关文章都讨论到了 TOP Rating 方法和 List-wise Rating 的方法差距，这个内容在下面的 Reviewing 中也有体现。\n总之，仅在 RS 方面进行的讨论还是相对集中，其中解决的问题也有一定的共通性，想要了解更多情况可以阅读文章或者浏览下方的 Review。\n这里的 Review 遵循着这样的结构进行书写：\n 每篇文章会有首页进行文章信息的描述，方便读者找到相应的原文； 紧接着文章信息描述页，会有一段文字概括 Abstract，便于大致了解文章工作内容； 介绍文章方法背景； 介绍文章方法具体的模型结构； 介绍文章进行的试验和实验结果，以了解文章提出的模型性能。  详细内容请参考 PDF，对其有任何问题欢迎指出。\n PDF - 2019 KDD Recommender System Papers Review\n 如果你需要 Powerpoint 原件，这里很乐意提供，欢迎邮件联系。\n","id":20,"section":"post","summary":"KDD 2019 有不少 RS 的文章是围绕 Ratings and Reviews Information 进行的，这两种内容慢慢加入 RS 的考虑当中，以获得更好的稳定性和动态性能。依然有少数的文章在讨论 RS 的鲁棒性。 更多","tags":["Research"],"title":"2019 KDD Recommendation System Review","uri":"https://chuanbohua.github.io/post/2020-03-10-kdd2019/","year":"2020"},{"content":"作为一个独立游戏爱好者，自然在平时与朋友联机过很多种游戏。由于独立游戏普遍缺少良好的官方联机渠道或者联机解决方案，搭建自己的服务器成了必修课。这些游戏包括但不限于：\n 饥荒联机版（Do not starve together）：由于饥荒联机版那糟糕的优化，在多人联机的时候对主机具有很高的运算、网络要求；另外服务器稳定性变数较多，整体上比较影响游戏体验；我曾经写过 DST 的服务器架设教程，不过由于其实在占用资源太多，导致六人以上的服务器联机会使我那可怜的单核2G服务器崩溃，最后只好作罢； 火炬之光 I \u0026amp; II（Torch Light I \u0026amp; II）：在 2020 年，火炬之光的官方服务器只能以“土豆”来形容，不过也是自然可以理解的事情，玩家已经太少，平常也只有个位数的服务器在运行； 泰拉瑞亚（Terraria）：Terraria Steam 官方提供的联机解决方案实际上相当的完善，质量也比较好，但是对于一些 Mods 或许需要自己架设服务器来提供运行；  除此之外有时候为了最求更好的游戏体验而建设自己的服务器，比如百人以上大型联机、24h 运行服务器等等。\n我的世界（Minecraft）官方提供领域供大家联机使用，但是经常有延时问题，而且自由度有限。绝大多数玩家还是选择架设自己的服务器，关于架设服务器的好处就不说了，如果你要好好读这篇文章，那么说明你有这个需求，好坏处自然了解。\n这篇文章主要介绍在 Linux 环境下架设一个基于 Sponge Server 的 Minecraft 服务器，其框架选择是 Forge，该服务器主要提供原版联机、Mod 加入、插件加入的功能。\n如果你并不想自己学习怎么架设，那么可以直接翻到最后，下载 1.12.2 版本的整合包直接放到服务器中运行即可。\n文章假设：\n 阅读者已经有了可供开服的服务器，如阿里云轻量应用服务器 OR ECS，腾讯轻量应用服务器，甚至你家树莓派； 阅读者有很基础的 Linux 知识，能 SSH 连接，能 ftp 上传文件，能在解读下大致理解这篇文章中的 Commands； 阅读者对 Minecraft 有一些基础的了解，已经选择好了要做服务器的游戏版本，准备了 Mods 和一些插件； 阅读者有朋友一起玩 Minecraft，鸽了的话你这个服务器也就白搭（两种意思）；  那我们开始。\n2020.02.18 Update - 在联机尝试了两天之后，发现阿里云的服务器的算力实在不足（不得不说我用阿里云搞联机一次没成过，都是卡在性能上），所以拿手里的开发笔记本来当服务器。所以说如果是和朋友联机，为了游戏体验，如果有一台多余的电脑，让它做服务器是最好了。过程上只需要在下面教程顺利完成之后在家里路由器添加一个虚拟服务器转发 25565 端口到你的开服电脑上，之后把家里的公网 IP 发个同学。\n准备 Minecraft Server 本体 N.B. 步骤 2 准备 Minecraft Server 本体 和 步骤 3 加入 Forge 框架 可以不在服务器中进行，可以选择在 Windows 下完成之后通过 ftp 上传。在这里我更加推荐在 Windows 下进行这一部分。\n你可以在 Sakura’s Mirror by Akkariin 这个网站找到各种各样的 Minecraft Server 镜像源，在这里我选用官方的原版服务器：选择右上角“选择分类”、Minecraft Server、选择需要的版本进行下载。\n如 1.12.2 版本的 Server 可以通过此链接下载。\n之后请检查你的服务器是否有满足要求版本的 Java，只要你的 Minecraft 版本不早于 1.7.2，这里都建议你安装 Java 8。具体安装方法请参考你所使用的 Linux 发行版进行搜索。这里请不要急着运行该 Server。\n加入 Forge 框架 你可以在 Forge 官方网站 下载你需要的 Forge 框架。进入网站之后在左侧选择你的游戏版本，之后右侧会提供对应此 Minecraft 版本的 Forge 安装文件：\n Windows Installer 顾名思义是给 Windows 端 Minecraft 安装 Forge 用的，也就是游戏端； Universal 是给服务器端安装使用的，架设服务器需要下载这个；  需要注意的是 Forge 也会有非常多的版本，版本的选择至关服务器是否能运行：\n  如果对 Mods 有一定了解，那么肯定会知道不同 Mods 兼容的 Forge 版本不同，如果选择了不兼容版本的 Forge 会导致 Mods 无法加载。所以在选择 Forge 版本的时候参考你所准备添加的 Mods，确保所有 Mods 可以在你选择的 Forge 版本上顺利运行；\n  如果你打算加入 Sponge Server 这个 Mods，请在下载 Sponge Server Jar 的时候确保其版本和 Forge 一模一样，否则会引起不稳定甚至无法运行；\nN.B. 这里值得说一句的是 Sponge Server 的加载原理实际上和其他 Mods 没有太多不同，其本质可以理解为一个 Mod；\n  之后就可以进行 Forge 的安装了：\n  如果是在 Windows 平台，那么运行 Jar 之后选择 Install Server，选择放着 Minecraft Server 本体的文件夹。此处可以忽略*“There are already files at the target directory.”*的提示；\nN.B. 请专门为 Minecraft Server 建一个文件夹，在进行这一步前把 Minecraft Server 本体移动进去；\nN.B. 安装过程中或许会发生“下载失败”的 Error，这时候可以重新进行上述步骤，下载会从断点处继续进行；\n  如果是在 Linux 平台，那么方法类似：java -jar forge-你的版本号-installer.jar 运行 Jar 之后同样选择 Install Server，选择放着 Minecraft Server 本体的文件夹，注意事项同 Windows；\n  到此为止我们得到了一个 Forge 框架的 Minecraft Server。如果以上步骤你是在 Windows 平台进行的，那么是时候通过 ftp 上传到你的 Linux 服务器上了。直接将上述安装好 Forge 的文件夹传输即可。\n运行服务器 \u0026amp; 加入 Mods N.B. 以下内容均在服务器端进行。\n如果上述步骤没有出现问题，那么现在服务器文件夹中应该会有 Forge 的 Universal Jar 包，其名称大致为：forge-你的版本号-universal.jar。\n运行该 Jar 包：java -jar forge-你的版本号-universal.jar 以启动服务器。\n第一次启动会遇到一个大致意思为 Eula 禁止的提示，这种情况只需要修改文件 eula.txt 中为 Eula=True 即可。修改之后重新运行，运行时间取决于你的服务器运算性能。\n顺利运行完成之后命令行会有 Done 的提示，这时候说明服务器已经顺利运行了。之后用 stop 指令关闭服务器，我们来加入一些 Mods。\n这次重新运行之后你会发现源文件夹里面出现了很多新文件，其中就有 Mods 文件夹。这时候你就可以把你所要加入的 Mods 上传到这个文件夹中。然后重新运行服务器，这次加载时间会大幅度增加，取决于你添加 Mods 的复杂程度。\n如果你的 Mods 选择没有问题，那么这次服务器会正常开始运行。但是在激动的和同学连接进入之前，这里有一些设置可以改一改。\n在 server.properties 文件中：\n difficulty 游戏难度：1-简单，2-普通，3-困难，也可以用 Minecraft 内建指令修改； spawn-protection 出生点保护，出生点半径内的物体无法破坏； online-mod 如果为 True，那么只有正版玩家可以连接进入，如果为 False 那么不论正版盗版玩家都可以连接进入，作为玩家群体筛选；  更改之后可以重新运行服务器。到此为止一个带 Mods 的 Minecraft Server 已经建立好了。下面来解决一些常见的连接问题：\n 别忘了在服务器的防火墙中开放 25565 端口，该端口是 Minecraft 的连接端口； 注意游戏端应与服务端具有相同的 Mods 和各类版本，以获得稳定的游戏体验，推荐直接把服务器上 Mods 复制到自己的游戏端下； 连接方式：多人游戏，直接连接，输入服务器公网 IP，连接 即可；  其实，如果你并不需要 Sponge 为你带来的插件添加功能，那么到此为止你已经可以和同学开始玩了。\nSponge Server 和插件 如果你想体验插件带来的方便，那么就要加入 Sponge 了。加入 Sponge 的方法与其他 Mods 并无差距，你可以直接将其上传至 Mods 文件夹中并重新加载服务器。\n之后就可以在 Server 中添加插件。添加插件的方法也和 Mods 一样，直接将插件的 jar 上传至 Mods 文件夹并重新加载。但是值得注意的是插件的配置文件并不在 Mods 文件夹下，而是在 config 文件夹下，如果有修改的需求请注意文件位置。\n另一点值得注意的是插件并不需要游戏端加载，只需要加入服务端即可。\n至此一个完整的 Sponge Server 架设完成。\n整合包[已失效] N.B. 由于网盘服务器到期，这个链接失效了，我会传到其他云空间。\n如果上面你都没看，那么直接用下面的整合包也是可以的，但是这里只有 Minecraft 1.12.2 + Forge 2838 版本 + Sponge 2838 版本，可能会对你想加入的 Mods 带来一些限制。\n使用方法（Linux）：\n 下载该整合包：wget https://timegg.top/wp-content/uploads/2020/04/Minecraft_sponge.tar 解压至任一文件夹，将你想要加入的 Mods 或者插件放到 Mods 文件夹中； 运行 ./lunch_server.sh 即可运行服务器；  在连接服务器之前请阅读 4.运行服务器 \u0026amp; 加入 Mods 部分中的注意事项。\n之后在 Windows 上下载 Minecraft 1.12.2 并安装 Forge 2838（不少启动器提供一键式安装），并且确保 Mods 和服务器同步，启动游戏即可连入服务器。\n结尾 希望 Minecraft 可以给你和伙伴们带来诸多欢乐。\n","id":21,"section":"post","summary":"作为一个独立游戏爱好者，自然在平时与朋友联机过很多种游戏。由于独立游戏普遍缺少良好的官方联机渠道或者联机解决方案，搭建自己的服务器成了必修课","tags":["ACG","Linux"],"title":"在 Linux 平台创建 Minecraft Forge 服务器","uri":"https://chuanbohua.github.io/post/2020-02-15-minecraft-server/","year":"2020"},{"content":"《四叠半神话大系》的主题与《春宵苦短，少女前进吧》接近，但是又非常不同。就表达形式上，两部作品都是基于“我”的大学生活，以大学校园为舞台；就表达内容上，《四叠半》着重于大学的生活，《春宵苦短》着重在感情上进行描述。两部作品各有亮点，都是我在推荐森见作品时首选的。\n相对于“让人想要为之祝福”的《春宵苦短》的故事，《四叠半》的故事更能给我带来共鸣。在我不断抱怨大学生活的荒渡、抱怨自己做了错误的选择、抱怨从来没有想象中美好的大学生活发生在我身上的时候，充实、令人羡慕、至少是令未来的自己羡慕、一生一次的大学时光从身边流过。没有完美的选择，即使回到过去重来的方法，我无论如何都注定会度过一个“失败”的大学时间。但是站在这段时间之外，我发现过去的每一天都是充实的，我做过很多”青春洋溢“的事情：好朋友的欢闹、奔走于陌生城市的激动、成就达成感动的瞬间，欢乐、懊悔、朋友、家人都在这段时间陪着我。不论我做了什么，这都是令人羡慕的四年。\n站在毕业前的节点上，与身边好友同在的时间可以进入倒数。珍惜而不后悔，一起度过最后的一段时间。\n2020.03 Update - 由于疫情，大学最后一段时间并不能和同学一起过了。\n《四叠半神话大系》也是森见为数不多的被改编为动漫的作品。其动漫改编质量堪称业界典范之一，具有非常优秀的表达力。\n当然，文字与影像各有表达的特长，下面是从原作中摘取的一些段落，如同我在《春宵苦短读书笔记》中做所，或许读者可以从中略有一窥这部作品。\n  大概会有人说：反正你还年轻，人生有无限可能。\n天底下没有那种蠢事，不可以惯坏年轻人。\n 接招吧年轻人，认清事实。不过关于这件事情，信不信姑且由自己。对这句话看法的分歧倒是和作品想要表达的主题有所相似：你要是相信年轻人有无限可能，这样当然可以，或许你会因此开始一个奋斗的生活；天底下没有那种蠢事，或许是，年轻人要认清现实，然后宅起来吧。\n  “因为一个人切开大蜂蜜蛋糕吃，未免太孤单了。我希望你深切感受到不甘寂寞的滋味。”\n“原来是那么回事啊。嗯，我会细细品尝、尝到腻为止。”\n 我也很不甘寂寞，但是我没有大蜂蜜蛋糕来细细品尝到腻为止。（说来，山崎的蜂蜜蛋糕块挺好吃的。）\n  常言道，光阴似箭。但像这样的季节不断更迭，却令人十分恼火。我不晓得打从盘古开天至今，过了多久的岁月，但从目前的情形来看，横竖没过多少。人在那么短暂的时间内如此大量繁殖，令我十分惊讶。而且众人每天费尽心思地汲汲营营。人这种生物实在是很勤奋。了不起！所以我说我觉得人不可爱——是骗人的。可是就算再可爱，我也没有闲工夫怜悯那么多人。\n 人类确实是”横竖“没过过多少。这个表达真有意思。人类这种生物也确实是很勤奋，了不起！\n所以我也。\n  小津狞笑，表情变得越来越像妖怪。\n“我积极地接受自己出生在无法过充实学生生活的星球这个事实。尽情享受浪费生命的的学生生活。所以你没有理由对我说三道四。”\n我叹了一口气。\n“因为你过这种那种生活，我才会变成这样。”\n“每天浪费生命，不是很快乐吗？你有什么不满。”\n 大家也一起积极地接受自己无法过出充实生活的事实、尽情的享受浪费时间吧！我们是在充实地浪费时间。\n我就是烂.jpg\n  又不是为了炙烈的爱情而心焦，而是因为刹那的寂寞而向陌生人寻求慰藉，这违反我的信念。混账学生们像这样耐不住孤独而贪得无厌地向他人寻求慰藉，我会不会是这样因为瞧不起他们、才会以“恋爱绊脚石”这个极度接近污名的威名、扬名天下呢？我会不会是为了毫无意义的苦斗而废寝忘食，最后获得极度接近败北的胜利呢？\n 这段辩论和《春宵苦短》最后一部分”我“脑内法庭的辩论挺类似的，”所有的现充都是耐不住孤独而寻求慰藉的人呢，我看不起他们“，不错的陈述。\n我也是只会偶尔产生寻求慰藉的想法呢，所以我也是坚持到了今天。再坚持下去，我是不是也是极度接近败北的胜利者呢？\n  “不可以毫无限制的使用可能性这个字眼。限制我们的，不是我们拥有的可能性，而是我们拥有的不可能性。”师傅说：“你能变成兔女郎吗？你能变成飞行员吗？你能变成木工吗？你能变成纵横七大海洋的海贼吗？你能变成以卢浮宫的馆藏品为下手目标的世纪大盗吗？你能变成超级计算机的开发者吗？\n“没办法。”\n学长点点头，难得地敬我一根雪茄。我感恩的接受，但为了点燃雪茄，我费了一番功夫。\n“我们大部分的烦恼，是来自于梦想另一种有可能的人生。把希望寄托于自己的可能性这种不能指望的东西、正是万恶之源。你必须认同无法变成其他人的自己。你不可能能够享受所谓的瑰丽的学生生活。我向你保证，所以你要沉着以对！”\n“这种说法真过分”\n“要采取毅然决然的态度、向小津看齐！”\n“恕我拒绝。”\n“哎，别那么说。你看看小津。那家伙确实是个笨到家的傻瓜，但是很有定性。比起没有定性的秀才，有定性的傻瓜到最后往往过着充实的生活。”\n 这段话可以说是整部作品中最核心的一段话了，我有无数种想象中的可能的人生，不断懊悔做错了什么、错过了什么、忘记了什么，在这样的状态下讨厌现在的生活、寻找变成”自己“的方法。但是实际上，确实很过分，我也是不可能享受到瑰丽学生生活的人。不过要沉着应对、做一个傻瓜充实过日子还是有一点点难度。看来我的”傻瓜之气“尚未成气候。加油吧。\n  原来贺茂大桥的决斗是指：用剪刀石头布决定下一代代理人的先攻后攻。\n 是世纪大战呢！（指铺垫了将近半本书）\n  前年秋天从“福猫饭店”金盆洗手之后、我把自己关在四叠半宿舍这座城堡半年。于是，我觉得自己是个耐得住寂寞的人，但这只能说是肤浅的想法。我从前并不孤独。相较于如今的我，当时的我一点都不孤独。等于是在孤独的大海海岸边，只把脚尖沾湿，不顾周遭的眼光，大喊“我好孤独！”的早熟婴儿。\n ”我好孤独！“，我背着身边诸多随叫随到的好朋友、悉心照顾的老爸老妈、各处关心自己的人如此地喊道。\n在交换生宿舍三天没有说一句话之后，我觉得那时我就是个小孩子。\n  简单来说，若是坦白写，如同各位的猜想，我喜欢上她了。\n ”我“认清”四叠半“世界真相之后，终于承认了一直不承认的、毫无争议的事情。曾经在犹豫和胆怯间不断错过了无数次，这次终于要认清哪个才是属于自己的世界了，或者说是自己的世界只能是自己的世界，所以不放期望于想象中的世界，开始自己追求想要的结果了。\n  虽然已经觉得那种事情不可能，然而，假如能够离开这里的话，我想做很多事情。\n吃美味的饭、吃“猫拉面”。出门去四条河原町看电影。和峨眉书房那个长得象章鱼的老板吵一架。可以出门去大学上课。可以到下鸭神社内跳舞献给供奉的神明贺茂建角身神。也可以去二楼的樋口学长的宿舍，沉溺于黄色笑话。出门去洼冢牙科诊所检查，舔羽贯小姐的芊芊玉指应该也很愉快。去向如今被组织开出的可怜的相岛学长打招呼也无妨。大家都在做什么呢？快乐的活在热闹的世界里吗？城崎学长和香织小姐过得幸福吗？小津依然以他人的不幸为配菜吃三碗饭吗？明石看着少了一只的“软绵绵小队麻薯战士”不知所措吗？或者在某个意想不到的地方见到了缺少的那一只呢？我想确认这个事。\n然而，那种事我已经办不到了。\n 毕业之后如果什么时候我回想起来大学生活了，我应该也会写下一段类似的话。身边的很多事，忘掉的事，无关紧要的事，重复到烦的事，都是充实到值得回忆的事情。大家都在做什么呢？\n  我和明石之间的关系在那之后有何进展脱离了本书的主题。因此，我就不值一书写那些令人开心又害臊的妙趣。各位读者大概也不想看那种令人唾弃的内容，把宝贵的时间丢进臭水沟吧。没有比有情人终成眷属的爱情更不值一提的了。\n 现充爆炸吧。没有比情人终成眷属的爱情更不值得一提的了。\n  如今，虽说我的学生生活中多少出现了新的发展，但若有人觉得我会天真烂漫的肯定过去，我会深表遗憾。我不是会那么轻易肯定过去的错误的单纯男人。\n\u0026hellip;\n因此，我不会抱紧过去的自己，也不会肯定过去的错误，但好歹愿意不加追究。\n 不管过去的东西有没有错，现在该做的事情都在眼前堆着，堆得很高。但愿我们都愿意不去追究过去的事情。\n","id":22,"section":"post","summary":"《四叠半神话大系》的主题与《春宵苦短，少女前进吧》接近，但是又非常不同。就表达形式上，两部作品都是基于“我”的大学生活，以大学校园为舞台；就","tags":["Novel"],"title":"森见登美彦作品《四叠半神话大系》","uri":"https://chuanbohua.github.io/post/2019-11-28-%E5%9B%9B%E5%8F%A0%E5%8D%8A/","year":"2019"},{"content":" 森见登美彦是一个“不正经的天才”。\n 至今为止，我几乎通读了他的全部作品，沉迷于他所描绘的吸引人的奇幻京都：鲤鱼、宵山、天狗、狸猫、鸭川、电气白兰、睿山电车、八百神明、四叠半的公寓\u0026hellip;。一直没有时间和精力去写一篇关于森见登美彦各个作品的感悟总结。今天终于下定决心写下一点东西，作为开头。\n在森见登美彦各个作品中，有许多我非常喜欢的句子或段落。想要好好地体验森见登美彦的行文风格，就要读一读原文，感受感受京都宅男各种奇妙而有趣的描述和比喻。所以我将翻译版的原文摘录至此。同时适当地，在不影响大家体会这些文字的情况下，我会写一些感受。所以文章整体上的结构就是总评和摘句。\n如果有其他的朋友同样喜欢森见登美彦的作品，并且可以通过看到这篇文章和我分享一些观点，那么这篇文章也就“人要知耻，然后去死”了。\n森见登美彦的一些作品被改编成了动漫，汤浅政明监督的能力非常优秀，在动漫化的过程中对原作进行了大量的改编而不失原作风格，不过也因此动漫作品和原作在内容上有不小的差距，我觉的相对于直接接触到森见的书，从动漫作品开始了解森见登美彦的人反而会比较多一些，所以在这里我会提到一些动漫化作品中改编的、或者是迫于篇幅需要省略的点。通过两方面的对比可以更好的了解森见的作品。\n《春晓苦短，少女前进吧》 关于本作作品名的翻译，我认为是很信达雅的。\n原作名：夜は短し歩けよ乙女，可以直译为“夜晚短暂，向前迈进吧少女”。在中文的翻译中，选用了“春宵”一词，该词出自苏轼的一篇诗作《春宵》。“春宵”本意即为“春夜”，在这里亦可喻可贵的欢乐时光。用在这篇作品的标题中达到了双关的效果：如果是已经读过这篇作品的朋友，应该会对春季夜晚中李白先生对少女说的这句话有所印象。将其翻译为“春宵”，既指的是在春季夜晚发生了这么多的事情，也喻指了这一晚美好的时间。\n这篇作品从“我”和少女两个角度描述了春季的一个夜晚、夏季旧书集市、秋季学园祭和冬季感冒神其中的各种故事。这篇文章的主线是两个人故事的交织：“我”在各个季节的事件中追随着少女，在此过程中发生了一系列有着各种关系和交织的故事。\n这里就不得不提到这部小说改编成的同名动漫剧场版，在剧场版中，所有的故事不再是分开在春、夏、秋、冬四个季节的夜晚上进行，而是发生在一个漫长的夜晚，少女不断前往不同故事发生的地点，并且所有的故事都进行了细节上的修改，让其可以串联在一起。\n这点是我对于汤浅监督最为佩服的一点。剧场版中的一些伏笔，比如在与李白的斗酒大会之后，羽贯小姐在岸边坐的时候觉得非常的冷，在之后的学园祭开始发热，这点改编让之后羽贯小姐得感冒这件事情贯穿了原作中分别发生在春、夏、秋三个季节的剧情串联了起来，放到了一个夜晚，也让之后京都感冒神出没显得没有那么突兀。这样的剧情大框架的改编也符合了原作的标题：春宵苦短，少女前进吧！\n森见登美彦的作品往往都是通过结尾将前面的全部内容串连起来，让人得以了解故事的全貌、了解其中想表达的一些东西。所以在读他的作品时，偶尔会觉得前边的东西并不连贯，甚至没有关联。但是在读到最后一部分的时候，所有事情都可以神奇的联系起来，这样的结局带来的感觉是震撼的。\n这种感受与阅读各种推理小说的感受并不相同，在阅读后者的过程中，我们往往专注于寻找通往一个真相的线索。而在森见的作品中，我们只是在不同的段落中，体验在那个段落丰富的故事，在了解到这些故事之间的关系时，会感觉到真实有趣，就像所有的事情之间都有着无限的红线与黑线的连接。\n这篇作品想表达的内容有许多，比如“我”对大学生活的看法和反思，“我”和少女关系的辩论、对新事物的态度和看法等等。\n有一个让我感触很深的一点：作品强调了人与人之间的联系。通过这四个季节的各种事件，几乎所有人都被串联了起来，这点在冬季感冒神事件中最有体现。我觉得原作中的这段话最能体现出这一点：\n “从东堂先生身上踏上旅程的感冒之神找上奈绪子小姐夫妻，从他们夫妻再找上赤川社长，再从赤川社长到内田医生和羽贯小姐——。而同时，它又藉由东堂先生找到闺房调查团的团员，找到峨眉书房老板，找到京料理铺千岁屋的老板，找到闺房调查团青年部众人，然后找到学园祭事务局长——。学园祭事务局长把感冒传给内裤大头目和纪子学姊，传给来探病的京福电铁研究会、电影社“御衣木”、诡辩社等众多相关人士。这多达数十人的相关人士，再将感冒各自传给他们的亲友，片刻间便蔓延到整所大学。几千名学生得了感冒，病毒又在他们出入的打工之处、玩乐场所散播开来，然后传遍整个京都——”\n 最初读到这里的时候觉得非常有趣，所有的人物都曾经在春季夜行、夏季旧书集市、秋季学园祭的各种事件中担任了一份角色，大家也因此产生了相互的联系，以至于一年过去了，这些事件里面的参与者都被关联了起来。\n如果想要体验这种感受，自然是要亲自读一读这本书，大致是会被有趣的故事所吸引的。森见的书更吸引人的是故事中许多的细节描写，大量的细节描绘出了“不正经的天才”脑中吸引人的京都。\n下面是我在阅读作品中找到的有趣的句子或者段落，虽然很难通过几个句子窥见作品全貌，不过更重要的当然是体会一下森见各种有趣的描述：奇幻奇妙的京都世界。\n  “出生在这世界上之前，我们都是尘土，死了之后又回归尘土。比起当一个人，我们当尘土的时间久的多。那么，死才应该是一般的情形，而活着只不过是罕见的例外。既然如此，死有什么好怕的。”\n 这个是前诡辩社成员在为社长庆祝60大寿时候的“诡辩”发言。诡辩社在森见的其他作品也出现过，经常能带来很多有趣的发言和观点。这段“诡辩”出乎意料地含有一些哲理，不愧是老一辈的诡辩社成员。\n动漫版在表现这段内容的时候，加入了“手表”的设定：老人们手上都有一块手表，而这些手表都是以月、年为单位，指针飞快地走着，与此同时，少女手上的手表却是以秒为单位，一格一格跳动着。好像在说老人们不再像青春时期一样，一分一秒都是宝贵、富有意义、有价值的时间。\n  “将热闹欢乐由一家店带往另一家店，我们像是夜行的奇幻诡谲马戏团，又像是自行举办了一场小型祇园祭。”\n 一段话把少女从宴会走到宴会的过程描述得很有感觉，电影中也有很好的表现这一段内容。\n  “少女要懂得含蓄，我必须在天亮之前就寝。”\n 这是女主在结束春季酒会夜晚的宣告。动漫版将其改为“寻找绘本”，紧接着开始了夏季旧书集市的故事。\n  “自己是怎么踏上这段夜晚的旅程，这一刻我已经想不起来了。总之真是一个有趣至极、获益良多的夜晚。或许只是我自以为获益良多也不一定，但这一点都不重要。渺小如鸡豆的我，唯有举步向前，继续朝美丽而和谐的人生迈进。”\n 这点观点在森见登美彦的很多作品中都有表述，尤其是《四叠半神话大系》。森见总是表达给大家一种观点，不要过于计较做一件事要得到什么、是不是有一定的意义\u0026hellip; 这些东西一点都不重要，尽管去做，有趣就可以了。\n  “我的浪漫引擎狂奔疾走，阻无可阻，挡无可挡，终于，我因为太过难为情而鼻血狂喷。\n人要知耻，然后去死。\n然而，我已无心倾听内在的知书达理制胜。\n原因无他，谁教在堕落至极的现今大学之中，遇事知耻、行走坐卧守礼守分而得善报者，一人也无。”\n “我”在这里描述的“遇事知耻、行走坐卧守礼守分”都是给自己没有胆量、沉迷于“填护城河”找的说法：自己没有勇气去向少女表明想法，却用沦为大众大学生的事情是耻这样的观点教导自己守礼守份。在这里就是自己的感情战胜了“填护城河”的那种心情：无心倾听所谓的知书达理，然后去主动追求想要的感情。\n  “喊忙的人最闲了，因为对自己闲着有着罪恶感，才会到处说自己忙。再说，真正忙的人根本不可能出现在旧书集市乱晃。”\n 在生活中，有好多真正忙的人，也大多是很优秀的人，把几乎所有的时间都投放在了钻研的领域，没有空闲去宣传自己，在各个方向默默的努力和贡献。有种人际关系“幸存者偏差”的感觉。\n  “我当知无不言、言无不尽，就是学园祭事务局的人。他们视以兴风作浪为生存意义的学生为公敌，是只愿一切风平浪静的无事主义者。他们为了让学园祭平安落幕，将学园祭恐怖分子乖僻王监禁在某处。”\n “以兴风作浪为生存意义的学生”这个描述太有意思了。\n  “据说一个身负绯鲤的娇小女生，闯进诡辩社主办的“米饭原理主义者 VS 面包联合组织”的讨论会，主张“吃饼干不就好了！”，在现场投下一颗震撼弹。”\n 下面还有一段关于诡辨社的内容，让人有一种感觉，诡辩社的成员都“傻乎乎”地对一些奇怪的问题或者是完全无关紧要的问题进行着激烈的辩论，而他们也乐在其中，特别有趣。倒是针对米饭还是面包的问题确实可以争论上个几天几夜的。姑且在此命下辩题：我是“高贵”的面包联合组织成员，有谁愿意与我争辩。\n  “学长热情的演出真的非常精彩，学长很会演戏吗？\n没有，我不擅长演戏。\n不过，真是奇遇，我经常遇到学长呢。这才叫做神明的方便主义吧。‘\n是啊。\n学长凝望着熊熊火焰说：神明和我们，全部都是方便主义者啊。”\n 当我看到作品的最后我才理解到这里“方便主义”的含义，“方便主义”在某种意义上就是缘分啊，不论是令人心动的巧合，还是竭尽全力去创建的这样的机会，在这些过程中总是充满着各种各样意料之外的事情，而就是在这样的意外中触发契机、人与人产生关联，有时候就会让人觉得“神明让我们产生关联、产生的太随意、太方便了一点吧”。\n不过，缘分也是努力争取到的，“方便主义”的“方便”也不都是免费得来的。“我”做过如此多的努力，从学园祭的开始追逐少女到结尾，在学员事务长那里查询过少女资料、在韦陀天暖桌上询问过少女去向、挨着学园祭摊贩寻找着少女经过的痕迹\u0026hellip; 这些努力都凑成了“方便主义”的一部分，把“我”推到了乖僻王最后一幕的舞台。\n  “无法动弹地凝视着被窝里的黑暗，我勇敢面对一个根本性的大问题。与她相遇超过半年，我只有填平护城河的机能特别进化，脱离了恋爱的正轨，沦落为“永久护城河填平机”，原因出在哪里?这个问题有两个可能的答案。一是，我不敢明白确认她的心意，是个令人唾弃鄙夷的孬种。但这攸关我的面子，所以先予以否定。那么，就只剩下另一个答案――其实我并没有爱上她。\n世上存在一种恶质的偏见，认为上了大学就会交到女（男）朋友。但是事情其实是相反的。是笨学生受到“上了大学就会交到女（男）朋友”这偏见鼓动，盲目奔走以保全自己的面子，导致了每个人都有女（男）朋友的怪现象，更助长了偏见。”\n 我认为这段话实际上就是解释了之前“人要知耻，然后去死。”的背后原因：把原本属于“自己不主动”的责任推给了“世上恶质的偏见”，甚至排除来排除去，最后居然得到了“其实我并没有爱上她”这样的结论。这段辩论算是对“我”不敢主动的性格一阵见血的描述。\n  “我利用她的存在，填补自己内心的空虚。这种软弱的心机便是一切错误所在。做人要知耻，我应该向她下跪道歉。”\n“在身体虚弱时思考，想的没有半件好事。\n入学以来只降不升、今后也没有进步指望的学业成绩。高喊着考研究所这个逃避的藉口，将就职活动往后延。没有灵巧的心思，没有卓越的才能、没有存款、没有力气、没有毅力、没有领导能力、也不是那种小猪仔般可爱得令人想用脸颊磨赠的男子。“什么都没有”到了这个地步，是无法在社会上求生存的。\n我一心急，竟爬出万年铺盖，啪啪啪地以手心到处拍打四叠半大的房间，看看会不会从哪里滚出一些宝贵的才能来。”\n 我也想拍拍我的房间，看看哪里会不会滚出来一些可贵的才能来。\n  “回想起上大学以来的岁月，难道不是对所有的一切思虑重重，想方设法于拖延早该踏出的第一步，徒然虚度了吗?即使是在她这座城塞的护城河打转，徒然让自己愈来愈疲惫的此际，状况也毫无改变。因为我内心多数的声音总会召开会议，阻止一切决定性的行动。”\n 在对自己的不断反思中，“我”终于点破了自己的问题，直面“我”拖延、不敢踏出一步的心理，当我看到原作这里时着实感动。\n  “天狗樋口氏的传授含糊得不能再含糊。他进了旧书店的朋友家，擅自来到晾衣台，指着天空对我说：“只要活得不脚踏实地，就能飞了。””\n 我活得也不脚踏实地，请问我可以飞吗？\n  “李白先生的康复庆祝会是下午六点在纠之森举行，我和她约好下午四点喝咖啡。为了不迟到，我必须在下午两点离开宿舍。因此，我必须在早上七点起床。因为衣服洗好晾干要几个小时，淋浴吹头发要一个小时，刷牙要五分钟，整理头发要半小时，然后预演与她的对话要数小时，忙得要命。”\n 初次约会的紧张描述的淋漓尽致。\n值得一提的是，剧场版中将李白先生的康复会给省略掉了，这点很值得思考。在整个剧场版中，李白先生的形象并不算很好，甚至被认为就是一位“反派”。\n如果你也曾经读过《有顶天家族》，就可能会体会到这样一种感觉：在森见登美彦描述的世界中，没有什么正派、反派之说，大家都是“傻乎乎”的样子，有趣至上、真切地体会着生活，或许今天我们依然是仇人，但是明天就可以一起喝酒、甚至还爱上了对方；互相做过的很多看似会立下“血海深仇”的事情，过了一夜好像都没怎么发生。各种各样奇妙的故事就发生在这群冒着“傻气”但又有趣的人们中间。\n本作中的李白也是这样。李白在原作中给我留下的印象是很不错的，在春季斗酒之后，李白快乐的邀请所有人喝伪电气白兰，并一起举办聚会；在旧书市场的拍卖会上，也没有剧场版中描述的很“坏”的感觉。作品只是从东堂这里提到了李白先生是放高利贷的，但是之后就再也没有提到过这方面的内容，使得在原作中，整体上李白先生确实是一个慈祥而有个性的老人。在经过一年的时间后，大家都互相有了联系，李白先生也邀请大家庆祝康复，各方面上都给人一种十分和谐温馨的感觉。另外与剧场版不同的是，李白在春季斗酒后给少女说的“春宵苦短，少女前进吧！”这句话。\n  “我一边准备出门，一边想要和学长说什么。\n我有好多事想问学长――学长在那个春天的先斗町度过了什么样的夜晚?在夏天的旧书市集吃的火锅又是什么味道?而秋天的学园祭里，为了演出乖僻王冒了什么样的险?在我不知道的时候，学长都是怎么度过的?我想知道得不得了。”\n“一心思忖着该说些什么。绞尽脑汁之后，我想到一个好主意。\n我有很多事想问她――她在那个春天的先斗町度过了什么样的夜晚?还有，在夏天的旧书市集里看了什么样的书？而在秋天的学园祭里，又怎么会担起那场大戏的主角？若她肯谈这些，我也能聊聊我的回忆。”\n 我认为这两段话是这部作品的点睛之笔。“我”与少女在一年的时光中、在四季的各种事件中分别经历了极为丰富而有趣的故事，故事中的人物事物之间又有着有趣的关联，在此之中“我”与少女多次错开、失去联系的机会，但又是在这个过程中，相互的关系也在不断的拉近着，最后，在一年经历后，“我们”终于享受了“神的方便主义”。\n回忆起这一年的时间，“我们”非常想知道这样的缘分背后，是多少有趣的故事交织着、人与人之间的关系又是怎样奇妙地关联起来的。在读原作时，读到这里真的是非常的感动，借用剧场版中的一句话去总结这样的感情：“相逢即是有缘。”\n最后，还是用原作中的最后一段话来结束。\n “在这值得纪念的一刻，我不再填平护城河，转而向更加困难的课题挑战。读者诸贤，还请见谅。期待他日再相逢。再会了，填平护城河的日子。\n最后，我要送各位一句话：尽人事，听天命。”\n ","id":23,"section":"post","summary":"森见登美彦是一个“不正经的天才”。 至今为止，我几乎通读了他的全部作品，沉迷于他所描绘的吸引人的奇幻京都：鲤鱼、宵山、天狗、狸猫、鸭川、电气白","tags":["Novel"],"title":"森见登美彦作品《春宵苦短，少女前进吧》","uri":"https://chuanbohua.github.io/post/2019-10-10-%E6%98%A5%E5%AE%B5%E8%8B%A6%E7%9F%AD/","year":"2019"},{"content":"Numerical Analysis, different from Data Analysis, is a subject of mathematics. The main purpose of this course is using numerical methods such as fitting methods, approaching methods and interpolation methods to approach the results of PDE, ODE, integrations, and solutions of linear equations.\nThese methods are widely used in many aspects, include physics, computer science, biology technology, etc. As long as people need to solve these equations or calculate some functions, they will need the methods in Numerical Analysis. So, it is no doubt that this subject is one of the most important subjects and it is also really hard to master (in my mind).\nAt that semester, this subject took up 6 credits and 100+ hours. During this time, we completed 5 or more experiments and a project with a presentation. This experience made me comprehend this subject better and during the final exam period, I completed these three notes.\nOne is the outline of Numerical Analysis, include the main methods and theories behind them in different chapters and their applications. This note can help me master the whole frame of this subject and get to learn how we gradually learned it.\nIt was not an easy time for me to summary this frame because there were really too many parts of methods and also hard to figure out the relationships between them. Fortunately, I finished it anyway. I always think remembering and mastering the frame of a subject is really important, not only for understanding the details better but remembering them better.\nThe second note is about the definitions in Numerical Analysis. Just like Topology, remembering and understanding basic definitions is crucial for further study. In Numerical Analysis, it is not “better to do”, but “have to do”. If you do not master these definitions, it will be really tough to understand the methods because you have to check each step and learn what this character means and why it can be concluded by other things.\nThere are many formulas and it seems not easy to remember them, but actually, there are many regular patterns of them and if you can master them, it will be easy to remember these formulas.\nAnd the final note is the most painstaking one. It includes the details of the different methods and some theories we should master. Of course, it is better to read the textbook seriously and then try to reference this note, because there are no explanations in detail in this note.\nSo, just “enjoy” this subject for its sophisticated methods and amazing theories.\n The overall structure of Numerical Analysis.pdf\n The definitions in Numerical Analysis.pdf\n The summary of methods in Numerical Analysis.pdf\n You can also find notes in detail from chapter 0 to chapter 7.\n","id":24,"section":"post","summary":"Numerical Analysis, different from Data Analysis, is a subject of mathematics. The main purpose of this course is using numerical methods such as fitting methods, approaching methods and interpolation methods to approach the results of PDE, ODE, integrations, and solutions of linear equations. These methods are widely used in many aspects, include physics, computer science, biology technology, etc. As long as people need to solve these equations or calculate some","tags":["Math"],"title":"数值分析笔记","uri":"https://chuanbohua.github.io/post/2019-10-02-%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","year":"2019"},{"content":"Actually, the course I took was Numerical solution of the partial differential equation, rather than Partial Differential Equations. It is quilt different between these two courses.\nNumerical solution of the partial differential equation is one of the core courses of department of mathematics. It is a really hard course because of the large amount of calculation and abstract methods which is not easy to understand.\nThere are always lots of steps in one method and each step needs calculating for a long time. And there are also many details should be remembered in every methods, include parameters, constant with special meaning, etc. Ah, also, you have to figure out exactly what types of PDE can use the methods.\nIt is the point for understanding that these methods about why they work and how they work. For example, the finite volume method in two-dimensional uses the knowledge and theories in mathematics analysis of Green formulas. If you can well understand these theories in mathematics analysis, you may comprehend the method quicker.\nAll right, this note is a functions and methods summary and the purpose of this note is to make me compare them and remember them easier. I marked the chapters of different methods and the exam formats about them. Hope these will be helpful for your revision.\n Numerical solution of the partial differential equation note.pdf\n ","id":25,"section":"post","summary":"Actually, the course I took was Numerical solution of the partial differential equation, rather than Partial Differential Equations. It is quilt different between these two courses. Numerical solution of the partial differential equation is one of the core courses of department of mathematics. It is a really hard course because of the large amount of calculation and abstract methods which is not easy to understand. There are always lots of","tags":["Math"],"title":"偏微分方程数值解法笔记","uri":"https://chuanbohua.github.io/post/2019-09-15-%E5%81%8F%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E7%AC%94%E8%AE%B0/","year":"2019"},{"content":"前言 大学四年级在很多人口中是“收获的一年”：在大学的前三年中努力学习、科研、竞赛和经历各种各样的事情，然后在大学第四年的时候用自己的经历来换取自己想要的。如果把这个过程当成是简单的交易，那么大概就是把自己曾经三年间的经历作为筹码，来换取实习工作、留学和研究生的 Offer。\n每个人都肯定想要在这场交易中得到更加有价值的交换物，所以在我们手中筹码不再容易增加的情况下，各种技巧、斗争都在这场交易开盘后漫散开来。\n这样的一个过程持续了我整个大学第四年，是一段相当辛苦的经历。在此中间，我经历了非常多的事情；体会到了一种自己未来的出路掌握在自己手中的感觉；体会到了真切地、发生在自己身上的变化；体会到了这才是大学应该有的样子；体会到了珍惜当下的感受。回过头看，才理解大学被叫做象牙塔的原因。\n充满分量的选择让我走到了现在的分支上。目前还不能判断自己的选择是对还是错，但是一路走来的感受很值得回忆和分享。\n所以，在这样的一些事情告一段落之后，我又重新写了三篇文章。\n关于“重写”这件事，我曾经在 2019.06 的时候完成过一篇文章，上面写的内容大致就是这里的前两篇：实习和交换生。但是我现在对这些事情的理解和当时有一定差距，所以希望在原文章的基础上进行一些的修改，以我现在的看法来回忆当时的事情。\n这三篇文章的书写风格都有为之后的同学提供一些指导的经验文章的感觉。我把这三篇文章作为一个大工程来准备，所以在内容量上或许会比普通的文章多一些：我将这里面我曾经了解过的各种信息、学到的各种经验、自己的想法都选择一些有趣或有用的写下来。这样可以帮我回想起当时的情况，其中的细节或许对读到它的其他同学有帮助。\n不过还是有很多要注意的事情：\n文章的时效性：现在的就业情况在快速的变化中，或许仅仅半年时间，各种曾经的信息都不再有用。我们经常会遇到这样的情况：在搜索引擎中搜索到的各种类型的经验分享，仅仅是一两年的时间，其差距就很大。在这其中有很多具有时效性的信息是不可以参考的。值得参考的是在这些分享中固有的东西、不随时间发生很大变化的经验。\n这篇文章是按照 2019 - 2020 年份的实习申请情况写的，写这篇文章的时间是 2020.03。所以我会在写 2019 春季我的经历的同时，与 2020 年我目之所及的一些情况做对比。超出这个时间区间的信息可能会失效。\n文章的针对性：我一直不是很愿意写一些公开的经验帖子，因为如果这个教程涉及的内容很多，由于个人能力不能覆盖方方面面，对于大量我没有或者无法考虑到的情况，将这些情况一一解决是件困难甚至是不可能的事情，所以我偏好于将文章受众局限于很小的范围，比如这篇文章就是写给同学校、同系的朋友们。可以保证我对他们的“售后”。\n那么这篇文章意义岂不是大减，对于路人来说就变成了废纸。实际上，就和最开始说的一样，这篇文章也当做是我的一篇回忆，如果不能作为经验参考，或许读一读、了解一下不同系的同学、不同学校的同学考虑的一些问题、面临的状况，或许是很有趣的。\n所以，如果这些文章能给你提供一些微小的经验，那么它就值得；如果能让你读的有趣，那么也算圆满。\n正文 我在 2019 年春季并没有申请太多企业的实习，只投了 Tencent 和 HUAWEI 两家，原因是当时的我同步在准备语言考试，这件事情我会放在留学申请这篇文章中来讲。不过虽然我只投了这两家公司，但还是了解了一些其他公司实习申请的情况。所以在这里也是有一些内容可说。\n实习的动机 申请实习最直接的动力就是丰富自己的经历。在自己的 CV 中写的各种项目经历容易缺少认证，也因此容易缺乏信服度。毕竟仅仅通过和面试官（企业）或者是录取委员（高校）会交流项目相关的信息来综合判断你的这段经历的含金量是一件不太容易的事情。因为在这个过程中可不是那么容易说服面试官，让他相信你的项目可以拯救人类的。\n如果是一张实习证明，那么这段实习在 CV 中的含金量将会被实习公司所担保，这会大大提升这段经历的可信度。所以一段比较好的实习经历，即使暂时不考虑你在实习期间所做的东西，也是在 CV 中有价值的内容。这会为我们进一步的发展提供很好的帮助。\n这些帮助取决于未来你发展的方向：\n如果你准备工作。那么你就是天选之人，实习是你最好的选择。互联网行业目前常见的状况是：实习生招聘的要求会同正式批招聘（秋招）相同，甚至更高。其原因在于实习生转正率比较高。只要被录取为实习生，在实习期间没有出现大的错误、表现尚可，都会被考虑转正。走实习生转正这条路线将会省下之后秋招的麻烦，或者是为之后的秋招提供保底，以便尝试更理想的企业和岗位。\n即使在实习后因为自己不满意等各种原因拒绝了转正，这段实习经历在之后的秋招中将会提供很大的帮助。这件事情很正常，因为有一些企业的实习生会面临转正的薪资没有秋招薪资高的情况，这种情况下是否转正就需要考虑一下。与此同时，在实习生的申请、工作过程中的成长，也会帮助你在秋招中取得好的 Offer。\n总之，如果你打算毕业之后工作，那么实习就是你本来就该做的事情。放眼望去，全是好处。\n如果你准备申请出国。那么你需要权衡一下你这个暑假的时间需要花在哪。因为大四之前的暑假是各大高校 Summer School 的时间。如果是为了申请具体的学校，那么这个学校的 Summer School 的重要性远超实习。相当一部分申请者可以在 Summer School 中确认候选或者是直接拿到 Offer。其缺点就是 Summer School 往往只能选择一个或少数（经常在时间上出车祸）学校，如果没能成功申请这个学校的话，这段 Summer School 的经历对申请其他学校的帮助有限。\n但是抛开与 Summer School 的冲突，实习在留学申请中是很有价值的经历，大厂的实习更甚。在研究型 Master 的申请中（Ph.D. 当然更看重单纯的 Research 经历，这点会在留学申请部分讲），实习期间的 Projects 可以为你和老板之间提供很多的谈论焦点，也可以通过这个项目展现你的能力。Course-taking 型的 Master 申请中价值就会更加明显。总之，一段大厂实习会为你留学申请增加不错的筹码。\n所以，在留学申请上，如果你有机会参加 Dream School 的 Summer School，那么在这个选择上不需要纠结。如果错过了 Summer School，那么实习将会是很好的提升经历的机会。\n如果你准备保研。那么这个暑假是各大高校夏令营的时间，想挤出时间来实习是不太容易的事情。但是也算是可以做得到，这个取决于你对夏令营时间的安排，需要将实习时间缩短或者延后，操作空间不是很大，多数短期实习公司不太愿意提供这样的机会。（何况都保研了这个实习的价值也不是很明显）\n如果你准备考研。那么我觉得，除非你对自己的复习很有自信，暑假请好好复习。我对考研了解的确实不多，但从身边同学的复习计划中了解到暑假应该是研究生考试准备的黄金时期。如果决定要考研，那么即使暑假用来实习，它对你带来的收益也不是很明显。你或许可以收获一个用来保底考研失败的工作 Offer，或者可以在复试中增加自己竞争力。但是这些收益的成本相当高，请考虑好之后谨慎选择。若是为了保底，\n除此之外还有多方准备的同学。对于多方准备，自然是量力而行。有的或许可以同时准备，但有些确实是不太可能同时进行，这些需要根据自身情况和发展规划考虑，“百发百中”和“追二兔者不得一兔”或许就在选择间。\n我唯一了解到的多方准备就是在准备研究生考试的过程中参加秋季招聘会，以获得一个保底考研失败的 Offer。这个方法受到辅导员推荐，可见有一定的道理。不过这已经不在讨论范围内了，在此不作评论。\n除去丰富经历的动机，实习也有一些其他方面的好处。比如实习的工资和体验职场生活，从而丰富钱包和阅历。或者只是暑假在家太无聊想找点事情干。这些都是后考虑的事情了。\n在仔细分析自己未来的规划之后，就可以决定是否申请实习了。要注意：以上部分对各个方向都成立，比如金融、CS、教育等。但是之后的内容，因为涉及到具体的分析细节，我只能从我比较了解的行业进行说明。\n所以之后的内容大多是针对互联网行业的，其未来的发展路线也集中在广义的 CS 技术上。或许有一些同学对其他行业的实习申请情况感兴趣，之后我会尝试联系其他方向的同学，获取一些经验，然后补充在这里。\n互联网公司现状 国内互联网公司主流上有 BAT（互联网三大巨头）和 TMD（互联网三大创业公司）俗称的两档，其中 BAT 就是 Baidu, Alibaba Group, Tencent 这三个企业。TMD 就是 今日头条、美团、滴滴。但是实际上值得考虑的企业远不止这些。\nBaidu 近些年遇到各种各样的决策失误，目前企业发展前景属于比较不明朗的状态，所以近两天大家讨论互联网三大巨头都变成了新 BAT: Byte Dance, Alibaba Group, Tencent。字节跳动在近几年的发展比较的好，给钱很多。给钱什么都干。\n除此之外还有：拼多多、京东、网易、华为、深信服等其他互联网公司。本地企业也有浪潮可以考虑。其实在这里面，华为并不被称作是互联网公司，因为华为的重心确实不在这边。但是其中面向 CS 的岗位确实有不少，与硬件接触比较多。\n对各大公司的印象当然不能保持一直不变，不过过去的一些轶闻或者是评价都有一定的参考价值：\n 京东因为曾经的裁员退 Offer 事件，在我系的风评一直不是很好，因为这件事情曾经影响到我系好几位学长学姐； Baidu 虽然近两年发展不太好，但是在此之前 Baidu 的员工福利是挺为人称道的； 阿里旗下的蚂蚁金服可以说是个人印象里最优的去向了，门槛也确实有点高； 网易通常被大家当作跳板公司，因为我系很多学长学姐都是通过这个公司跳到更好的岗位上去的； 字节现在的难度不小，当然，其待遇也很好；同样，拼多多也很舍得给钱； 腾讯、阿里都是大厂，其下的分支相当的多，不同事业部的情况差距非常的大，待遇和发展也会有很大的差异。这条也适用于包括华为在内的其他厂； 深信服被称作是小华为，待遇尚可，在我校招收人数也不少，但是需要分清是技术岗位还是其他种类的岗位；  最好的了解企业情况的方法就是直接找在职的学长学姐，我们系往上述公司走的学长学姐不在少数，他们会带给你最直接、也是最当前的企业情况。\n而我因为在华为，所以下面的很多内容都会以华为的情况为基准进行描述，对于其他的一些公司我也不能了解的非常全面，但是互联网企业的很多方面大同小异，除此之外的关键信息还是需要亲自去了解。\n2020 年由于疫情的缘故，各个大厂也受到一定的影响，一些厂会减少实习生的招收，这点也放在申请选择的考虑范围内。\n互联网企业的选择 在了解了一些互联网公司的现状之后，可以根据自己的职业规划和个人条件进行企业的挑选。在职业发展上我这里没有太多有价值的经验，这点可能最好还是已和入职的前辈讨论。不过根据自己经历的情况，按难度选择企业这里姑且是有一点可说的。\n互联网的企业普遍不看重成绩，大多数情况下只要你成绩是一个看得过的数字（这个“看得过”取决于个人看法，或许 75+ 都还算看得过去，80+ 已经不错了；也有的认为 8 开头的才算看得过去），那么在简历筛选和面试中都不算是劣势。这里的劣势指的是在面试或者筛选中不会被针对性的询问一些问题。\n更好的成绩固然在简历筛选中有帮助，但是效果没有那么的明显。甚至，如果你有一个非常惊艳的成绩，企业方在关注你的同时，自然可能会质疑你申请实习的动机，毕竟他们会认为你大概率是不会留在该企业的，只是来体验一下实习而已，这种情况下部分企业会谨慎给予 Offer。\n纠正：企业肯定想要更好的人才，所以你越优秀自然他们越想要招收你，只要你不在面试过程中表示出“我只是来体验体验，并没有打算进你们公司”，企业大多都会很开心地招到一个优秀人才。毕竟不少企业有自信通过很好的待遇留下这些同学。\nBAT 等 Top 大厂普遍具有更高的要求、更多的面试轮数、更难的笔试。所以在做这些厂的准备时，需要复习一定的计算机基础知识，包括几门计算机的核心课程。有一种说法：如果你是冲着拿到 Top 大厂的 Offer 来的，那么在准备基础知识的时候可以直接按照跨考计算机专业的考研来准备。\n这个程度就太重了。不过确实各大厂的基础能力面试知识点和计算机考研有相当多的重合。至于准备的程度就没必要真的按照考研的深度来了，企业面试和考研侧重还是有差距，精力和时间也不至于准备到考研的程度。\n所以真正对实习申请有比较大影响的是传说中的项目经历，关于填充项目经历我会在后面的部分讲一讲。这里想说的是你可以根据自己经历的丰富程度来评估自己申请不同企业的难度。\n总之，专业能力（算法、代码）+ 基础知识 + 项目经历 是你在实习申请中的筹码。根据我对周边同学的采访和个人评估，我系同学在申请各大厂时候面临的平均难度为：\n 第一档：Byte Dance, Tencent, Alibaba Group; 第二档：网易（互娱），百度 第三档：网易（有道），拼多多 第四档：华为，京东 第五档：深信服，浪潮 我不太了解的：美团，滴滴  这里的排名只是我个人根据一些了解到的信息主观上给出的，准确度我自己也不能确定。而且根据公司内部岗位不同，难度会发生很大的变化。这里的排名只不过是一个大致的参考。、\n另外这里也只是我自己了解到的一些公司，还有很多我没了解到的并不代表没有价值或者说很简单，真正要自己申请的时候还是要多方了解。\n实习职位的选择 在职位选择上确实是千人千面，每个人擅长和喜欢的东西都不一样，所以在职位的选择上考虑的内容都不尽相同。不过在职位的选择上除了个人爱好、经历和职业发展这些较为主观的的考虑外，职位的客观情况也要参考。\n比如，作为一个本科生，想要申请 Top 厂的算法岗显然难度会陡增，而不同的年份不同岗位的需求变化会很大，可能某一年一个岗位只招收了很少的实习生，但是第二年因为各种原因招收大量实习生，在这种情况下，申请会相对的容易很多。\n同样，不同公司提供的职位侧重点有一定的差异，比如华为很多岗位都是硬件相关，而很多纯互联网公司就几乎全部集中在软件相关。这种情况下如果你的各种经历都集中在软件方面而且对硬件不感兴趣的时候，华为就不是一个很好的选择。这样的差异也存在于不同公司喜欢的编程语言、软件构架、开发平台、工具的不同。这些都是在选择职位的时候需要考虑的。\n在挑选职位的时候，多多参阅指定岗位对候选者的要求。如果可以联系到公司 HR，也可以直接询问相关岗位的工作情况。\n除此之外，实习岗位的选择也有另外一个非常重要的参考因素是工作地点。不同岗位的工作城市往往有异，如果你喜欢的岗位和喜欢的工作城市发生了冲突，那么就需要权衡一下。\n值得一提的是，有些公司在实习生转正的时候可以变更工作岗位和工作地点，这点请以公司政策为准。这样的政策会为你提供更多的机会。最差的情况，如果最终公所的岗位和城市与你所期望的有比较大的差距，或许我们可以寄希望于公司内转岗或者跳槽。但是这种方法的成本非常的高，一般情况下尽量不要考虑。\n实习申请的时间线 各大厂开放实习申请的时间是每年的 三月中旬到下旬，将会一直持续到四月中旬到下旬的一个月时间。机试和面试可能会延续到更晚的时间，取决于对应企业的筛选策略分配。\n所以说申请实习的时间线大致为：\n 3 月 - 4 月：确定公司、岗位，网上投递 CV； 4 月：CV 网上筛选，获取机试 / 面试资格；面试，大部分企业都会在四月份中间进行多次面试，从而确定人选； 5 月：面试；发布 Offer；一般企业都会在 5 月上旬之前发布 Offer；  之后的部分将会针对每个过程中的内容进行一些介绍。\n网投 CV 每个互联网公司都会有自己的招聘网站，这些网站大多都会有校招部分，校招部分会有实习生招聘板块。找到实习生招聘部分之后，就可以查看是否开放了网申，一般公司在开始实习生招聘的同时就会开放网申，所以在这些网站可以第一时间了解到网申的开放。\n在进行企业、岗位的选择之后就要准备投递 CV 了。目前大多数互联网网站都要求在网上创建自己的账户并在网上完善自己的 CV。\n网投的 CV 所需要填写的内容无非是：基本信息、教育经历、获奖情况、项目经历这写内容。看起来内容不是很多，但是如果在此之前你并没有做一份 CV，那么实际上会花不少时间在内容的斟酌上。所以说这件事情趁早做。\n在填写这些内容的时候倒是有不少注意事项和技巧：\n 基本信息中邮箱问题被很多人强调，但是实际上网申中的各种信息都是通过短信通知的，邮箱的用处并不大。不过如果有比较正式的邮箱还是尽可能用这些邮箱； 教育经历中或许会让填写 GPA，对于我们学校来说 GPA 和综合学分绩不太一样，你可以参考哪个比较有优势，然后填写相应的分数。不同于留学申请，一般不需要附上 GPA 的算法； 对于实践经历和项目经历的描述，可以参考网上非常多的 CV 撰写经验，在这一点上知乎似乎有一些些用处，参考一些范例和反例。仔细分析这两部分，因为这个在实习生申请中占比比较重； 一般在填写 CV 的结尾处可以上传自制的 CV，我个人是推荐自己制作一份自己的 CV 然后上传。在自定义的情况下容易凸显出自己的优势。并且如果有一些内容无法在网上填写，那么自制 CV 就可以把这些内容展现出来；  如果意愿的公司并不提供在网上完成 CV ，而是自制 CV 通过邮件发送或者是现场投递，那么就更加有必要制作自己的 CV，关于这一点要讨论的内容太多，最简单的方法就是找与你情况尽可能接近的学长学姐，要他们的简历，然后参考着进行。（当然一届更比一届强，要 CV 的时候多照顾一下学长学姐的心）\n良好的 CV 是成功的开始。\n机试 并不是所有的互联网公司都会要求机试，毕竟机试体现候选者的能力有限，也偶尔会出现代答等一些不良操作。所以机试不经常有，而且即使是有，其在申请重权重比例也有限。\n但是如果确实有机试，那么还是需要好好准备。虽然一个高分的机试可能给你加的分不是特别多，但是一个差劲的机试成绩会很影响之后的申请。\n各大公司的机试情况不同，有的公司会选择用基础题来做机试题目，大概率是选择（少有填空），毕竟要方便批改；而更多的公司会选择用算法题来做机试题目，HUAWEI 的机试就非常典型：\n华为机试为 120 分钟三道算法题，其中第一题 100 分，考察内容是数据输入输出、字符串处理，基本的流程控制等等；第二题是 200 分，考察简单的数据结构应用，如队列、栈、链表等等；第三题是 300 分，考察树图等较为复杂的数据结构应用，涉及一些运筹学内容。\n其评分方式为每道题有一定量的测试例（我们无法知道），按通过比例给分，如果前面的测试例无法通过那么后面的也不会再计分。\n华为没有说具体的机试过关分数，也有人说是 100 分，但是没有得到任何证实。根据我在面试时和面试官交流和一些其他同学的反馈，机试一般拿到 300 分以上会比较有竞争力，250 分以下被称作“不太理想的分数”。\n不过这也和当批次的算法题选择有关，具体情况也要在具体年份分析。\n对于机试的准备，不是捷径的捷径就是刷题。就像华为的机试题一样，每道题的知识点都很固定和规律，能出的题目着实不多，而且据往年学长学姐反馈华为机试有题库。所以我们只要在机试前多刷一些对应企业历年的题目，即使真正机试的时候没有碰到原题，也对知识点掌握得差不多了。\n除了这些以外，一些算法题网站也是很好的练习地方，比如 LeetCode 等等。\n面试 简历筛选通过、机试通过，之后就要进到面试的阶段。关于面试能说的东西很多，比如什么仪表仪态、礼貌用语、规范动作之类的，这些不直接相关面试结果的我这里就不提了，网上能搜索到很多面试经验，这些面试经验在这方面是互通的。\n面试常见于网络面试和线下面试，大厂还是比较青睐于线下面试，如阿里腾讯或许会邀请你到一些城市去面试。但是很多情况下线下面试面临很多的困难，所以也会有不少公司选择线上面试。两者各有优劣，取决于个人，面试形式在此不再讨论。\n面试的重点有几种：基础知识问答、专业技能考察、项目背景了解等等，这些重点都相互交叉，着重点在于你的项目经历和专业能力。\n可以想象，如果你有一串比较另面试官喜欢的项目经历，那么他自然会被吸引，针对这些项目向你询问你在其中发挥的作用，所学到的东西，中间穿插一些相关的技术性问题，以此来判断你的专业能力。这种方法对面试官是非常高效的，对面试者也是很有优势的，毕竟只要这些项目是你曾经做过的，你自然了解很多其中的内容，可以讲给面试官听。\n而与此同时，如果一位候选者具有不那么吸引人的项目经历，面试官不被其吸引。那么面试官为了确认你的专业能力，会直接向你提问一些技术上的问题。自然容易想象面试官提出的问题经常容易很犀利，而其考察范围的不确定性也会给面试者增加难度。这种情况就似乎是面试者没有掌握面试的“主导权”。\n在华为的面试中有两种情况：1. 面试官全程询问一位同学项目中涉及的问题，没有把专业性问题作为提问，而同学也自然容易回答；2. 面试官全程提问技术性问题，或许这些问题很基础，但是对于一位复习时间相当短的候选者，广泛的问题考察会让候选者在一些比较基本的问题上踩雷。\n这些情况总结一下就是你的项目经历可以决定你是否在面试中具有主导权，把面试导向对自己有优势的情况。\n当然这里并不是说如果面试官问专业性问题就没希望的意思，专业性问题大多情况不会很难。如果问题很难，那可能是面试官在尽可能地试探你的知识深度，到这种情况时，说明你的专业基础能力肯定是已经被认可的。非常好的回答基础问题的提问当然也可以证明你专业知识的能力。但是与面试官聊你曾经做过的各种东西会比像考试一样一问一答轻松一些。\n针对这些情况，面试的准备就是将自己的项目经历仔细梳理一遍，记住其中的一些重点，总结自己所做的工作、遇到的困难、解决方案，在此基础上尽可能地了解相关知识，以面对更多的询问。\n在此之外复习各类基础知识非常重要，很多经典的面试问题在网上也比较容易找得到，如果时间精力较为充足，那么复习相应科目的教材时非常稳妥的方法。\n同时，面经也是非常有效的。可以去各大论坛上寻找近些年甚至是当年的面试经验，了解其中的问题、侧重点、规律（如果有的话）。多看看经验是很好的应对面试的方法。\n实习之前的一些事务 恭喜，如果通过了所有面试，那么将收到这个公司的 Offer，在开始实习生活之前，有一些事情需要处理。\n此 Offer 属于单向 Offer，可以在规定的日期之前选择接受或者拒绝，这种情况见于你同时拿到了多个公司的 Offer。不同公司最后为你提供 Offer 的岗位和工作地点或许和你最初偏好的不尽相同，所以在这种时候需要你进行权衡之后选择对自己最优的 Offer。\n决定接受 Offer 之后就可以签署合约，之后如果发生违约，一般都需要赔付违约金。一条未被认证的说法为违约金不会超过入职之后一个月的薪资。关于违约这件事情在之前的实习动机里面有所提到（并没有），根据个人发展路线可以参考。\n大三实习生所签署的条约一般比较简单，没有大四秋招正式入职时需要提交的包括三方协议、学校推荐等一系列东西。不过转正之后还是要交的。\n除此之外，需要关注一下公司是否为实习生提供赴实习入职的路费补贴，根据补贴情况选择合适的交通方式并保留相应的票据。\n关注实习公司是否提供员工宿舍，若不提供员工宿舍那么还需要自行租房。这点属于比较麻烦的事情，因为实习期往往只在暑假期间，租房类型只能属于短租房，而大部分房东并不喜欢租出短租，可供选择的房源比较有限。\n我个人当时选择寄住在当地的亲戚家中，对相关事务不甚了解。最好咨询往届学长学姐或当地熟识的朋友或亲人，询问租房事情。如果时间充足，可以提前到达实习城市几天，解决住房问题。\n实习生活 刚入职实习可能会有各种实习生会议、协议签署、保密协议学习等等，然后分发工位和设备、确定师傅等等。一般都会有一定量的培训，之后的工作内容也是取决于岗位和项目组具体情况。然后开始愉快的实习生活。\n实习的目标不同会带来不同的实习体验：如果目标是转正，那么实习期间就要在按部就班的基础上多体现出个人能力。\n实习时间普遍在两个月以内，除去培训和适应还有最后的答辩准备时期，剩下的时间往往只有一个月左右，时间非常的宝贵。所以在实习项目的选择上根据自己的能力尽可能做一些容易产出成果的项目，以便在最终的考核和答辩中获得更高的评价。\n同时也要在其他一些与考核挂钩的方面上努力，如与其他实习生的社交情况（毕竟你不能是太孤僻的一个人，也更不能闹矛盾）、与组内成员的交流情况、一些固有任务的完成质量（打卡规律，自然不能缺勤，日志写得好，会议表现）等等。\n与此同时，要多与师傅沟通交流，展现自己学习和输出的成果。因为最终转正的时候，你的师傅是具有非常高的话语权和近乎一票否定权的。这样的实习生活或许会是累和辛苦的，也自然很有收获。\n如果实习目标是为了获得这份经历，而转正与否并没有很大的关系，那么这段实习的压力就会小很多，可以更加的专注于提升自己和体验职场（或许说的大了一点，互联网公司的职场氛围还是不怎么浓厚的，毕竟技术是硬通货）。尽可能多的向周围工友了解各种信息：他们的感受、职业发展、业界情况的理解等等，甚至是人生经验（小伙子……）。毕竟即使暂时不打算工作，迟早也是会投入职场的，趁早多了解对未来的职业规划有一定的帮助。或许这段经历能加强你不想工作的决心。\n当然，项目还是要好好做的，毕竟留学申请/国内研究生申请的时候这些项目是可以帮得上忙的。自然要选择和自己未来发展相关性比较高的项目，以研究的态度去尝试做出一些东西来。这种情况下刚过去的时候就给自己的师傅说清楚，他们自然会理解并且帮助你。\n有空的时间多出去走一走，比如周末，公司普遍不要求甚至是不允许实习生加班。对于很多人这或许这是第一次自己在另一个城市独立呆较长的时间，多多观察一下自己的生活态度和心理变化，这是一个观察自己的好机会。\n同时多转转这个城市和周边的城市，是很珍贵的好好旅游的机会。\n实习后的一些事情 首先，工资来了。在考虑给自己添加什么大件之前，或许拿自己的第一桶金给家人买点东西是个非常好的选择。\n值得注意的是实习期间的工资自然是会被税的，但是年收入 6w 以内这些税是可以退回的，在下一年的年初多关注一下个人所得税的退税情况，毕竟数额普遍不算小。\n如果将这段实习作为未来申请的经历，那么在离职之前切记去人事部开局几份中英文的实习证明原件，这件事情错过了就会麻烦很多。\n如果有意转正，那么在 9、10 月份的时候，转正信息会发来，接受 Offer 的话就可以直接签约，第二年的夏季直接入职。实际上在答辩完成之后不久，大概率你就可以从师傅那里得到自己的答辩结果。之后的半年就可以放飞自我了。\n结尾 这篇文章大概 1w 字左右，虽然不长，但是写了好久。原因是曾经写的一份文章遗失了，我还要重新写一遍。另外是时间确实很久了，当时的感受已经忘得差不多了，组织起语言来比较困难。\n实习期间的事情确实太多了，对于一个一学期如一日的学生，那两个月发生的事情几乎赶上了过去两年在学校经历的事情。自然很难也没太大必要描述到方方面面，所以挑挑拣拣选择了我觉得有趣的一部分写上去。\n道理都是很常见的道理，后面部分写出来像流水账，读起来像日记，如果能看的开心就最好了。\n奇怪的知识 象牙塔在宗教里面是形容新娘美丽的颈项的。\n","id":26,"section":"post","summary":"前言 大学四年级在很多人口中是“收获的一年”：在大学的前三年中努力学习、科研、竞赛和经历各种各样的事情，然后在大学第四年的时候用自己的经历来换","tags":["Life"],"title":"大学第四年的实习","uri":"https://chuanbohua.github.io/post/2019-09-07-%E5%AE%9E%E4%B9%A0/","year":"2019"},{"content":"Equations of Mathematical Physics is another subject about using mathematical methods to solve or approach various functions include PDE or ODE, just like the Numerical Analysis.\nActually, most of the methods in this subject are included in Numerical Analysis. But this subject focuses on the applications of these methods rather the theories.\nThe textbook lists several examples in physics fields and tries to use these methods to deal with these problems or solve these equations, such as the wave equations, heat equations, and Poisson equations in different dimensions (mainly 1, 2 and 3).\nDuring this time, we would like to discuss the influences brought by various boundary conditions, such as the Dirichlet boundary condition, the Neumann boundary condition, and the Robin boundary condition.\nIn conclusion, we would like to discuss three types of equation in three types of boundary condition and learn some basic process methods about equations.\nThis note is mainly about the steps in detail of some core methods in Equations of Mathematical Physics. It would be useful if you want to master how to use these methods.\nOf course, you would better understand the theories behind these methods firstly and then remember them.\n Mathematical Physics Equation Note.pdf\n ","id":27,"section":"post","summary":"Equations of Mathematical Physics is another subject about using mathematical methods to solve or approach various functions include PDE or ODE, just like the Numerical Analysis. Actually, most of the methods in this subject are included in Numerical Analysis. But this subject focuses on the applications of these methods rather the theories. The textbook lists several examples in physics fields and tries to use these methods to deal with these","tags":["Math"],"title":"数学物理方程笔记","uri":"https://chuanbohua.github.io/post/2019-09-02-%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%96%B9%E7%A8%8B%E7%AC%94%E8%AE%B0/","year":"2019"},{"content":"森见的《神圣懒汉的冒险》发布于 2013 年，是他作品中较晚的一部。有趣的是，在这一部作品中有非常多的曾经的作品的元素，或者称之为彩蛋在其中。森见也在作品后记中提到了这一点。\n回想起来， 2013 年距离森见的处女作太阳之塔（2003）发布已经 10 年了。或许森见在这部作品中添加这些元素是为了纪念一下曾经的作品。\n这部作品可以说是森见作品中无厘头程度最高的。但是其叙述方式依然贯彻着森见流畅紧凑的原则，整个故事从头到尾仿佛发生在一个周末（但是事实上好像确实是发生在一个周末）。同样，作品处处也展现出森见式的有趣。\n作品背景虽然是有大学研究院的元素，但是整体与校园并没有太大的关系，这点不同于《四叠半》和《春宵苦短》。\n整个故事围绕着被来回折腾的懒汉：小和田君。在一个周末的两天内被卷入各种各样事件，遇到各种各样的人，其故事前后有伏笔，多条叙事线串行，整体一气呵成。依然佩服森见整理故事脉络的能力。\n其主题依然是从废柴大学生出发，强调生活中的“小冒险”与参与精神，同时也认可“人，生而懒惰”的本性。总之，读完之后会让人有一种生活的参与感，对对待身边各种小事情的态度有所启发。\n  笔者我进行大冒险的地方、仅限于电影院的座位之中。放映伊始，主人公陷入危机情况，使得观众手捏一把汗，随后谜之每年登场，说出谜语一般的台词，主人公转动敏锐的头脑摆脱危机。在观众松出一口气的瞬间，突然发生爆炸：汽车从桥上翻落、寻宝地图被夺去、美女也被夺去。随后再将美女抢回来\u0026hellip;\u0026hellip;\n这一系列事件的最后，以美女和主人公接吻作为休止符。有了这类千篇一律的作品——也就是所谓的冒险动作戏——就够了。大冒险只要交给银幕便好。\n有这么一句话：“嗤笑小冒险的人会被小冒险弄哭。”\n 生活中并没有想象中的大冒险，因为不是所有人都能像电影中一样从大冒险中存活下来，所以说大冒险交给银幕是个不错的决定。\n生活中尽是各种小冒险，小到赶一次 DDL、准备一次 Date、跑到一个陌生城市旅游……，这些冒险依然充满乐趣。就像感人的故事不一定需要生离死别，充满激情的生活也不一定要大起大落。关注身边的各种小冒险，每个人的生活都可以跌宕起伏但圆满收尾。\n “呐，你听过‘滚石不生苔’这句话吗？”\n“听过。”\n“嗯，就是这么回事。能明白吧？”\n“多生些苔，手感就变柔软了。”\n“喂喂，你又不是地藏石像。”恩田前辈叹了口气，“对吧？对我们来说，冒险是必须的。不能稀里糊涂地任凭时光流走。人生可不是光靠一个劲儿认真工作就能得到回报的。”\n“没那回事，认真是最重要的。”\n小和田君嘟囔道：“恩田前辈说的这些，都是从所长那里现学现卖的理论吧。”\n“就算是现学现卖，可是要知道，所长起码人生阅历要比我们丰富。”\n“阅历和真理有什么关系吗？”\n“不可理喻！”\n 两个亮点：1. 人生可不是光靠一个劲儿认真工作就能得到回报的；2. 阅历和真理有什么关系。\n恩田前辈这里似乎是诡辩，不过不管是不是回报的问题，生活中有很多经历、有很多乐趣是不做一些小冒险体验不到的。每天宅在一处安逸稳定倒是容易凭时光流走。\n至于阅历和真理。“我吃的盐比你走过的桥还多。”这种感觉？（大概就是 D-K Effect）\n “糟糕的休息，会加深疲劳。”\n所长和在报告会上发言时一样，用食指贴住了高翘的鼻尖。如此一来，所长个人的感觉，就像是正在嘲笑愚昧人类的未来机器人。\n“很多人都觉得，只要稀里糊涂的解决掉工作就可以休息了。可实际上我们需要的，并不是停下来休息，而是保持一种正确的节奏，不断向前。就像金枪鱼一样，只要不断游动，就一定可以冲破疲劳，到达新的境界。这就是秘诀。所以我才不会疲劳。”\n“真辛苦。”\n 把工作变成生活的一部分。似乎是大家的福报。\n当我对比在家和在学校的睡眠时间时深有感触。在学校三年的习惯养成下，我已经可以做到每天睡觉 7h 而保证全天没有瞌睡。但是在家就懒到每天 8 - 9h 的睡眠还会疲乏。\n在学校，每天的学习以正确的节奏充斥生活，不断向前，所以不会疲劳。在家有各种有趣的事情等着我去做，然后一些重要的事情被赶到了 DDL，满心抗拒但是不得不做，这样的循环搞得身心具乏。\n “你对待工作很热心，在学习上也是，这一点我认同。可是在私生活方面呢？是不是有必要以充实自己的私生活为出发点、好好重新审视一下自己的人生？”\n“我可不想听所长说这些难懂的话。”\n“所长我的话之于你，就如同茄子花之于茄子，绝对是不可或缺的，一字千金。如果不趁着年轻多玩一玩，老了之后说不定会做出什么变态的举动。男人只有在年轻时尽情释放精力，才有可能成为像我这么优秀的大叔。”\n“所长您很优秀这点上我倒没有什么异议\u0026hellip;\u0026hellip;”\n 希望老了之后不要成为变态。\n “为什么仅仅是去了南方的岛屿就能长出肌肉呢？”玉川小姐问道。\n“小和田啊，您想得太天真了。”\n“是啊，小和田君。光是这样是不会长出肌肉的。”\n“各位，听我说，破坏他人幻想的人，会被马一脚踢死。”\n 破坏他人幻想的人，会被怎么着？(问答)\n 十年前，因为年轻气盛而犯下错误，不得已出走京都的津田先生决定，“既然如此就浪迹天涯吧”。于是便开始不停地辗转，不给苔藓留出一丝生长的机会。就这样，他游历于日本各地。\n “滚石不生苔藓”。行动力强的家伙没有停下来的时候，总有无尽的精力去做各种各样的事情，读书学习或者是游历四方。这些都是令人羡慕的生活状态。\n “小和田君，是个石头人。”桃木小姐说，“他给人的感觉，就像是奈良等地的巨石，或是普通路边的地藏石像一样。在他身上，时间有着不同寻常的流逝方式。”\n 我，我在家也觉得在我身上时间流逝的非常快。\n多年如一日不为时间所动的人也非常令人佩服。\n “都给我老实点！”\n嘭嘭假面点燃了从斗篷之下取出的“臭极了佛香”。据笔者我所知，这种佛香，是嘭嘭假面在中京区某处秘密基地中，眼含泪水研制而成的防身武器。它所发出的恶臭，甚至可以让人看到自己人生的走马灯——要知道这种走马灯通常只有在死前才会出现。\n 我第一次了解到因为臭味而亮起的人生走马灯还是因为去年的冬枣配香蕉的事情。不得不说森见里面的无厘头遍布各个细节，有谁想到把佛香改造成极臭还作为武器使用。\n 自此，他们产生了一种思想：“幸福是一种有限资源。”\n根据他们的论点，社会全员所拥有的幸福总值基本上是不变的。也就是说，这是一场抢夺有限资源的站战争。A 的不幸会使得 B 获得幸福，反之亦然。他们由此得出了结论，自己迟迟不能迎来幸福的学生生活，肯定是因为某些人正在享受着过分的幸福，这就叫做“幸福垄断状态”。为了让自己获得幸福，务必使某些人陷入不幸。\n基于这个原理，大日本沉淀党的党员们循环往复地做起恶作剧，企图借此创造出些微的不幸。将别人的自行车乱绳困到电线杆上，往公寓的信箱中丢入昆虫，两侧夹击在鸭川边谈情说爱的男女。他们深信这么做，就能够提升自己活得幸福的概率。\n 说来也巧，我也有过这种想法，但是我的想法不同于，我认为的幸福总量是对于一个人来说的。也就是说，如果一个人在前一阵子遇到了一些不顺心的事情，那么为了保证幸福总量不变，这个人在之后的一段时间内有很大概率会遇到好事情。\n总感觉这个观点是可以被统计学以科普的方式解释的，不过要纠缠其中的道理就到哲学领域了。姑且先用这个原理来安慰自己。那么我也来成立大中华沉淀党，专注于将自己表现得很不幸，来提升自己之后获得幸福的概率。\n “我为什么会迷路迷得那么严重呢？”\n“是宵山的原因吧。宵山时期总会发生一些不可思议的事情。”\n 这是《宵山万花镜》的彩蛋。宵山期间确实会有好多不可思议的事情发生，但请还保持淡定，见到宵山大人记得打招呼。\n明年的七月份我一定要去京都看宵山。\n “比在欺骗自己。因为你害怕。你其实很想奔赴未知的世界，想冒险，想讴歌人生。你一定是这么想的。绝对是这样。我懂的。”\n“不对，完全不对。”\n“所谓人类，是不会了解自己真正追求的是什么的。真实的你正想要踏出新的一步，所以你现在才会感到纠结。”\n 为什么有种传销的感觉。\n懒汉就是懒汉，我就是不想奔赴未知的世界、不想冒险、不想讴歌人生。不过如果但凡有一点念头，或许会被卡在踏出的第一步，纠结自己真正追求的什么不如先四处试一试，找个试错成本低的时间段，了解自己。\n 暑假，总是长得让人不相信有终点。所谓暑假，就是每天都在避暑休假。那时总感觉，一个月的时间简直长的荒谬，不可思议。在如今的自己看来，一个月就像是四份套餐，只要重复经过四次周末便结束了。至于套餐中的工作日，则只要一边挂念着周末一边工作就好。如此一来一个月也不过是转瞬之间。而这样循环往复十二次，一年就结束了。就在这样的年复一年之间，自己的二十岁也结束了。随后是三十岁、四十岁\u0026hellip;\u0026hellip;当然，前提是能活到那时候。\n 小的时候的寒暑假确实让人有种长的没有终点的感觉，和小学同学开学再见面有种多年未见的陌生感。总感觉假期里可以做无穷无尽的事情，拥有漫无止境的八月。\n已经过去的时间总显得很快，明年夏季就要毕业了，这么一看大学四年也不过是转瞬之间，没有循环往复。\n 这时，一群身着红色浴衣的女孩从小和田君眼前飘过。明明附近一片繁华，可唯独在她们周围，有种万籁俱寂的感觉。走在队尾的那位女孩向小和田君的方向看了一眼。总觉得她的面孔在哪里见过。\n 是《宵山万花镜》中的宵山大人。“万籁俱寂”这个描写实在是很传神，写出了我心中宵山大人应有的感觉。\n 两人在下鸭幽水庄解救完嘭嘭假面之后，先是去了恩田前辈大学时的研究所，与一位被称作淀川教授的人畅谈了一番；\u0026hellip;\u0026hellip;\n  伴随着飞舞的火花，警示灯开始闪烁，照亮了贴在机器下部的一个黑色铭牌。铭牌上刻着“夷川工厂”。\n 这里是《有顶天家族》的彩蛋，淀川教授和夷川工厂都是该作品中的元素。突然很好奇在这场故事里有多少参与其中狸猫。\n 所谓“星期六俱乐部”，由七个人组成。成立的目的，就是在每月中选出一个星期六的晚上，聚在一起吃野猪肉火锅。\n 所以说星期六俱乐部才是正统俱乐部，星期五俱乐部是歪门邪道创建的！（并不，实际上还有星期一俱乐部、星期二俱乐部……）原作这一部分描写的很有趣。\n 由于此事事关重大，所以我再重复一遍。我们需要的是一颗包容之心。擦亮眼睛吧。如今，一条维系着全人类的伟大纽带，正展现在我们眼前：无论是谁，困了的时候都会睡觉。\n 懒汉无罪，在今后的生活中，可以懒的时候还是继续懒下去吧。\n","id":28,"section":"post","summary":"森见的《神圣懒汉的冒险》发布于 2013 年，是他作品中较晚的一部。有趣的是，在这一部作品中有非常多的曾经的作品的元素，或者称之为彩蛋在其中。森见也在","tags":["Novel"],"title":"森见登美彦作品《神圣懒汉的冒险》","uri":"https://chuanbohua.github.io/post/2019-08-25-%E7%A5%9E%E5%9C%A3%E6%87%92%E6%B1%89/","year":"2019"},{"content":"《宵山万花镜》属于森见登美彦作品风格主分支中的一种，一种有些怪诞、略有恐怖元素但依然是充满趣味的故事。真的是森见的每一部作品都好像遵循“有趣即是正义”这样的“格言”。森见的作品也肯定少不了“冒傻气”的故事，其中的一个短篇就写了一出荒唐的“大戏”。依然是熟悉的无厘头动机、迷惑的过程和意料之外的结果。\n宵山这本书是以六篇短片呈现的，虽然每一个短篇之间故事并不直接连贯，但是其中有非常多的细节相互穿插着，甚至阅读到最后，六个短篇拼凑起来了一个完整的宵山之夜，故事串联起来，看似无关的人与人也都串联起来，这种有似解密的过程使得阅读的过程非常的爽快。个人感觉这个方法是森见非常擅长的，在很多其他的作品中都有很好的体现，只是在这个作品中体现的并没有那么明显。\n宵山这本书依然是非常浓厚的京都味道。祗园祭、金鱼、风铃、红灯笼、万华镜等等都有着京都祭典的味道。中间的一系列故事又是都围绕着祭典进行，此时的京都仿佛就是一整个世界一样，祭典绵延无尽。\n既然是森见怪诞系的作品，那么故事中肯定少不了一些奇怪，或者说是诡异的故事。比如”我”的妹妹差些被五个小女孩“带走”，直到我及时地抱住他，拉着她下来，才没有被带到“天上”去，而那长得一摸一样的五个女孩径直飞向天空消失了；也有宵山这一天对于一些人无穷无尽地重复，这些人在怪异的行为之后离去；宵山大人到底是谁，或者说到底是什么\u0026hellip;\u0026hellip;这些内容都非常生动，并且有趣。当初读到这些内容时，我就回想到有的人曾经说过的：“森见的这类作品，适合在安静的夏夜打着手电筒、背靠在房屋一角，静静的阅读。”这种感觉与气氛是的普通的日式恐怖难以创造的。\n总之，宵山这本书是在森见作品集中我非常喜欢的一本，森见描写的这种怪诞的感觉让我阅读完之后很久都没有忘记。同时，和宵山同为这一系的作品《夜行》也是我非常喜欢的作品，我将在之后介绍这个作品。\n 在阅读的过程中我也找到了一些有趣的句子，同样摘录在这里。\n 乙川喜欢骗人，而我从前就是他的绝佳目标。每次回想起来，我都疑惑为什么自己相信那种话呢？但因为他煞有介事地大吹法螺，我有比别人单纯一倍，一个不小心就相信他了。乙川常说：“是该怪骗人的我，还是该怪被骗的你？”\n  “你高兴就好\u0026hellip;\u0026hellip;不过你这么做有什么意义？”\n“问得好。其实，一点意义都没有。”\n看乙川笑得开心，我心想“这家伙真怪”，同时也在想“这家伙这有意思”。\n 乙川在这里算是一位“整活”王了，极其强的行动力配合上各种无厘头的夸张点子，让这个人有着非常有趣的魅力。乙川就属于我羡慕的人中的一种，他做了非常多有趣但是并没有任何意义的事情，但是这个人就是这样的有意思。同时这样的人也能不断地吸引周边的人，最后大家一起被卷入无厘头的各种事情中，我认为有趣的生活就是这样延续下去的，始终追求意义会让生活变得辛苦。\n 他不认为有吹嘘自我存在的必要，只要能随心所欲就好。给人一种“怡然自得”的感觉。每次和他聊天，我都觉得好像起了阵阵微风，一股从他头顶上开的天窗吹进来的风。于是，缠绕在自己身边的那些烦人的事像热气球一样飘起来，咻得一下子吹到高高的天上去了。\n 这句话是乙川反向描述一位友人的，与乙川简直是对立的存在。所谓的佛系或许就是这样的存在。其中的这一段描写非常有趣：“每次和他聊天，我都觉得好像起了阵阵微风。”真是精彩的描述，单单是读着，就有种烦恼被吹走的感觉。\n 他经常会这么说：\n“我这人很任性，但我会承受自己的任性带来的折磨。自己做的事自己担——只不过，我就是要比别人多抱怨一倍。”\n 这句话依然是乙川的经典名言，我也非常想成为这样的人，或许我会每天找朋友抱怨一大堆。\n “这是短期社团，只到夏天。奈良县友会有个学长叫乙川，是他托我的。乙川学长在旧杂货店工作，以前我帮过他一点忙。那时候我一直做一些没有用的事，给学长添了好多麻烦，所以在有这次的工作。”\n“慢着，为什么你给他添麻烦，他还找你？”\n“这世界上并不是有用的才叫做才能。”\n “这世界上并不是有用的才叫做才能。”就在几天前，我突然陷入了一个思考：什么样的东西可以称为是一个特长？或者说，什么样的程度，对于一个人来说可以称之为一个特长？我引以为傲的绘画（或许并不引以为傲），在画师眼中都是各处残缺的半成品，那么绘画对我来说能不能称得上是一个特长？当我不仅会制作视频，而且会创作音乐，那么这样初级的绘画技术，还能不能说出来成为一个特长？不过这些实际上都是无所谓的，特长不特长，或许就是与有用与否有一定的联系。当我喜欢这件事，不论它有用没有用，在我这里，或许可以自豪地称之为我的一种才能。\n “为什么要这么做？”岬老师问。\n“纯粹是乙川学长兴之所致想要这么做，所以没有意义。而意义便在于没有意义。既然没有意义，想做什么都可以。一切费用由乙川学长负责。对方没来过祇园祭，而且据说是个心地善良的傻蛋，一定很好玩！”\n 既然没有意义，那么做什么都可以。不愧是乙川学长。\n 然而，几个月过去了，小长井才知道：到头来，只有在那段剧团时代，自己的每一天才是最有冲劲的。山田川给他的非人课题，对他而言是必须的。而他获得解放之后，每天懒散度日、无所作为，也没有丝毫干劲。他一直叫自己相信这是因为自己现在燃烧殆尽，总有一天会东山再起，但事实并非如此。\n 这是个非常真实的情况，高中“非人”般的生活（但是对我来说不甚）给我带来的精神力量如今完全不能重复，所谓的“巅峰体验”也早早不再生效。单纯回顾过去的一段时间，我还能觉得生活有所动力，有所成就。但是相比着“燃烧时候的日子”，我倒在懒散度日之后就再也没有东山再起。有时候还是要逼迫自己一把，或者说是接受现实情况的逼迫，这样的自己，在生活中并不常见。\n “有件事我可以告诉您。”乙川拿着水晶球透着町屋的灯光说：“据说这是世界外侧的球，今晚的我们，就在透过这个球被观望的世界里。”\n 到了这个部分，不少内容都被揭示出来了。在阅读森见的作品中，我一般不追求理解这个作品想传达什么，有什么对现实有指导意义的寓意。因为我认为森见的作品并不是让你在其中找出线索，理解作者深藏在其中、宝藏般的意义的故事。单纯是这样有趣的故事就已经非常的足够了。\n所以对水晶球的理解，我选择把它停留在：有些人不愿向前，一直停留在了宵山的那一天，而无尽重复的宵山，就是水晶球中的世界，其中的人透过水晶球观望外侧，外边的人或许也可以看到里侧。\n 她歪着头问：“等宵山过了，宵山大人要做什么？”\n“宵山是不会结束的。”\n“会啊，就只有今天而已。”\n“我们是不会离开宵山的。昨天也是宵山，明天也是宵山，后天也是宵山。一直都是宵山。我们一直都在这里。”\n“你说‘我们’\u0026hellip;\u0026hellip;还有别的宵山大人吗？”\n“所有的人是一个人，一个人是所有的人。”宵山大人露出微笑。“你也是。”\n“我才不是。”\n“你也是宵山大人啊，因为你在这里。”\n 所有的人是一个人，一个人是所有的人。你也是，宵山大人。\n其他的事情 早在半年前，我就已经开始动笔这篇文章，但是后来因为各种事情被推迟，现在要重新写回当时想要的感觉是一个挺困难的事情，不仅仅是对故事中一些细节的遗忘，还有当时完成阅读后即时的感触都已经慢慢模糊了。\n这些原因导致我这篇文章更像是写给没有读过这本书人，以作为推荐使用。而不是与已经阅读过的人交流观点。不过这也不影响这篇文章的意义，读个开心。\n","id":29,"section":"post","summary":"《宵山万花镜》属于森见登美彦作品风格主分支中的一种，一种有些怪诞、略有恐怖元素但依然是充满趣味的故事。真的是森见的每一部作品都好像遵循“有趣","tags":["Novel"],"title":"森见登美彦作品《宵山万花筒》","uri":"https://chuanbohua.github.io/post/2019-08-20-%E5%AE%B5%E5%B1%B1%E4%B8%87%E8%8A%B1%E7%AD%92/","year":"2019"},{"content":"Topology, I think it is the top course in the field of Algebra. “Top” not only means that it can be widely used in many aspects, including the finance, the computer network, etc but is really hard to learn and understand because it is too abstract.\nBut it does not matter that topology is an interesting course. For example, topology space is always called “Plasticine Space” which means it can be stretched and reshaped to any other “shapes” with the properties never changed. Just like the plasticine which we played in the early ages.\nThe key to comprehend topology is remembering the defines well. Also, understanding them is also important. Only if you can repeat these defines without thinking and understand what it is can you get to master some really hard theories without obstacles.\nIt may be a hard time to remember all the defines because the defines in the latter part always rely on the fore ones. And it will spend a really long time to achieve the level of recalling a define when you hear the name.\nSo, here is a summary of various defines in topology. This would be useful to remember them and hope this will be useful for your revision.\nBy away, as for the theories of topology, the handout we used is written by a really excellent professor and I am not sure can I upload his handout here. So, please reference the textbook more and master the theories there.\n Topology Note Definitions.pdf\n Topology Lecture .pdf\n ","id":30,"section":"post","summary":"Topology, I think it is the top course in the field of Algebra. “Top” not only means that it can be widely used in many aspects, including the finance, the computer network, etc but is really hard to learn and understand because it is too abstract. But it does not matter that topology is an interesting course. For example, topology space is always called “P","tags":["Math"],"title":"拓扑学笔记","uri":"https://chuanbohua.github.io/post/2019-08-14-%E6%8B%93%E6%89%91%E5%AD%A6%E7%AC%94%E8%AE%B0/","year":"2019"},{"content":"Information Theory is a basic course of information \u0026amp; computing science department I took before. Compared with some mathematics courses, it is a bit easier to a certain degree. But maybe the textbook we used was basic.\nAnyway, this course was interesting and seemly useful because we can combine these theories with our real life. This note is the note I took during the final exam period and it may be simple. So if you would like to reference this note, please review it with the use of textbooks.\n Informational Theory Note ver.1.pdf\n Informational Theory Note ver.2.pdf\n ","id":31,"section":"post","summary":"Information Theory is a basic course of information \u0026amp; computing science department I took before. Compared with some mathematics courses, it is a bit easier to a certain degree. But maybe the textbook we used was basic. Anyway, this course was interesting and seemly useful because we can combine these theories with our real life. This note is the note I took during the final exam period and it may","tags":["Math"],"title":"信息论笔记","uri":"https://chuanbohua.github.io/post/2019-06-02-%E4%BF%A1%E6%81%AF%E8%AE%BA%E7%AC%94%E8%AE%B0/","year":"2019"},{"content":"本学期专业课程中有信息论这一门课程，在此之前我学习神经网络的过程中了解了一些与信息论相关的内容，也很开心能开这门课。在这学期中有一些信息论的实验课需要完成一些任务，考虑到上学期学习数值分析没有及时记录所做内容，到后来补上去的各种困难，本次我打算完成一次实验之后及时记录实验内容，其中包含实验内容、遇到的问题和解决方案还有一些自己的想法。\n搜索引擎能搜索到的相关实现几乎都是使用 Matlab 实现的，很少有通过其他语言来做这些实验，正巧在寒假进行了机器学习的学习，当时使用 Python 比较多，所以在这期实验开始时我选择了用 Python 做这些实验。\n但是在真正实际操作中发现，这些问题用 Python 实现并不是非常的方便，主要还是在使用 Pandas 和 Numpy 这两个包，这样并不能体现出 Python 在解决这些实验问题上的优势，不如使用 Ruby 和 Matlab。不过，既然选择了这门语言做到底，就坚持做一下。\nTest 1 实验内容：对于任意给出的信源 $S=[X,p(x)]$ 计算信息熵 $H(x)$\n Input: 路径：各字母出现频率（含 Space），保存于 CSV 文件中 Output: 字母的信息熵  文件目录: information_theory_experiment_test1 |--- entropy_cal.py |--- letter_frequence.csv  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 1\u0026quot;\u0026quot;\u0026quot; import pandas as pd import math class Solution(object): def calInfoEntropy(self, path): \u0026quot;\u0026quot;\u0026quot; :type path: str \u0026quot;\u0026quot;\u0026quot; data = pd.read_csv(path) result = 0 for i in range(0, data.shape[0] - 1): num_tem = data.iat[i, 1] result += num_tem * math.log2(1 / num_tem) return result  Pandas 自带读取 CSV 文件功能，读取结果为矩阵，CSV 文件中第一行会被识别为列名。取数函数有多种：\n loc，基于列 label，可选取特定行（根据行 index） iloc，基于行/列的 position at，根据指定行 index 及列 label，快速定位 DataFrame 的元素 iat，与 at 类似，不同的是根据 position 来定位的 ix，为 loc 与 iloc 的混合体，既支持 label 也支持 position  这篇 Post 有较为详细的说明。\nTest 2 实验内容：对于给出的信源 $S=[X,p(s)]$ 和信道 $Q=(q(y_j|x_i))$ 计算噪音熵 $H(X|Y)$ 和互信息 $I(X;Y)$\n Input: 路径：各字母出现频率（含 Space），信道矩阵，分别保存于 CSV 文件中 Output: 字母的噪音熵和互信息  文件目录: information_theory_experiment_test2 |--- entropy_cal.py |--- letter_frequence.csv |--- communication_channel.csv  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 2\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import math conditional_entropy = 0 mutual_information = 0 # input data letter_fre_x = pd.read_csv('letter_frequency.csv') comm_channel = pd.read_csv('communication_channel.csv') joint_probability_distribution = np.zeros(shape=(27, 27)) # cal the conditional entropy for i in range(0, 26): for j in range(0, 26): if comm_channel.iat[i, j] != 0: joint_probability_distribution[i][j] = letter_fre_x.iat[j, 1] * comm_channel.iat[i, j] conditional_entropy -= \\ joint_probability_distribution[i][j] * math.log2(comm_channel.iat[i, j]) else: continue letter_fre_y = np.sum(joint_probability_distribution, axis=0) # cal the mutual information for i in range(0, 26): for j in range(0, 26): if comm_channel.iat[i, j] != 0: mutual_information += \\ joint_probability_distribution[i][j] * \\ math.log2(joint_probability_distribution[i][j] / (letter_fre_x.iat[j, 1] * letter_fre_y[j])) else: continue print('The conditional entropy is: ', conditional_entropy, ' bit') print('The mutual information is: ', mutual_information, 'bit')  在实现方面和 Test 1 没有什么太大的差距，主要在于信息论的算法上面。\nTest 3 实验内容：给出各英文字母的出现概率，构造 0, 1, 2 Huffman 编码，并将下述一句话进行 Huffman 编码\n The fundamental problem of communication is that of reproducing at one point either exactly or approximately a message selected at another point.\n  Input: 各字母出现频率（含 Space），欲 Huffman 编码的句子 Output: Huffman 编码结果（使用结果编码句子在这里暂时省略，Test 5 会提到）  文件目录: information_theory_experiment_test3 |--- huffman_coding.py |--- letter_frequence.csv |--- sentence.docx  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 3\u0026quot;\u0026quot;\u0026quot; import queue import pandas as pd class HuffmanNode(object): def __init__(self, left=None, right=None, root=None): self.left = left self.right = right def children(self): return((self.left, self.right)) letter_fre = pd.read_csv('letter_frequency.csv') def create_tree(frequencies): p = queue.PriorityQueue() for value in frequencies: p.put(value) while p.qsize() \u0026gt; 1: l, r = p.get(), p.get() node = HuffmanNode(l, r) p.put((l[0]+r[0], node)) return p.get() node = create_tree(letter_fre) def walk_tree(node, prefix=\u0026quot;\u0026quot;, code={}): \u0026quot;\u0026quot;\u0026quot; node 是一个tuple(freq, HuffmanNode|character) \u0026quot;\u0026quot;\u0026quot; if isinstance(node[1], HuffmanNode): code1 = walk_tree(node[1].left, '0', code.copy()) code2 = walk_tree(node[1].right, '1', code.copy()) if len(code1) \u0026gt; 0: for k, v in code1.items(): code[k] = prefix + v if len(code2) \u0026gt; 0: for k, v in code2.items(): code[k] = prefix + v else: code[node[1]] = prefix return(code) code = walk_tree(node) for i in sorted(freq, reverse=True): try: print(i[1], '{:6.2f}'.format(i[0]), code[i[1]]) except Exception as e: print(e) continue  Test 4 实验内容：对给出的信道转移矩阵 $Q=(q(y|x))$，应用迭代法计算信道容量 $C$\n高噪声打字机：设信道输入与输出字母集分别为 $X=Y={A, B, C, \u0026hellip; , Z, -}$，其中 $-$ 表示空格，这 27 个字符排成一圈，当输入某个字符时，输出以等概率 1/3 产生它本生及 相邻 2 个字符，例如：\n$$P(Y=A|X=B)=P(Y=B|X=B)=P(Y=C|X=B)=1/3$$\n Input: 各字母出现频率（含 Space），信道转移矩阵 Output: 信道容量  文件目录: information_theory_experiment_test4 |--- channel_capacity_cal.py |--- letter_frequence.csv |--- communication_channel.csv  首先，这里是我基于 Matlab 程序改进成的 Python 程序，是个错误示例，其原因在于 Matlab 中对矩阵操作转移到 Python 中 DataFrame 实现起来有点麻烦，DataFrame 多用于神经网络数据导入是非常方便的，具体分隔来处理有点麻烦。\n#!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test 4 - Error Example\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import math def channel_capacity_cal(p, q, f, m): \u0026quot;\u0026quot;\u0026quot;the function to cal the channel capacity\u0026quot;\u0026quot;\u0026quot; tem_precision_x = p channel_cap1 = 0 channel_cap2 = 0 for i in range(1, m): sum = 0 row = q.shape[0] column = q.shape[1] rev_transfer_matrix = np.zeros(row, column) out_precision = np.zeros(1, column) tem_precision_y = np.zeros(1, row) for j in range(1, column): tem_sum = 0 for k in range(1, row): tem_sum += q(k, j) * tem_precision_x(k, 1) out_precision.at[1, i] = tem_sum for j in range(1, row): for k in range(1, column): rev_transfer_matrix.at[j, k] = q.iat[j, k] * tem_precision_x.iat[j, 1] / out_precision.at[1, k] for j in range(1, row): tem_sum = 0 for k in range(1, column): if rev_transfer_matrix.at[j, k] != 0: tem_sum += q.iat[j, k] * math.log2(rev_transfer_matrix.at[j, k]) tem_precision_y.at[0, j] = math.pow(2, tem_sum) sum += tem_precision_y.at[0, j] for j in range(1, row): tem_precision_y.at[0, j] /= sum channel_cap2 = math.log2(sum) print(channel_cap2) if abs(channel_cap1 - channel_cap2) \u0026lt; f: channel_cap1 = channel_cap2 tem_precision_x = tem_precision_y print(\u0026quot;the iterations times is: \u0026quot; + i) break else: channel_cap1 = channel_cap2 tem_precision_x = tem_precision_y print(tem_precision_x) return channel_cap1 letter_fre = pd.read_csv('letter_frequency.csv') channel_transition_probability = pd.read_csv('channel_transition_probability.csv') max_iterations = 100 precision = 0.001 channel_capacity_cal(letter_fre, channel_transition_probability, precision, max_iterations)  在参考了 BUPT Zhengyuan Zhu 的处理方法之后进行了改进，但是这里存在的比较大的问题是多次迭代的转移矩阵需要手动计算，可以在此方法之前再添加 math 的方法以实现转移矩阵的计算。\nimport numpy as np letter_fre = pd.read_csv('letter_frequency.csv') channel_transition_probability = pd.read_csv('channel_transition_probability.csv') precision = 0.001 def initiate_prob_distrib(p): p_x = np.transpose(np.ones((1, p.shape[0])) / p.shape[0]) print(\u0026quot;初始化概率分布为:\\n\u0026quot;, p_x) return p_x p_x = initiate_prob_distrib(channel_transition_probability) def iteration(p_i, p_ij, k): q_j = np.sum(p_i * p_ij, axis=0) print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: q_j:\\n\u0026quot;, q_j) alpha_i = np.exp(np.sum(p_ij * np.log(p_ij / q_j), axis=1)) alpha_i = np.expand_dims(alpha_i, axis=0) print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: alpha_i:\\n\u0026quot;, alpha_i) u = np.matmul(alpha_i, p_i)[0] print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: u:\\n\u0026quot;, u) I_L = np.log2(u)[0] print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: I_L:\\n\u0026quot;, I_L) I_U = np.log2(np.amax(alpha_i)) print(\u0026quot;NO. \u0026quot; + str(k) + \u0026quot; iteration: I_U:\\n\u0026quot;, I_U) if I_U - I_L \u0026lt; precision: print(\u0026quot;capacity:\\n \u0026quot;, I_L) print(\u0026quot;input letter frequency:\\n \u0026quot;, p_i) return True, I_L, p_i else: p_i = p_i * np.transpose(alpha_i) / u[0] print(\u0026quot;No.\u0026quot; + str(k) + \u0026quot;Update Probability distributions:\\n\u0026quot;, p_i) return False, p_i flag, I_L, p_i = iteration(p_x, channel_transition_probability, 1) ans_dict = dict() for p in (channel_transition_probability1, channel_transition_probability2, channel_transition_probability3, channel_transition_probability4): flag = False p_x = initiate_prob_distrib(p) k = 1 while not flag: flag, ans, tmp_p = iteration(p_x, p, k) if not flag: p_x = tmp_p k = k + 1 else: ans_dict[ans] = tmp_p for k, v in ans_dict.items() : print(\u0026quot;capacity：\u0026quot;, k) print(\u0026quot;input letter frequency：\\n\u0026quot;, np.transpose(v)[0])  Test 5 实验内容：\n  基于 Test 3 的程序，修改为构造 0, 1 二元 Huffman 编码程序\n  使用上述二元 Huffman 编码程序为下一段文字进行编码\n The fundamental problem of communication is that of reproducing at one point either exactly or approximately a message selected at another point.\n   使用给定的生成矩阵，对上述编码结果进行信道编码（Hamming 编码）\n  任意修改一定量上述编码结果，之后对此修改之后的编码使用校验矩阵，进行信道译码（Hamming 译码）\n  Test 5 在整合前面的实验之后加入信道编码部分。\n文件目录: information_theory_experiment_test5 |--- run.py - 主程序 |--- huffman_coding.py - 实现 Huffman 编码 |--- hamming_coding.py - 实现 Hamming 编码 |--- hamming_decoding.py - 实现 Hamming 译码 |--- article.docx - 编码文字文档 |--- hamming_coding.csv - 生成矩阵 |--- hamming_decoding.csv - 校验矩阵 |--- letter_frequecny.csv - 字母频率  #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u0026quot;\u0026quot;\u0026quot;Test_5/run.py\u0026quot;\u0026quot;\u0026quot; import huffman_coding import hamming_coding import hamming_decoding huffman_coding_result = huffman_coding.huffman_coding() hamming_coding_result = hamming_coding.hamming_coding(huffman_coding_result) hamming_decoding.hamming_decoding(huffman_coding_result, hamming_coding_result)  #!/usr/bin/env python3 # -*- coding: utf-8 -*- # Copyright (c) 2019 - magic_kurakun \u0026lt;magickurakun@gmail.com\u0026gt; \u0026quot;\u0026quot;\u0026quot;Test_5/huffman_coding.py\u0026quot;\u0026quot;\u0026quot; import pandas as pd import docx def huffman_coding(letter_fre): letter_fre = pd.read_csv('letter_frequency.csv') file = docx.opendocx(\u0026quot;article.docx\u0026quot;) doc = docx.getdocumenttext(file) huffman_coding_result = \u0026quot;\u0026quot; length = 0 huffman = () for i in range(0, 26): tem = ('',) huffman += tem for loop in range(1, 12): flag = 26 - loop * 2 letter_fre.sort_values(by='probability') for i in range(97, 122): if letter_fre.iat[flag, 0] == chr(i): huffman[i - 96] += '0' if letter_fre.iat[flag + 1, 0] == chr(i): huffman[i - 96] += '1' if letter_fre.iat[flag + 2, 0] == chr(i): huffman[i - 96] += '2' if letter_fre.iat[flag, 0] == ' ': huffman[i - 96] += '0' if letter_fre.iat[flag + 1, 0] == ' ': huffman[i - 96] += '1' if letter_fre.iat[flag + 2, 0] == ' ': huffman[i - 96] += '2' sum_tem = 0 for i in range(flag, flag + 2): sum_tem += float(letter_fre.iat[i, 1]) letter_fre.iat[i, 1] = str(-1) letter_fre.iat[flag, 1] = str(sum_tem) print('The huffman code of such letters are as follow: ') for i in range(0, 26): length += huffman[i].length() print(huffman[i]) print('The average length of huffman code is: ') print(length / 27) print('The sentence was translated to huffman code as follow: ') for i in range(0, len(doc) - 1): flag = 0 for j in range(97, 122): if doc[i] == chr(j): print(huffman[j - 96]) flag = 1 if flag == 0: print(huffman[0]) for i in range(0, len(doc)): tem = ord(doc[i]) if tem == 32: huffman_coding_result += huffman[0] elif tem \u0026gt;= 65 \u0026amp; tem \u0026lt;= 90: huffman_coding_result += huffman[tem - 64] elif tem \u0026gt;= 97 \u0026amp; tem \u0026lt;= 122: huffman_coding_result += huffman[tem - 96] print(\u0026quot;The result of huffman coding: \u0026quot; + huffman_coding_result) return huffman_coding_result  #!/usr/bin/env python3 # -*- coding: utf-8 -*- # Copyright (c) 2019 - magic_kurakun \u0026lt;magickurakun@gmail.com\u0026gt; \u0026quot;\u0026quot;\u0026quot;Test_5/hamming_coding.py\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import docx def hamming_coding(huffman_coding_result): code_length = len(huffman_coding_result) remainder = code_length % 4 b = [0, 0, 0, 0] hamming_coding_list = pd.read_csv('hamming_coding.csv') hamming_coding_result = \u0026quot;\u0026quot; s = np.zeros(int((code_length - remainder) / 4 + 1), 7) if remainder != 0: for i in range(0, 3 - remainder): huffman_coding_result += '0' for i in range(0, int((code_length - remainder) / 4) - 1): b[0] = ord(huffman_coding_result[4 * i]) - 48 b[1] = ord(huffman_coding_result[4 * i + 1]) - 48 b[2] = ord(huffman_coding_result[4 * i + 2]) - 48 b[3] = ord(huffman_coding_result[4 * i + 3]) - 48 c = np.dot(b, hamming_coding_list) for j in range(0, 6): if c[j] == 0 | c[j] == 2: s[i, j] = 0 if c[j] == 1 | c[j] == 3: s[i, j] = 1 s[51, 2] -= 1 s[34, 2] -= 1 for i in range(0, int((code_length - remainder) / 4) - 1): for j in range(0, 3): hamming_coding_result += chr(s[i, j]) for i in range(0, remainder - 1): hamming_coding_result += chr(s[int((code_length - remainder) / 4), i]) print(hamming_coding_result) return s  #!/usr/bin/env python3 # -*- coding: utf-8 -*- # Copyright (c) 2019 - magic_kurakun \u0026lt;magickurakun@gmail.com\u0026gt; \u0026quot;\u0026quot;\u0026quot;Test_5/hamming_decoding.py\u0026quot;\u0026quot;\u0026quot; import pandas as pd import numpy as np import docx def hamming_decoding(huffman_coding_result, s): code_length = len(huffman_coding_result) remainder = code_length % 4 hamming_decoding_list = pd.read_csv('hamming_decoding.csv') d = np.zeros(int((code_length - remainder) / 4), 3) hamming_decoding_result = \u0026quot;\u0026quot; hamming_decoding_result_tem = \u0026quot;\u0026quot; for i in range(0, int((code_length - remainder) / 4) - 1): c = np.dot(s[i, :], hamming_decoding_list) for j in range(0, 2): if c[j] == 0 | c[j] == 2: d[i, j] = 0 elif c[j] == 1 | c[j] == 3: d[i, j] = 1 for j in range(0, 3): if d[i, 0] == hamming_decoding_list[j, 0] \u0026amp; d[i, 1] == hamming_decoding_list[j, 2] \u0026amp;\\ d[i, 2] == hamming_decoding_list[j, 3]: s[i, j] -= 1 for i in range(0, int((code_length - remainder) / 4) - 1): for j in range(0, 3): hamming_decoding_result_tem += chr(s[i, j]) for i in range(0, remainder - 1): hamming_decoding_result_tem += chr(s[int((code_length - remainder) / 4), i]) decode_length = len(hamming_decoding_result_tem) flag = 1 break_while = 0 while flag \u0026lt; decode_length - 3 + remainder: for i in range(0, 26): str_tem = hamming_decoding_result_tem[flag:flag + i - 1] for j in range(0, 26): if str_tem == huffman_coding_list[j, :]: if j == 1: hamming_decoding_result += chr(32) else: hamming_decoding_result += chr(j + 96) flag += len(str_tem) break_while = 1 break if break_while == 1: break print(hamming_decoding_result)  经过测试之后发现经过校验矩阵之后，传输信息错误率在 0.01 之下，根据传输量趋于 0，即是信道编码的意义。\n最后 实验拿了满分，快乐。\n","id":32,"section":"post","summary":"本学期专业课程中有信息论这一门课程，在此之前我学习神经网络的过程中了解了一些与信息论相关的内容，也很开心能开这门课。在这学期中有一些信息论的","tags":["Matlab","Python"],"title":"信息论实验","uri":"https://chuanbohua.github.io/post/2019-05-09-%E4%BF%A1%E6%81%AF%E8%AE%BA%E5%AE%9E%E9%AA%8C/","year":"2019"},{"content":" Procreate® is the most powerful and intuitive digital illustration app available for iPad. It\u0026rsquo;s packed with features artists love, and it\u0026rsquo;s an iPad exclusive.\n 在 iPad 上进行画画，被推荐最多的软件就是 Procreate。作为一个移动端的创作软件，Procreate 不愧其 Pro 之名，软件深度还是很好的。\n其上手难度比较低，网上也有很多的基础教程。但是对于其比较深入的学习，目前并没有太多的资料。更多的人还是选择在移动端涂鸦，正式作品主要还是在 PC 端完成。\n不过即使是涂鸦，我们还是想要追求“更好地涂鸦”。好好学习使用 Procreate 会帮助我们实现这个愿望。\n我在使用 Procreate 的过程中，总结了一些经验。不过我并没有接受过绘画方面的专业教育，也没有花费太多的精力在上面，可以说是业余的业余了。全都是自己摸索、主观理解，或许会有一些和专业认知相悖的地方，这种时候欢迎指正。\n正文 前面提到了，Procreate 的基础教程到处都是，大多也都很容易理解。即使是刚下载 Procreate，只要有一些 Photoshop 的知识，就可以画出还不错的画。建议有用过 Photoshop 或者 Sai 的同学可以直接了解功能对应就可以。\n关于 Procreate 的基础教程，官方提供了小册子：《Procreate 4 艺术家手册》，不过是英文的，可以翻翻看看，主要介绍的是最基本的一些操作。页数比较多，如果能翻下来的话也差不多就了解了 Procreate 的各种操作。如果英文苦手或者懒得读英文的话，微博上@折翼狐友情翻译了一份。\n不想读册子的话，就像刚开始学 PS 一样随便画画，想到什么功能就去搜索，几幅图画下来也就了解了这东西怎么用。\n适应 Apple Pencil\n为了保护 iPad 我在它的上面贴了一张钢化膜，用起来 Apple Pencil 滑溜溜的，最开始用的时候不是很好适应，再加上官方笔刷手抖修正很多都比较低（相比于 Sai），画出来的线都是弯弯曲曲的。\n后来了解到网上有卖 iPad 类纸膜（大多是日本产的，毕竟他们那边拿这个画漫画的画师不少），可以给 Pencil 提供类似纸的手感。自己也比较懒得撕膜再贴，也怕贴上这种膜之后日常使用的手感会变差。拿 iPad 画画的重度用户可以试试手感怎么样。\n平常拿 Pencil 做笔记，在 Notability 中用的笔也比较的细，对压感差距感觉不大。官方也没给出 Apple Pencil 压感的具体参数，在我比较它与 Wacom 1024 压感的笔之后觉得 Apple Pencil 还是略差一点。有时候画画用力与轻力的区分不是很明显。\n另外在上色时候，用压感控制粗细时一直压着笔画画感觉还是需要很用力，可能会比较伤笔。不过这点压感差距对于我这种业余选手已经是很够用的了。\nPencil 的侧向压感我倒是很想吐槽一下，在使用“铅笔”笔刷时，本身是可以通过改变倾斜程度来实现类似于真实铅笔横着打调子的效果。不过实际上，这个粗细变化实在是太明显了，稍微斜一点没什么反应，再斜一点突然就一大片灰色画出来了。个人感觉挺难控制。要画素描的话还是拿铅笔和纸画吧，成本低手感也好。\n笔刷\nProcreate 的笔刷官方称为“新时代的笔刷模块”，也很容易理解，大致就是 笔刷的刷头形状(这里面的刷头形状也可以很方便的自己绘制) + 笔刷的走笔手感(硬度属性等等) + 笔刷材质。其中任何一部分都可以修改并叠加效果，自定义功能很强大。\n笔刷控制整体上与 Sai 一致，了解过 Sai 之后对 Procreate 的笔刷也能很快的上手。不过笔刷本身是一个很难调整的东西，每个人有不同的需求，不太容易针对具体情况进行调整。想要比较好的自己调整笔刷可能需要一些些研究。\n在自己研究透怎么调整出属于自己的笔刷之前可以考虑用一用其他人的笔刷，官方的笔刷对于日常涂鸦来说已经够用。要做精细画图或者为了实现特殊的风格采用相应的笔刷（比如画漫画或者油画，还有一些比较好用的水彩笔刷），网上有很多笔刷分享，都可以参考。\n另外，笔刷除了可以用在绘画上，橡皮、涂抹都是可以的。善用这两种工具能“出其不意”的画出好作品。\n误触问题\n平板画画无法避开的问题就是误触。这个与个人习惯关系比较大，对我来说，我习惯在左手两指撤销的情况下抬起右手，这样的话在右手落笔的时候很容易造成误触，而且不易被发现。个人感觉误触还是比较频繁的，不过及时修补的话也不会对作品带来很大的影响，只是影响使用心情。\n另外一个注意到的就是，在使用 Pencil 画画时，需要用相当大的力气依然很难达到用 100% 强度画画（看不懂这句话啥意思？我也不知道怎么表述，那就举个例子吧）。使用橡皮工具，最大强度 100% 去擦除时，即使用比较大的力量，橡皮笔刷扫过去之后依然还有淡淡的残留，需要再来一遍。而直接用手指就可以擦得非常干净（100%强度），所以在使用橡皮的时候（单纯为了擦掉什么东西），就用手指抹上就行。笔刷工具也是类似，用手指划一下就可以看到笔刷在这个粗细下最大强度画出来的是什么样子了。\n快捷键缺失\n在 Win 平台上画画的好处之一就是各种操作都可以使用快捷键切换，左手控制键盘，右手完全不需要离开画画的点就可以直接切换工具或者是进行操作，省心省力。\n换到 iPad 平台上时有很多操作比如切换图层、笔刷和橡皮等等都需要右手去做，比较打断画画节奏，对效率也有影响。但也没有什么解决方案，只能慢慢习惯。\n与 PS 不同的地方\nPS 上有画布，在自由变换图层的时候即使超出画布，再变化回来依然还在。但是在 Procreate 中自由变换结束，有图像在画布之外，那么这部分的像素就会被删掉，可以理解为被裁剪掉。\n有时候插入一幅图片想作为参考但是位置不好，调整来调整去图像就被删掉了一块，只能重新导入。\n至今不是太清楚 Procreate 上复制粘贴是怎么个机制，至少了解到的就是复制整个图层，选中另一个图层的情况下是直接粘贴到选中的图层中的，在 PS 中没有这种操作（实际上在 PS 中连复制功能都不怎么常用，大部分都是直接使用 Ctrl + J）。偶尔用不好会搞乱图层。\n最后 总体上来说 Procreate 是个很优秀的软件，适用于平常画画的绝大部分情况。即使对个人来说可能会有一些小问题，这些都是可以克服的。\n","id":33,"section":"post","summary":"Procreate® is the most powerful and intuitive digital illustration app available for iPad. It\u0026rsquo;s packed with features artists love, and it\u0026rsquo;s an iPad exclusive. 在 iPad 上进行画画，被推荐最多的软件就是 Procreate。作为一个移动端的创","tags":["Design"],"title":"浅谈 Procreate","uri":"https://chuanbohua.github.io/post/2019-05-03-%E6%B5%85%E8%B0%88-procreate/","year":"2019"},{"content":"在此之前我在阿里云服务器上托管了我们的群机器人，这些天突然想到可以使用服务器剩余的算力进行开服，和小伙伴们一起玩一些游戏。\n最先想到的就是《饥荒》(Don\u0026rsquo;t Starve) 这款游戏，在网上有很多相关教程，但是教程中 Linux 版本不同，《饥荒》游戏更新也比较快，其中有不少教程都稍有过时，在实践中往往碰到很多问题。\n本篇 Post 会记录我在搭建饥荒服务器中遇到的一些问题，并给出解决方案，细致流程已经有很多前辈给出了，我在这里列出一些教程。\nUpdate 2019.3.6 - 经过一些时间的测试，个人认为如果只是身边的几个小伙伴想要一起联机玩一玩的话，完全没有必要在云服务器托管这么一个服务器。\n因为在云端的服务器各方面管理起来比较麻烦，而且如果云服务器配置不是很高的话开启洞穴双世界运行一段时间之后会出现卡顿。整体体验比较一般。尤其是阿里云的学生机，DST 加上八九个 Mods 的情况下无法负载三个人以上，算力不足的问题很严重。\n另外在云服务器中管理 Mod 是个大问题，调整 Mod 参数需要直接修改 ini 文件，但是一些 Mod 开发者不提供相应的设置修改接口，就需要自己去寻找修改，会带来很多的麻烦。\n正文 推荐教程：\nLinux环境饥荒服务器手动搭建教程 - 幻想的羽毛 ：该教程相较于后面的一些教程比较新，也更细致一些，只不过博主最近几个月没有继续更新内容。\nCentOS下安装和配置饥荒联机版服务器 - SumyGG ：我最初参考的教程，一直到服务器配置部分都可以很好的参考，服务器部分根据具体情况需要具体分析。\nCentos7.2下建立饥荒服务器 - qhsong ：靠脚本一键式配置，中间遇到问题可能不是很好解决，适度参考。获取服务器许可的方法已过时。\n其他的很多教程都是大同小异，有上面几个参考，加上 Google 就可以解决几乎所有问题。下面部分是我在参考上面教程过程中遇到的问题与解决方案。\n操作系统：CentOS 7 用户：magic_kurakun （非 root）  yum 安装出现 Error: Multilib version problems found 顾名思义，就是多版本冲突，Linux 默认保持单版本在你的主机上：64位或者32位。而 AliCloud 默认配置的 CentOS 中都是64位，饥荒服务器中需要32位的动态链接库。所以在上述教程中出现这种情况，需要手动设置允许多种版本共存：\nyum install --setopt=protected_multilib=false libgcc (缺少的库)\n关掉多重保护之后重新安装即可。\nSteam CMD 登陆问题 现在版本的 Steam CMD 需要打开时先进行登陆，否则无法获取相关游戏信息。\n// 未登录时请求 App 信息会 Error Steam\u0026gt;app_update 343050 validate ERROR! Failed to request AppInfo update, not online or not logged in to Steam. // Login Steam CMD Steam\u0026gt;login ********** passwd:********** Logging in user '**********' to Steam Public... password: Logged in OK Waiting for user info...OK  路径打开问题 通过 Steam CMD 安装的饥荒服务端的路径中，游戏名文件夹是以空格分隔单词的，在 Linux 中很少这么用，这时候运行脚本、cd 文件夹、scp 文件等等操作在书写路径时别忘把整个路径用引号括起来。\n我遇到这个问题就真的是自己菜了\n缺少动态链接库问题 每个教程中都会提到这个问题，也有不同的解决方案，但其中依然会碰到很多问题，导致无法链接成功。\n首先，可以通过 ldd ./dontstarve_dedicated_server_nullrenderer 来查看缺少的动态链接库，一般都是缺少 libcurl.so.4。\n教程中提供的方法就是软链接libcurl-gnutls.so.4到libcurl.so.4\n但是阿里云的 CentOS 是默认不安装 libcurl.i686 即32位 Libcurl 库，这里一定要手动安装，否则运行 ln -s /usr/lib/libcurl.so.4 /usr/lib/libcurl-gnutls.so.4 时没有效果。另外，在安装32位 Libcurl 库时会遇到版本共存冲突问题，参考上述解决方案。\n另外就是在运行软连接时一定注意是将 DST 服务器文件夹下的 lib 链接过去，而不是 usr，路径方面可以参考上述第二个教程，比较清晰。\nklei 文件与设置文件放置路径问题 对于服务器密匙的申请方法，很多地方都有提到，过去的方法 TheNet:GenerateServerToken() 已经不可用，需要在游戏中 Account 界面打开 Klei 网站进行申请，主要参考第一篇教程。\n上述的教程中对申请到的服务器密匙放置位置描述的不是很清楚，经过现在版本的测试（2019-2-25），该密匙文件应该放在 .klei 文件夹下与 master 文件夹同目录。同样的，服务器世界配置等 .ini 文件亦要放在该目录下。\n结尾 希望饥荒能给大家带来诸多欢乐。\n","id":34,"section":"post","summary":"在此之前我在阿里云服务器上托管了我们的群机器人，这些天突然想到可以使用服务器剩余的算力进行开服，和小伙伴们一起玩一些游戏。 最先想到的就是《饥","tags":["Linux","ACG"],"title":"在 Linux 平台创建 DST 多人服务器","uri":"https://chuanbohua.github.io/post/2019-04-15-centos-%E6%90%AD%E5%BB%BA%E9%A5%A5%E8%8D%92%E6%9C%8D%E5%8A%A1%E5%99%A8/","year":"2019"},{"content":"由于学校的情况，我在日常生活中更多使用 Tencent QQ，也加入了很多的 QQ 群。有老师建立的学术交流群，也有一群相同爱好的人组成的兴趣群。\n这些群之中有不少有群机器人，这些 QQ 机器人功能多种多样，有的可以帮助管理群，有的可以提供一些有趣的游戏或者抽卡模拟。这样的机器人可以非常好的活跃群气氛，提供一些游戏或者好玩的功能大家一起参与。\n被这些功能打动，并且想到可以把这个机器人放到和一些关系不错的同学创建的群中玩，于是就产生了拥有自己的 QQ 机器人的想法，并大概花了两天的时间去配置这样的机器人，并完成了这篇文章。\n在遇到各式各样的问题时，我们都会去搜索引擎寻找解决方案。对于遇到的问题，我们也经常碰到一些让人难以理解的回答，这些回答要么是过于简略，这样的解决方案多是由当事者事后回忆并撰写的，经常略过了不少关键细节，也有的答案本身就是错误的，这种多是回答者从其他地方参考过来，而并没有亲自去尝试带来的结果。\n这样的解决方案反而会给我们解决问题带来反作用。所以，在我撰写这篇教程时，尽可能的用到“提问的艺术”和“回答的艺术”，尽可能精确的去展示问题的解决方案，我也会将亲自完成这篇教程时遇到的问题记录下来，以备大家参考。\nPart 1. 启用属于自己的 QQ 机器人 在最初开始了解 QQ 机器人的时候，发现有很多种类的 QQ 机器人可供选用，编写语言、平台、功能也各不相同，有的是 Github 项目，有的则是商业网站提供的。\n但是之后我了解到一个事实，非常多的 QQ 机器人都是基于 Smart QQ 建立的，也就是不少人熟悉的 Web 版 QQ ，而 WebQQ 该功能已于2019年1月1日停止运营。所以此前很多的 QQ 机器人都无法使用了，在选择机器人平台的时候需要了解到位。\nSmart QQ 的停用对我编写 QQ 机器人带来了一些麻烦，本身 WebQQ 的消息传输可以直接转换为 HTML 代码过滤，来作为接收的信息。这项服务关闭之后就需要考虑其他的过滤信息的方法了。我没有这么多的耐心去自己写一个机器人，也算遵守“有轮子就不自己造”的态度，选择了既有的机器人服务进行使用。\n最后选用的是很广泛使用的 酷Q 社区提供的 QQ 机器人，该社区提供 Air 版（Free）和 Pro 版（Charges）。差别在于 Air 版无法发语音与图片，仅能以文字或者 emoji 进行交互。\n酷Q 社区提供了比较丰富的 应用/App，都是由用户贡献。比较好的是该论坛下载是免费的（下载文件消耗 2CP，评论一次获得 2CP，等价于可以任意下载）。\n由于是稳定的 QQ 机器人社区，酷Q 的使用非常简单，自带有教程插件，运行之后会有细致的教程教你使用。但是，如果你使用的 QQ 号是新号，强烈建议不要启用该教程，有极高的概率被冻结账号。原因在于教程中该账号会高频率发送信息，新账号容易被判定为广告而被冻结。\n在论坛寻找下载并调试一些自己感兴趣的功能插件之后，我们就可以准备将机器人托管到云服务器上了。\nPart 2. 启用云服务器 如果你已经有自己的云服务器并已经调试好，这一部分可以跳过。\n 准备工作：\n 了解基础的 Linux 语句   部署服务器\n服务器商家有很多种，可以按照自己的喜欢选择。这里我是用的是 阿里云轻量级应用服务器，学生云翼计划年费 ￥100 多一些。入门级的服务器托管酷Q也几乎不占用服务器的内存与 CPU，云服务器可以做很多其他事情的，比如托管自己的网站，做云计算等等（如果你的服务器是境外的，当然要用来搭梯子）。\n当然 ECS 也是可以的，不过云服务器比较的简单。当然如果愿意折腾和更自由一些，ECS 是很好的选择。\n操作系统可以自由选择，完成本教程都是大同小异，这里选用的是 CentOS。也便于未来其他方面的使用。\n连接服务器\n部署完初始化之后就可以用 SHH 连接了，方法可以参考 Putty 配置说明。但是 SSH 连接工具还是 MobaXTerm 更好用一些。\n  注意：阿里云有三种方式进行远程连接：1. 浏览器直接连接；2. 客户端密匙连接；3. 客户端账号密码连接；\n在生成密匙后再使用账号密码登陆时会出现 Disconnected:No supported authentication methods available 问题，解决方案参考 解决方案。\n  Part 3. 部署酷Q至云服务器 系统：CentOS 7.4 SSH App：MobaXterm 环境：Docker cotainer 下述 Linux 操作：用户 - root；主机名 - CentOS；  Step 1. 配置 Docker\n安装 Docker：\n[root@CentOS ~]# sudo yum install docker\n安装完成之后启动 Docker：\n[root@CentOS ~]# sudo systemctl start docker\n查看 Docker 运行情况：\n[root@CentOS ~]# docker info\n Step 2. 配置 CoolQ (酷Q) 镜像\n下载 CoolQ 镜像（coolq.io）：\n[root@CentOS ~]# sudo docker pull coolq/wine-coolq\n查看镜像情况：\n[root@CentOS ~]# sudo docker images\n创建一个用以存放数据的 coolq-data 文件夹，创建的路径可以任意选择，这里为最顶层目录：\n[root@CentOS ~]# sudo mkdir /coolq-data\n运行 CoolQ 容器，这是最关键的一步，请仔细按照下述参数说明进行操作：\n[root@CentOS ~]# docker run --restart=always --name wine-coolq -d \\ -p 8080:9000 \\ -v /coolq-data:/home/user/coolq \\ -e VNC_PASSWD=12345678 \\ -e COOLQ_ACCOUNT=1000000000 \\ coolq/wine-coolq  参数说明 (其余部分均不需要修改)：\n8080 - 远程监听端口,此端口需要云服务器防火墙通过,请参考你选择的服务商提供的信息 /coolq-data - 刚才创建的存放数据的文件夹路径 12345678 - 过一会需要登陆一个东西,这里是你要设置的登陆密码(不超8位) 1000000000 - 用以登陆酷Q的QQ号   注意：远程监听端口设置的合适与否关系着后面能否连接酷Q，请务必选择防火墙开放的端口。以阿里云为例，选择 概览 -\u0026gt; 服务器安全设置 -\u0026gt; 防火墙 其中 HTTP 这一行的端口范围就是服务器开放的端口，这样上述操作中就用 -p 80:9000 即可。  Step 3. 连接 CoolQ 并调整\n使用浏览器打开 http://0.0.0.0:8080 ，其中 0.0.0.0 是你主机的公网 IP，8080 是你刚才设置的端口。如果前面一切顺利，你会打开一个 noVNC 的界面。\n连接需要输入上述 VNC_PASSWD 设置的密码，之后酷Q就会自动启动，正常登陆之后就完成了酷Q的连接。\n 注意：在这里登陆酷Q需要QQ号已经开启设备锁，请用手机登陆一次QQ，在设置中将设备锁打开  之后对酷Q的调整就与 Windows 上一样了，文件就在之前所创建的 /coolq-data 里面，将你所需要的插件上传上去之后就可以在 VNC 上面如 Windows 一般进行调整。\n新版本的 wine-coolq 容器自带重启功能：被关闭之后 10 秒之后自动重启，以支持长期后台运行。\n 注意：目前 VNC 存在比较严重的问题：中文输入乱码，目前没有找到比较成熟的解决方案，可以考虑在windows 本地将 ini 设置文件配置好，再上传上去。  至此，酷Q配置完毕。\nPart 4. 后续调整 参考 Docker 从入门到实践 控制容器运行与停止：\n[root@CentOS ~]# docker start coolq\n[root@CentOS ~]# docker stop coolq\n当然，比较好的选择就是在酷Q中安装一个机器人控制插件，这样就可以比较方便的启用和关闭机器人，并且监控机器人状态。\n稳定性方面，依服务器的带宽而定，反应偶有延迟，其中的一些需要联网的功能偶尔会宕机，整体上影响不大。\n2019.3.25 Update - 经过一段时间的测试，酷Q的回复延迟越来越长，最后稳定在 20s 左右，具体原因是系统问题、主机问题还是网络问题还在分析。另一个遇到的问题就是酷Q更新之后是需要重新登陆的，在远程的情况下需要定期连接，是比较麻烦的，而酷Q也不提供停止更新或者静默更新，目前还没有比较好的解决方法。\n","id":35,"section":"post","summary":"由于学校的情况，我在日常生活中更多使用 Tencent QQ，也加入了很多的 QQ 群。有老师建立的学术交流群，也有一群相同爱好的人组成的兴趣群。 这些群之中有不少","tags":["Linux"],"title":"在 Linux 平台创建 Tencent QQ 机器人","uri":"https://chuanbohua.github.io/post/2019-03-16-tencent-robot/","year":"2019"},{"content":"前言  The vast ocean of stars can always carry our infinite imagination.\n浩瀚的星空永远是我们无穷的想象力的归宿。\n—— 刘慈欣，于克拉克想象力社会贡献奖颁奖仪式\n 正如 2006 年，刘慈欣作品《地球往事》三部曲第一部：《三体》正式发表，这一年被科幻圈称为中国科幻小说元年。2019 年，由刘慈欣作品《流浪地球》改编的同名电影上映，获得诸多好评，2019 也被一些人称为中国科幻电影元年。近几年热度一直在消减的科幻，又一次进入到了大家的视野。\n 科幻是一种生活态度。\n—— 刘慈欣\n 科幻 是 科学幻想 或是 科学虚幻 的简称，广义上的科幻种类多种多样，从机器人三定律中的逻辑学讨论到生化危机中的病毒变异，都可以称之为科幻。虽然“硬科幻”、“软科幻”的分法常见诸许多杂志、网站和爱好者之口，但赞成者内部对“软硬”的定义也存在争议；同样，有许多人拒绝承认这种说法，认为没有必要去细分科幻小说。\n现在大众更倾向于使用“科幻”与“奇幻”来分别它们。但是，这些作品都倾注了作者非凡的想象力，带领读者进入到多种多样奇异的世界，这其中映射着我们对现实的看法、对未来的想象。\n人类对未知有着天然的向往，而有时又存在着恐惧，不论是“新视野号”向着深空的前进，还是《克苏鲁神话》中描述的人类最原始的恐惧，都体现着人类对探索的渴望。而科幻在想象层面上满足了人们对无端未知探索的需求，了解与感受不同作者脑中的宇宙是何种形式、人类未来何去何从等等。\n当我们停下阅读，放下书本进行思考时，我们的思维也越过千万光年，在宇宙间脱离物质的去探索、去理解，“广阔”的视野不再停留于这片蓝色的乌托邦。宇宙很大，人类很渺小，还有那么多事情我们并不知晓，想到此处，就能重新认识自己的存在，似乎有一些哲学含义包含在其中，这些值得我们去反复思考。\n我对科幻最早的接触可以回溯至高一，那年我第一次阅读到《三体》，并被其所震撼。从此开始之后的几年，是我较多的阅读科幻的时间，可以说科幻陪伴我度过了平淡的高中时光。\n在这两年多内，我阅读的科幻作品量并不算很大，但是其中的不少都给我留下了非常深刻的印象，我也会经常的重读这些作品，每一次重读都会有不同的理解。\n其中我读的较多的便是刘慈欣的作品。今年过年回到家中，随手翻一翻当年买的几本科幻作品，又想起了高中那时候读科幻的感受。于是就针对这些作品写了这篇文章，来尝试复述一下当时阅读的感受。\n科幻启蒙 —— 《地球往事》三部曲  给岁月以文明，而不是给文明以岁月。\n “地球往事”这个名字事实上是被忽略了的。现在人们普遍所叫的“三体”实际上是地球往事三部曲的第一部的名字，而现在所称的三体指的是：《地球往事 —— 三体》《地球往事II —— 黑暗森林》《地球往事III —— 死神永生》。\n也算是一个“以讹传讹”的典型故事了，鉴于《三体》这个名称已被大众广泛接受，本文后面都称之为三体。\n《三体》这部作品的优秀程度完全不需要我来讲，只从奖项中，就可以了解到它在中国、乃至世界科幻上占有的一席地位。庆幸的是，我阅读的第一部科幻作品就是它。\n在当时，三体被称为“中国科幻的优秀作品”，但考虑到当时科幻圈在大众中的影响力，这些科幻作品并没有在大众视野中占据一定的地位。当时是一位我的好朋友 Yang 向我推荐这篇作品，并将书借给了我。由此开启了我的科幻历程，有幸在这么早遇到了如此优秀的作品。现在我的这位朋友远在美国，也已经一年多未见了，只期待我们下次可以早日相聚。\n 给时间以生命，而不是给生命以时间。\n 该作品给我留下深刻印象的地方有很多：三体世界精妙的设计、另人深思的黑暗森林法则、面壁计划、震撼人心的罗辑与三体世界的对峙、四维空间的描写、拯救人类的童话、一转瞬间 18 万年的沧海桑田等等。对于当时从未接触过科幻的我是一种冲击，开始思考空间、时间、人类和宇宙。\n《三体》是“硬科幻”，小说是描写人性的文学，而《三体》就像它的名字：地球往事 一样，仿佛就是在叙述过去的地球的历史。通篇作品对人性的描写并不算多，更多的是集中在对这样一个三体与人类对抗的世界的补足，绘制了一幅广阔的宇宙画卷。\n宏大的世界观并不影响这篇作品将末日下的人性表现的很好。除此之外，主观上更多的是与三体、与宇宙对抗无果的无力感。\n《三体》中没有大英雄主义，每个人的一生都是坎坷、曲折的。而最终人类、三体和宇宙的走向也并不一定是美好的。在宇宙尺度上，这样小小的插曲发生在了银河系第三臂旋上的微不足道的恒星系中，而还有千万亿个文明的兴衰也在同时发生着。人类只是将自己的故事记录下来，这就是地球往事三部曲。\n时至今日，在向别人推荐读书时，《三体》依然是我优先度很高的选择。\n冰冷的机器与温暖的人心 —— 《球状闪电》  当我走到人生的尽头，当我在弥留之际最后一次睁开眼睛，那时我所有的知性和记忆都消失在过去的深渊中，又回到童年纯真的感觉和梦幻之中，那就是量子玫瑰向我微笑的时候\n 《球状闪电》是刘慈欣另一部长篇科幻小说。在阅读完《三体》之后，我开始关注刘慈欣这位作者，从其长篇小说读起，球状闪电与超新星纪元是我随后读到的作品。\n该作品内的时间与《三体》交织，由丁仪这个客串人物可知。《球状闪电》发表于《三体》两年前，在球状闪电中可以看到不少三体的影子，大刘也是尽力去圆满球状闪电的设定，让人信服于其中。\n这篇作品对悬疑气氛的渲染是成功的，前半篇以几种异象为主题从多个角度一步步揭开球状闪电的秘密。在此过程中，各种各样的奇异事件吸引着读者。最后揭示球状闪电真相时令人惊奇，精妙的设定与剧情设计让这部作品一环扣一环，节奏紧凑连续。\n《球状闪电》中对人物的刻画是优秀的，所有人都在执着地追逐着能让我们着迷一生的事务，而主人公，无关社会、无关生活，从痴迷，矛盾，绝望到找到希望，一心追逐自己想要的东西，就好像人的一种本能，无关世俗、无关成败\n 其实，儿子，过一个美妙的人生并不难，听爸爸教你：你选一个公认的世界难题，最好是只用一张纸和一只铅笔的数学难题，比如歌德巴赫猜想或费尔马大定理什么的，或连纸笔都不要的纯自然哲学难题，比如宇宙的本源之类，投入全部身心钻研，只问耕耘不问收获，不知不觉的专注中，一辈子也就过去了。\n人们常说的寄托，也就是这么回事。或是相反，把挣钱作为惟一的目标，所有的时间都想着怎么挣，也不问挣来干什么用，到死的时候像葛朗台一样抱者一堆金币说：啊，真暖和啊……所以，美妙人生的关键在于你能迷上什么东西。\n 这种执着就像在心中的灯塔，在生活中，我们可以停下来看电影、打球、恋爱……但是，无论我们在做什么的时候，只要心中的这份执着在亮着，我们总会永不停歇的去追求。\n球状闪电不同于三体冰冷的“地球历史”，充满了人情：不论是爱情、战友情还是民族情，都在这篇作品中非常好的体现出来。\n其中最令我印象深刻的是在“核电站的恐怖分子”部分，这里涉及到了一直被人类思考的伦理哲学问题：“如果可以牺牲非常小的一部分人，而拯救成千上万的人类，那么我们是否应该杀掉这些人？”\n作品中对球状闪电的秘密揭露后并没有结束，在此之后的部分脱离了对球状闪电本身的探索，而借这种超越现已知自然的力量引发的问题来描写人性，并将作品的格局提升到了更大的境界。\n刘慈欣又一次站在上帝的视角：宏大与微小，坚硬和柔软，他都伸缩自如。还有很多世界，不是不存在，是我们尚未发现。\n孩子们的战争与和平 —— 《超新星纪元》  \u0026ldquo;谁又能保证大人们没有给他们留下’面包屑‘呢？\u0026rdquo;\n 如果《三体》《球状闪电》被称为“硬科幻”的话，那么相比之下《超新星纪元》的“硬”度可能没有那么高。在设定上，《超新星纪元》更加的“有趣”一些。\n在面临种族的灭顶之灾时，人类究竟会不会齐心协力一次？在《超新星纪元》中，人们将希望寄托于孩子们，蹒跚学步的孩子世界一点点向前走去。作品中非常有趣的部分就是孩子们在南极的军备竞争，从中可见大刘是怎样的一个军迷。在此之后，两个“面包屑”将本就不“童真”的世界拉会现实，对核弹发射的描写堪称经典，震撼人心。\n在故事中，孩子们“扮演”起国家政府，学着大人处理事务又随意打破规矩，即使这是描述孩子世界非常不成熟的成长，依然映射了当今现实中的很多国家、政府政策问题，很多时候充满讽刺意味。私以为这部作品非常好的向我们传达了反战、和平的讯息。\n时间的力量 —— 《时间之墟》 大刘是中国科幻不可忽略的人物，但除此之外亦有诸多非常优秀的科幻作家，在刘慈欣之前，有王晋康、星河、姚海军等等一批科幻作者，他们都是中国科幻的基石人物。在这里我想提到的作者是宝树，接触到他的这篇作品的契机是在书店的偶然遇到，独特的封面与奇特的剧情简介让我选择了它。\n《时间之墟》的设定不算独到，时间跳转、不断循环在很多作品中都可以看到类似的剧情。比较有名的是《土拨鼠日》这部电影，不过这篇电影的主线是爱情，在这里面科幻不过是一个新奇的设定，所以在我看完这部电影时觉得非常的失望。\n而《时间之墟》这部作品就在一个比较大的框架下讲述了时间跳转的故事，就像推荐序中所说的：常见的时间跳转的作品，大多是除了主角其他人都没有时间跳转的记忆。而这部作品中，所有人都保留了时间跳转的记忆，这样构建的宏大世界非常难以去想象与书写。作者宝树以其优秀的想象力和文笔去记录了这样的一个故事。\n作品前面的部分着重描述了时间跳转出现后，出现的各种社会现象，夸张而有趣，在其中穿插着后续的伏笔。中间部分是我个人认为作品中最精彩的部分，当时间循环次数越来越多，人类的行为慢慢改变，从而诞生出来的“越狱计划”和时间宗教等等，都是超越一般想象力的现象，在此之后的无尽循环让人绝望。令人震撼的结尾，当被告知这个世界已经“重启”了千万次，与时间对抗的绝望感又一次的加深。我阅读到这里的感受与《地球往事 —— 死神永生》最后的感受相似\n 过去曾经是现在，而未来也将变成现在。没有不曾是现在的过去，也没有不会变成现在的未来。我们体验到的时间，本质上就是“现在”不停地向前运动。\n—— 时间之墟\n 时间永远是科幻系列作品跳不开的主题，不论是经常被使用的冬眠技术，还是远星航行的相对论效应，都有着时间的讨论。\n作品的缺点也比较的明显，包括女主在内的人物塑造不是很完美，在很多剧情中显得有些突兀；最后部分的盖娅意识比较的奇幻，反派的定位不清晰。当然这也有“时间教”这个概念的设定并不太容易让人理解，有不少哲学范畴的概念，后面部分让人看的比较“神道”。\n读完这篇作品之后，我才开始广泛阅读其他科幻作品，都是挑类型与三体这样硬科幻类似的。\n《刘慈欣获奖作品集》 读过一圈各式各样的作品之后，我还是觉得大刘作品有着别样的魅力，就像《流浪地球》评价中所说，中国拍出的科幻片，没有大英雄主义，而是民族、家国精神。民族、国家、人类的同心才更像灾难来临之际的世界，而不是一两位英雄拯救世界。\n 科幻世界里没有孤独的英雄。\n 除了几篇优秀的长篇小说，刘慈欣也有不少精彩的中篇、短片小说。流浪地球就是改编自刘慈欣中篇小说。这几篇给我的感受完全不比《地球往事》《球状闪电》差，我也很期待其中的一些作品能早日改编为电影。\n乡村教师\n我最希望改编为电影的作品，没有之一。（当然，今年的疯狂外星人这种喜剧片不算，甚至我个人觉得如果这就是对这部小说的改编，那么是对作品的浪费）。我的母亲是人民教师，是被称为光荣的职业，一年又一年地将知识传递给一代又一代学生，而乡村教师更是将自己的一切奉献给了乡下的一片片土地。乡村教师这篇作品将这种教育的意义拓展到了一个种族、一个行星、一个恒星系的层面。令人震撼的反转让人为之感动。可以说这篇作品是充满着教育意义的。\n戴上她的眼睛\n人类在不断的探索太空时，对自己脚下的土地一无所知，向地心进发，他们的故事不比远入深空的英雄们差。这篇作品以别样的角度展现了爱与分别。\n镜子\n我在小的时候想过，街上监控越来越多，是不是到未来我做的任何事情都会被拍下来？然后就开始担心藏起来的压岁钱会不会被发现的事情。而在经典物理中，没有混沌和概率，从宇宙诞生起的所有事情都是可以被精准计算的，当人类有了量子计算机的能力时，照出整个人类的“镜子”出现了。在此之下发生的所有事都是超出想象的，这样的世界，有趣而可怕。\n中国太阳\n论中国的家国情怀、民族意识，我认为中国太阳这部作品是体现的最明显的一部。科幻中，“时间不饶人”有了更深刻的含义，从地球向深空进发，消息的延迟越来越长，从几分钟到几小时再到一整天，这点类似新海诚的动漫《星之声》。中国太阳中的家国情怀，为了国家与民族的发展牺牲了自己陪伴家人的时间，这里的远方是时间与空间的远方。\n结尾 人类的想象力无穷无尽，科幻承载着人类的想象力，没有边际。科幻旅程不会就此结束，这些中文作品只是众多优秀科幻作品中非常小的一部分，如大海岸边的拾贝者，抬头望望，我们仍有无尽的未知。希望中国科幻发展不断、世界科幻发展不断，中华文明长流传、人类文明长发展。\nOne More Thing 作品里面有相当多有趣的句子，其中印象最深的就是这一句：\n 这个世界上，已经有人在宇宙漫步，星空是他们最后的坟墓。 相比之下，你那点考试升职亲子关系家庭问题就像屎壳郎找不到合适的粪球一样卑微。\n—— 球状闪电\n 消灭人类暴政，世界属于三体\n","id":36,"section":"post","summary":"前言 The vast ocean of stars can always carry our infinite imagination. 浩瀚的星空永远是我们无穷的想象力的归宿。 —— 刘慈欣，于克拉克想象力社会贡献奖颁奖仪式 正如 2006 年，刘慈欣作品《地球往事","tags":["Novel"],"title":"我所读过的一些刘慈欣的作品","uri":"https://chuanbohua.github.io/post/2019-02-11-%E6%88%91%E7%9A%84%E7%A7%91%E5%B9%BB%E6%97%85%E7%A8%8B/","year":"2019"},{"content":"过年在家出于兴趣阅读了一些金融相关的书籍，其中提到了很多数学原理，作为一个数学系的学生，我觉得非常的有趣，感受到了数学在真实生活中的应用。\n在这些内容中，有一部分涉及到了我在上一个学期在泛函分析中的一个定理：Hahn-Banach Theorem(English) 即 哈恩-巴拿赫定理(中文) 。这个定理被称为泛函分析三大定理之一，是泛函分析中极为重要的一个工具。在经济学中 Hahn-Banach Theorem 与市场经济的福利经济学第二定理有着密切的关系。\n在假期中想到这个定理，但是记不得定理的证明了，在 Google 上搜索了许多，但是关于这个定理的中文资料很少，而且大部分都是定理的应用。于是回到学校之后参考老师的讲义，将这个定理的证明记录下来。并不是说我自己对掌握这个定理的证明有多大的执念，只是想留下这一篇 Post 来提示自己好好学习数学，诸多学科都会要求一定的数学功底。\n正文 引理 设 $f$ 是赋范空间 $X$ 上的有界泛函，令 $\\varphi (x)=Ref(x)$ ，则 $\\varphi (x)$ 是 $X$ 上的有界线性泛函且\n$$f(x)=\\varphi (x)-i\\varphi (ix), || \\varphi ||\\le ||f||.$$\n证明 设 $f(x)=\\varphi (x)-i\\psi (ix)$ ，这里 $\\varphi (x), \\psi (x)$ 分别是 $f(x)$ 的实部与虚部。显然 $\\varphi , \\psi$ 是实线性泛函。\n$$\\varphi (ix)+i\\psi (ix)=f(ix)=if(x)=i\\varphi (x)-\\psi (x).$$\n故\n$$\\varphi (ix)=-\\psi (x)$$\n因此\n$$f(x)=\\varphi (x)-i\\varphi (ix).$$\n$$|\\varphi (x)|=|Ref(x)|\\le |f(x)|\\le ||f||||x||$. 故 $||\\varphi||\\le ||f||.$$\n定理 设 $M$ 是线性空间 $X$ 的子空间，$f$ 是 $M$ 上的线性泛函，$p$ 是 $X$ 上的半范数，对 $x\\in M$，有 $|f(x)|\\le p(x)$，则 $f$ 可以延拓为 $X$ 上的线性泛函 $F$ 且对任意 $x\\in X$，有 $|F(x)|\\le p(x)$.\n证明 若标量域 $\\mathbb{K}=\\mathbb{R}$ ，由于 $p$ 是次可加正齐次泛函，故存在 $F$ 是 $X$ 上的线性泛函，是 $f$ 的延拓.\n则\n$$-p(x)=-p(-x)\\le -F(-x)=F(x)\\le p(x)$. 故 $|F(x)|\\le p(x).$$\n若标量域 $\\mathbb{K}=\\mathbb{C}$ ，令 ${\\varphi}_0=Ref$ 是 $M$ 上的实线性泛函且 $||{\\varphi}_0||\\le |f(x)|\\le p(x)$. 故存在 ${\\varphi _0} $在 $X$ 上的延拓 $\\varphi$ ，使得 $\\varphi (x)\\le p(x)$.\n作 $F(x)=\\varphi (x)-i\\varphi (ix)$ ，则 $F$ 是 $f$ 在 $X$ 上的延拓且复线性泛函：\n$$F(ix)=\\varphi (ix)-i\\varphi (-x)=iF(x).$$\n由于存在单位复数 $\\beta$ ，使得 $|F(x)|=\\beta F(x)$. 故\n$$|F(x)|=\\beta F(x)=F(\\beta x)=\\varphi (\\beta x)\\le p(\\beta x)=|\\beta|p(x)=p(x).$$\n定理 设 $G$ 是赋范空间 $X$ 的线性子空间，$f$ 是 $G$ 上的有界线性泛函，则存在 $X$ 上的线性泛函 $F$ 是 $f$ 的延拓且 $||F||=||f||$.\n证明 记 $p(x)=||f||·||x||$ 是 $X$ 上的半范数且 $|f(x)|\\le p(x)$. 故存在 $X$ 上的线性泛函 $F$ 是 $f$ 的延拓，使得 $|F(x)|\\le p(x)=||f||·||x||$. 故 $||F||\\le ||f||$.\n显然\n$$||F||=sup_{x\\ne 0}\\frac{|F(x)|}{||x||}\\ge sup_{G\\ni x\\ne0}\\frac{|f(x)|}{||x||}=||f||.$$\n故 $||F||=||f||$.\n定理 设 $G$ 是赋范空间 $X$ 的线性子空间，$x_0 \\in X$，$d\\triangleq inf_{f\\in G}||x_0-y||\u0026gt;0$，则存在 $f\\in X^*$，使得对 $x\\in G$，有 $f(x)=0; f(x_0)=d; ||f||=1$.\n证明 显然 $x_0\\notin G$. 记 $G_1={\\alpha x_0 + x\\ |\\ x\\in G, \\alpha \\in \\mathbb{K}}$ 是线性子空间。\n作 $g:G_1\\ni \\alpha x_0 + x\\mapsto \\alpha d\\in \\mathbb{K}$ 是线性泛函。\n对 $x\\in G$，有 $g(x)=0; g(x_0)=d$;\n$$|g(\\alpha x_0+x)|=|\\alpha|d\\le |\\alpha|·||x_0-(-x)/\\alpha||=||\\alpha x_0+x||$$\n故\n$$||g||\\le 1$$\n$$d=g(x_0)=g(x_0-x)\\le ||g||||x_0-x||$$\n故\n$$d\\le ||g||inf_{x\\in G}||x_0-x||=||g||d$. 故 $1\\le ||g||$$\n因此 $||g||=1$.\n存在 $g$ 的延拓 $f\\in X^*$，使得 $||f||=||g||=1$.\n推论 设 $X$ 是赋范线性空间，$x_0\\in X, x_0 \\ne 0$，则存在 $f\\in X^*$，使得 $f(x_0)=||x_0||$ 且 $||f||=1$.\n推论 设 $X$ 是赋范线性空间，$x\\in X$，则 $||x||=sup_{f\\in X^*}\\frac{|f(x)|}{||f||}$.\n其他 泛函分析在经济学中的应用很广泛，更多内容可以参考知乎的问题 https://www.zhihu.com/question/31913447/answer/53821730。\n","id":37,"section":"post","summary":"过年在家出于兴趣阅读了一些金融相关的书籍，其中提到了很多数学原理，作为一个数学系的学生，我觉得非常的有趣，感受到了数学在真实生活中的应用。 在","tags":["Math"],"title":"Hahn-Banach 定理证明","uri":"https://chuanbohua.github.io/post/2019-02-10-hahn-banach-theorem-%E8%AF%81%E6%98%8E/","year":"2019"},{"content":"学校简介 南方科技大学（简称南科大）是深圳在中国高等教育改革发展的宏观背景下，创建的一所高起点、高定位的公办创新型大学，它肩负着为我国高等教育改革发挥先导和示范作用的使命，并致力于服务创新型国家建设和深圳创新型城市建设。\n南科大被确定为国家高等教育综合改革试验校。2012年4月，教育部同意建校，并赋予学校探索具有中国特色的现代大学制度、探索创新人才培养模式的重大使命。\n南科大借鉴世界一流理工科大学的学科设置和办学模式，以理、工、医科为主，兼具商科及特色人文社会学科，在本科、硕士、博士层次办学，在一系列新的学科方向上开展研究，使学校成为引领社会发展的思想库和新知识、新技术的源泉。\n南科大将发扬“敢闯敢试、求真务实、改革创新、追求卓越”的创校精神，突出“创知、创新、创业”（Research, Innovation and Entrepreneurship）的办学特色，努力服务创新型国家建设及深圳国际化现代化创新型城市建设，快速建设成为聚集一流师资、培养拔尖创新人才、创造国际一流学术成果并推动科技应用的国际化高水平研究型大学，为尽早实现创建世界一流研究型大学的宏伟目标打下坚实基础。\n郭雨蓉为现任党委书记，陈十一为现任校长。\n招聘信息 南方科技大学电子系化梦媛课题组诚聘电子、物理、材料相关背景成员，包括访问学生、研究助理、博士生、博后。待遇丰厚（访问学生、研究助理和博士生奖学金8-10万/年，博后33万/年），学术发展前景广阔（支持海内外交流，博士生海外名校联培），学术氛围浓厚。详细介绍如下，欢迎加入！\n南方科技大学电子系化梦媛课题组招聘研究助理及博士生\n南方科技大学电子系化梦媛课题组2019年招聘博士后\n","id":38,"section":"post","summary":"学校简介 南方科技大学（简称南科大）是深圳在中国高等教育改革发展的宏观背景下，创建的一所高起点、高定位的公办创新型大学，它肩负着为我国高等教育","tags":["Research"],"title":"南方科技大学化梦媛课题组招生","uri":"https://chuanbohua.github.io/post/2019-02-08-%E5%8D%97%E6%96%B9%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%8C%96%E6%A2%A6%E5%AA%9B%E8%AF%BE%E9%A2%98%E7%BB%84%E6%8B%9B%E7%94%9F/","year":"2019"},{"content":"2019 MCM/ICM 于 2019.1.26 开始、2019.1.29结束，四天四夜的建模比赛给我和我的队友都留下了很多回忆。在此次建模竞赛之前，我参加过一次 MCM/ICM、一次 CUMCM（国赛）、一次 CAMCM（小美赛），虽然没能拿到国家级的奖，但是几个省奖倒也可以交代这段时间的努力。\n想好好记录一次建模比赛的想法并不是这次才有的，但迫于时间与精力，前几次建模比赛都没能好好记录下来。不过我们的建模队伍走到现在，所有的经历都是我们宝贵的经验，体现在我们本次的竞赛中。\n由于我们学校没有专门的数学建模课程与培训，我们的建模知识、软件使用都来源于自学。、感谢我的队友们，感谢他们优秀的论文写作与精妙的模型提出，和优秀的数据处理与资料搜索能力，以及陪我一起坚持做完的耐心。\n这篇文章目的在于记录与反思四天四夜中我们的建模工作流程，以及其中遇到的一些有趣的问题，一些吐槽等等。\n这次参赛 MCM/ICM 可能是我建模生涯的最后一次，希望能留下来给未来的自己回忆用。也可以让一些想要参与建模的同学大致了解与参考这个比赛。\nDay 1 本次建模比赛，我们队伍选择在一起参与竞赛，而不是远程进行。这样方便讨论、交流。这是数学建模中数一数二的要素。根据去年失败的参赛经验，异地比赛交流非常的差，会导致队伍分工、模型讨论等等在内的很多方面受到影响，所以在一起参赛讨论是非常有必要的。\nMCM/ICM 于北京时间 6:00 am. 公开 Problems。毕竟是竞赛第一天，各建模队伍都是激情满满，前一天早早睡觉，为了今天可以准时起来，第一时间读到赛题。不过对于已经放假休息了一周左右的我们来说，突然有一天起床这么早还是挺困难的，最后依然赖床到了 7:00，经过了不少比赛，大家的心态都是挺放松的。\n建模遇到的第一个问题就是 Problems 下载不下来，MCM/ICM 官网服务器的质量是相当的差。许多队伍在下载问题包的过程中都遇到了崩溃。这时候就需要通过同学互相分享、群文件共享来解决。不过我们发现，如果可以翻墙的话，官网还是很流畅的，所以说估计网站爆炸也就是大陆地区。\n题目分析 奇怪的 Problem A\n早上 7:00 多，题目下载好之后，打开阅读完 Problem A，当时就觉得非常惊讶。Problem A 按照竞赛规则应该是连续性赛题。但是 2019 年的这道“养龙”题目，确是第一眼很难看出与连续性的关系，甚至我们一开始对 Problem A 的建模方向都没有任何思路。\n数学建模是对实际问题进行分析，转化为数学模型进行计算。但是这道题本身就分析不是现实中的生物，这样得架空考虑来分析问题。\nMCM/ICM 赛题对比 CUMCM，往往更加抽象。数据一般都比较难以寻找，通过不同的思路进行建模，结论变化较大。而 CUMCM 恰好相反。所以就有这么的说法：“美赛注重过程，国赛注重结论。”\n我们在 2018 MCM/ICM 中选择了 Problem B，该问题涉及的数据，例如各国近十年出生率、死亡率、移民人数等等。这些数据非常难以获取，对于一些国家来说，这些数据甚至是机密。这对我们的建模进度造成了不少的影响。\n我们在此之前阅读过 2016 MCM/ICM 的 Outstanding Paper，其中对埃博拉问题分析解决时，论文中直接表明了“我们找不到这些数据，但是如果能给我们准确的数据，我们的结果是可信的”。所以说 MCM/ICM 更注重队伍的分析过程与所建立的模型，应该并不太关心建模最后的结果。\nMCM/ICM 题目固有的部分就是写一封信或者一篇 Memo 给问题方。这部分的用意就是对所建模型的非专业性总结，不涉及公式、数据分析、绘制结果，将实际问题数学化分析后的结果返回现实，完成数学建模的现实意义。\n回归题目，题目中几乎一点数据都没有给出，反而没少提到《冰与火之歌》原作。有很多人吐槽如果没有读过原作这道题还不好下手，因为这道题的抽象程度已经不是现实的层面了。从最开始就要假设，考虑的方向也非常的广，不知道怎么下手。但是题目本身还是挺有趣的，队伍中的权游粉读完就想选择 A 题了。\n难以分析的 Problem B\n接着阅读 Problem B，大致了解是最短路径规划问题，但是涉及的方面又非常的多：有装箱问题、调度论、考虑不同无人机的性能还要分析地图。本题给出的地图比较难以分析，依照表格在地图中标出具体位置之后，还要将公路抽象出来。在第一天上午我们分析地图时就发现有一些问题在里面，后来 MCM/ICM 官方对题目进行了修正，不过在那时我们已经不再做 Problem B 了。\n至于不选择 Problem B 的原因，我们在 2018 CUMCM 中选择了 Problem B（小车调度分析），当时是我做的算法，编程写的挺累的，最后也没有拿到国家奖。所以在美赛中我们不再打算专攻算法调度问题。\n中规中矩的 Problem CDEF\n剩下的四道题就中规中矩了：\nProblem C 的数据分析量比去年更大，分析起来更困难一些。\nProblem D 从开始就遇到了问题，政府官方打不开，参赛队伍拿不到卢浮宫的建筑图，Problem D 的展开就有一些些麻烦。\nProblem E 的数据依然难以获取，是环境生态相关的跨学科题目，如果中国参赛的队伍都取用当地的数据，那么 MCM/ICM 官方还是能通过这次比赛收集到相当一部分的数据。\n比较有意思的就是 Problem F 了，金融相关的跨学科题目，涉及区块链，是当前现代计算金融的前沿问题之一了，\nProblem F 应该是现在不少业界大牛的科研课题，要是能比较好的解决了岂不是可以拿到诺贝尔奖。\n定题 经过讨论之后我们决定解决 Problem A，定题时间是在 Day 1 的下午。搜集相关资料的工作与此同时进行。题目是生态学的范畴，通过搜索相关论文，我们以 洛特卡－沃尔泰拉方程 为基础进行问题分析，开始建模。\n建模强调从简到繁，不断优化，我们将捕食、耗能、迁徙等等考虑在内，分成三个阶段建立我们的模型。Day 1 我们完成了基础模型的建立，并寻找数据准备使用 Matlab 实现该模型。\n基础模型本质是两个常微分方程组成的常微分方程组，我们使用四阶 Runge-Kutta 方法模拟计算该方程组，虽然精度不算高，不过在我们模型分析的情况下已经足够。算法也比较容易实现，精力主要放在数据控制，因为我们模型中涉及的很多数据都非常难量化，只能大致设定，而数据大小还比较难控制，就需要反复试验来确定参数大小。\n第一天做了一个框架，几个人就没有太多精力了，选择先洗漱睡觉，明天早早起床搞。\nDay 2 早上起来就着手出基础模型的图，反复调整程序与参数之后出了两张图。队伍建模同学开始着手第二模型的建立，第二模型我们大概花了半天的时间，在下午确定了第二模型。与此同时，我们的 Paper 也需要着手开始撰写。\n在我们的队伍配置中，模型建立与论文撰写是一位同学，这样有好处也有坏处，好处在于建模的同学在写论文时对自己建立的模型有比较好的了解，论文撰写可以很好的论述我们的模型。如果建模与论文不是由一个同学控制，就需要在模型理解的对接上消耗很多的精力。这种队伍配置的缺点也很明显，建模同学需要消耗大量的时间去完成论文撰写，以至于在模型分析上的时间比较的少，模型的优化可能会比较受局限。\n第二天是心态比较放松的一天，没有第一天定题的纠结，没有第三、四天时间的紧张。这一天就在第二模型建立、第二模型算法实现与论文起步中过去了。\nDay 2 一般参赛队伍都已经定完了题目（或者是改完了题目），我们在这一天经常去询问认识的其他参赛队伍，了解他们的分析与定题情况。根据我们询问的结果，本次 MCM/ICM 选择 Problem A 的队伍不在少数，或许是相比剩下的 Problems，Problem A 比较容易下手分析。\n大家一边吐槽今年的题目，一边缓慢的推进队伍的建模进度。建模竞赛对资料、思路共享很抵触，定性来说这种行为是学术造假的一种，而且透露思路对自己来说也不是有利的行为。所以大家在交流中都默默避开自己队伍的思考方向。\n经过去年的第一次建模竞赛之后，我们就认清了网传建模思路的事实，按照对当年 Outstanding Paper 的分析，没有一个文章与网传思路相符，反倒是有不少队伍因参考网传思路被判定为 Unsuccess。所以这些方法都不是最重要的，重要的是独到的想法与见解。\n到第二天中午，选择 Problem E 的队伍才纷纷拿到卢浮宫建筑图，而 Problem B 也刚刚修正。\nDay 3 第三天早上起来就确定了剩下时间的任务，由于题目要求中有要求两页写给马丁老爷子的信，所以我们第四天估计要花大部分时间在信的书写和 Summary 的完成，以及论文重检。\n由于写信也需要涉及一些方面的分析，该内容我们可能需要留在 Day 4 完成，所以在 Day 3 中我们要把第三模型建立完成、第三模型算法完成、论文主体部分应该写的差不多。由于我们第三模型内容量也比较大，所以 Day 3 的时间还是比较紧张的。\n第三模型中我们加细了分析，参数更加敏感，所以在解决第三模型的算法问题时花费了相当长的时间去控制参数。在 Day 2 与 Day 3 中第三位同学保持寻找数据、寻找参考文献，并不时帮忙出图。\n第三天是建模队伍比较疲惫的一天，应该是弃赛率比较高的一天（可能），至少我们队伍在第三天是比较疲乏的。一天时间内我们还是坚持完成了第三模型的建立与算法实现，但是参数控制与出图我留到了第四天的早上。\n论文的书写也遇到了瓶颈，Summary 的书写是比较难的，因为量确实比较大。参考了历届论文，Summary 都是将队伍的模型又重新叙述了一遍放在里面，达到大概一页的长度。\nDay 3 早早休息，准备明天最后的冲刺。\nDay 4 早上起来，我就开始着手第三模型的参数处理与图形导出，建模同学专心撰写 Summary，另一位同学整理 References 并协助我出图。大致不到中午我们的论文主体部分完成，出图完毕。剩下的就是论文的检修与最后信的书写。对于今年的题目，我们还需要对信专门分析一些内容，这些也会减慢我们写信的时间。\n基于对往届 Outstanding Paper 的研究，MCM/ICM 的信件或者备忘录写作部分对文章的评定有相当大的影响，所以这部分必须要费心好好写，我们采取先撰写中文再翻译的方法使这封信更有逻辑、更有层次。但是这种方法会占用大量的时间，我们在这一天从下午到晚上 9:00 左右由三个人协力才完成这部分的书写。\n至此，其实我们的建模已经完成的差不多了，相比很多优秀队伍争分夺秒对时间的把控，我们的队伍显得相对清闲。这当然取决于模型的精细程度，我们在本次 MCM/ICM 中建立的模型比较粗糙，鉴于题目的特殊性，我们认为至此已经尚可。\n在之后的两个小时内我们编译 Paper，查找错误，做出最后的校正。并于 23:00 左右完成了 Solution 的提交。确定提交无误之后我们 1:00 左右正式结束我们本次 MCM/ICM。\n结尾 这次比赛给我们带来的感受不同于 2018 年 CUMCM 的紧张、与时间赛跑，有按部就班的感受。对我们结果的评判就交给评委组来完成，我们对本次 MCM/ICM 的参与是比较满意的。不论是在建模过程中的成长还是队员间羁绊的加深，都是本次参赛我们宝贵的收获。建模就是解决实际问题的过程，不论简单复杂，这些建模的经历都让我对解决问题有了不同角度的看法，或许这就是数模思想吧。\n","id":39,"section":"post","summary":"2019 MCM/ICM 于 2019.1.26 开始、2019.1.29结束，四天四夜的建模比赛给我和我的队友都留下了很多回忆。在此次建模竞赛之前，我参加过一次 MCM/ICM、一次","tags":["Math"],"title":"2019 MCM/ICM 总结","uri":"https://chuanbohua.github.io/post/2019-01-29-2019-mcmicm-summary/","year":"2019"},{"content":" 2018 年就这样过去了，在这一年里，发生了很多的事情。有值得纪念的，有不愿回想的，有些在我十几年的成长中可以称为里程碑，剩下的很多是简单、重复又无趣的日常。\n 有家人在背后，朋友在身边，我的 2018 年过非常充实，一年中各式各样的光景，都值得去好好记录与纪念。我想用几首歌来回忆和纪念这过去的一年。这些歌曲都取自我在这一年中的一些片段时期、经常重复的、当时最喜欢的歌曲。即使过去了那段时期，每当听到这些歌还是能感同当时的身受，就像回忆刻录在歌曲中一样。\n 这里面的曲子很多是 niconico 上 V 家曲，这一年我对 N 站唱见很感兴趣，听了很多相关的歌曲，关注了很多 N 站唱见。另外也有流行音乐和 Anime 相关曲目。\n 由于我个人文笔相当有限，很难去比较好的描述好听的感受，但是，既然是音乐，如果你感兴趣的话，不妨用三五分钟尝试听一听。\nGlow  ちぎれてく雲間から 溢れ出す涙\n自破碎断裂的云层之间 漫溢而出的泪水\n少しずつ滲む君にぎゅっとしがみついた\n将渐渐变得朦胧的你 紧紧抓住抱在怀中\n—— Glow\n  Glow 是 2010 年由 keeno 上传至 Niconico 的初音未来演唱作品：Glow by keeno in Niconico，其作品优秀程度可以由其再生数和再次创作数可知。\n 我最喜欢的版本是 H△G 的版本。\n H△G 是我 18 年听的最多的乐队，主唱 Chiho 声线有元气、充满积极向上的感觉。H△G 是可以把把 irony 这样失意的歌唱得充满希望的这样一个乐队。\n Glow 这首歌在 H△G 这里充满着“高扬感”，正契合歌名和这个乐队的风格；这首歌在鹿乃那边变得舒缓，吉他版本温润动人。希望每个人都可以闪耀。\nインタビュア  自分勝手に諦めては\n自己任意地就放弃\n独りよがりで傷ついてた\n自以为是地受著伤\n年を取ってやっと気付きました\n年纪渐长终於发现\nねえ まだ\n呐 现在还\nまだ間に合いますか\n现在还来得及吗？\n—— インタビュア\n  インタビュア 这首歌的英语是 Interview。这首歌最初在 2011 年由 クワガタP 投稿于 niconico，之后被广泛翻唱。\n 歌曲的歌词很有意思，喜欢的电影、喜欢的食物、喜欢的话语，最后是喜欢的人，可爱的歌词下实际是个失恋的故事。不断地试探喜欢的人的爱好，不断的将自己与她做比较，不断的思考两人的关系。然后自顾自的受伤、自顾自的放弃。直到年纪渐长，自己看清这些事情时候已经与喜欢的人错开了很多。\n V 家的很多曲子喜欢在歌曲的最后部分设置一段额外的副歌，インタビュア 这首歌与上面的 Glow 在这方面是一样的。\n渋谷川  君は知ってるかい？ 渋谷川って・・・\n你也曾听说过吧？涩谷川这条河\n名前を聞いても ピンと来ないだろう（ピンと来ないだろう\n就算听过这个名字，也一时想不起来吧？\n忘れられたように 都会の隅で\n好像早就被遗忘在城市一隅\nそれでも確かに せせらぎ続ける\n可它如今仍然涓涓细流\nまるで僕の 君への想い\n就像我对你的思恋\n—— 渋谷川\n  **《渋谷川》**是由櫸坂46于2017年发行的抹黑純真专辑中的曲目。\n 这首歌在櫸坂46的作品中并不是最高人气的歌，但我觉得这首歌的旋律格外的抓耳，也正是旋律让我喜欢上了这首歌。\n 友情与爱情的界限是被讨论的很多的问题，告白的勇气是用在承担失败后连朋友也无法做的后果上的，又随着时间流逝，在一起的时间平平淡淡的过去，最后毕业、分散、失去联系，只希望从此之后不论何时，我们的关系能像渋谷川一样如娟娟流水一般永不断绝。\n 这是一首值得纪念的歌曲，对我个人来说有着非同寻常的意义。\nLemon  《Lemon》为继2017年6月的《Peace Sign》后，米津玄师的第八张单曲，是TBS系列电视剧《非自然死亡》的主题曲。该曲目在 Youtube 获得了 297M 的播放量，米津玄师也以词曲参加了 2019 年《红白歌合战》，可以说是绝对非凡的一首曲子。即使非日语歌曲圈的朋友也有不少因其名气听过了 Lemon。我在 18 年也购买了 Lemon 的 CD。（只可惜买了普通版的，现在后悔不如一口气买限定盘）\n Lemon 的歌词大概描述的是对已逝的人的怀念，其 MV 有着不少含义，在网上有不少分析。在 2019 红白歌合战 中，米津玄师来到故乡，饱含深情演唱了 Lemon，以怀念逝去的祖父（待确认）。\n 因其名气，有众多的翻唱版本，其中也有不少非常出彩的，比如泠鸢、柚子茶等等。\n 听到这首歌还是因为几年看了《非自然死亡》这部日剧，很优秀的一部日剧。生与死往往是最容易动人的，其讨论的内容也非常有针对性的，比如校园欺凌。虽然最后两话为了收尾略有夸张成分在内，但整体上是一部非常令人感动的日剧。\n夜明けと蛍  明け方の夢 浮かぶ月が見えた空\n於拂晓之梦中 能看见那片浮月之空\n朝が来ないままで息が出来たなら\n若然能永不迎来清晨 如此呼吸生存下去的话\n遠い遠い夏の向こうへ\n那就往遥远 遥远的 夏日的彼方去\n—— 夜明けと蛍\n  夜明けと蛍这首歌由ナブナ作词作曲于 2014 年并投稿至 niconico，在 2015 年由鹿乃翻唱（具体时间不是很确定）。\n 非常有夏天感觉的一首歌，事实上我对这首歌原曲感触不大，但是鹿乃的翻唱版本很特别，将原本热烈夏风的一首歌，通过吉他弹唱，变得非常舒缓，初听就有惊艳的感觉。配合鹿乃接近本声的声线，有与原曲完全不是一个风格的感受。\n 鹿乃的夜明けと蛍收录在 C94 的 mini 专辑 two 中，自己没有买到 CD（Amazon 老是没货），但是我非常想得到扫盘资源。目前即使搜遍了 Google 也没有拿到，十分可惜。\n2020.01.12 Update - 在 Hong Kong 的信和中心买到了鹿乃的 mini 专辑 《one》和《two》，并且恰逢她的《three》发售，也一起买回来了。\nGod knows\u0026hellip;  私ついていくよ\n我正追随而来\nどんな辛い世界の闇の中でさえ\n无论在如何艰苦世界的黑暗中\nきっとあなたは輝いて\n你也定能 光辉耀目\n超える未来の果て\n超越未来的尽头\n弱さ故に魂こわされぬように\n为了不使弱小的灵魂破碎纷飞\nmy way 重なるよ\n我的路 于前方交重\nいまふたりに God bless\u0026hellip;\n如今 神定将佑护我们二人\n—— God knows\u0026hellip;\n  《God knows\u0026hellip;》是根据凉宫春日系列轻小说改编的动画《凉宫春日的忧郁》2009版的第26集或2006版的第12集《Live Alive》中的插曲，由平野绫（即动画中演唱此曲的凉宫春日的配音）演唱。\n 该曲目非常惊艳的一部分是电吉他，全曲有三段电吉他 solo，个人没学过电吉他，不好评判难度如何，但是其乐曲效果是非常的好。人声部分对唱功有相当的要求，平野绫的表现还是相当不错的。\n 最早接触到这首曲子并不是通过动漫，实际上至今我并没看过凉宫春日。第一次听到这个曲目是在 BanG Dream! 的游戏中的翻唱曲目中，在此版本中，电吉他部分被进一步加强了，配合音游的节奏属性，很快喜欢上了这首歌。\n 从对乐队了解开始，个人就对电吉他相当喜欢，类似的我非常喜欢的电吉他 solo 在《韶音赋》这首歌中。\n 歌词部分，这首歌有着相当积极的感情，refrain 部分更加明显的体现，相当燃的一首曲子，走路无聊了会喜欢听一些节奏比较快的歌。\nアンノドミニ  絶望に僕らは導かれて\n我们受到了绝望的指引\n魂の在り処で\n终于得以在\n巡り会えたんだ\n灵魂之所在相逢\n絶望が僕らを呼び合うから\n我们因绝望而呼唤彼此\n始まりの場所へ\n前往初始的地方\n—— アンノドミニ\n  《アンノドミニ》是 Anime 《魔法使いの嫁》中的插曲，由北條響演唱。\n 《魔法使いの嫁》原作为漫画，其中对魔法的考究与描述十分的吸引人，创建了一个以英国周边为背景的、细腻而有趣的魔法生物、精灵、人类共生的世界。阅读过漫画或者看过动漫的朋友在读到这首歌的歌词时，会与作品中的剧情产生共鸣。在我阅读原作时，觉得在其故事之下有悲伤的感觉，这首歌将这种感觉描述的非常到位。魔法世界生死已经无法自己控制，就将感情寄托于灵魂。\n 北條響的声线非常的好，唱功也相当的不错，只可惜她的曲子不是很多，期待她未来的活动。\n晴天前夜  谁にも言えないような 运命に立ち向かおぜ\n与那不可与外人所道的命运 努力战斗吧\n仆らが望んだ仆らの先に それはあるだろう けれど\n在我们理想中的自己的前方 肯定也存在着那个吧 只可惜\n谁もが欲しがるような 世界中に夸（ほこ）れるような\n任何人都在渴求着的 能够向全世界夸耀的那个\nひとりひとつの自由には まだ 名前すらないんだ\n每个人都能获得的自由 尚且 连名字都没有\n—— 晴天前夜\n  《晴天前夜》 由 はりー 于2017年1月11日投稿，计划收录于2017年2月22日发售的《ウォルピスカーター 2nd Album》，在周刊VOCALOIDとUTAUランキング #485・427中获得第八位的好成绩。\n 提到这首歌就要好好说一下 ウォルピスカータ，也称社长。最早我通过《声》这首歌认识到的社长，其声线非常多变，在《声》这首歌中甚至男声女声难辨。在听过社长其他的一些作品之后发现其音域相当的高，发音细腻。唱功的话，个人感觉有些不稳定，但作品整体表现力还是非常优秀的，是 niconico 有名的男唱见。\n 这首歌相当的“抑扬顿挫”，曲调、节奏舒缓紧凑多变。对唱功的要求相当的高，社长作为该曲原唱，将歌曲感情抒发的非常到位。歌词同前面的一些曲子，消极的歌词中透露着积极的感受，正如歌曲名，晴天前最后的风暴夜晚。\n 在这首歌之外依然推荐社长的其他翻唱作品，《アスノヨゾラ哨戒班》《声》《時ノ雨、最終戦争》都是社长非常有特色的曲目。\n 最后 虽然不知道自己未来还会听几年歌，但是我所曾经喜欢的歌都会因为那些时间所发生的事情变得特别，一直存在我的歌单里面。\n对于 19 年，没有太多可说的，只是期盼能走的更远，来日可期吧。\n","id":40,"section":"post","summary":"2018 年就这样过去了，在这一年里，发生了很多的事情。有值得纪念的，有不愿回想的，有些在我十几年的成长中可以称为里程碑，剩下的很多是简单、重复又无","tags":["Music","Life"],"title":"2018 年我听的一些歌","uri":"https://chuanbohua.github.io/post/2019-01-25-2018-%E5%B9%B4%E6%88%91%E5%96%9C%E6%AC%A2%E7%9A%84%E6%AD%8C/","year":"2019"},{"content":"Probability Theory and Mathematical Statistics is an interesting subject, compared with other mathematics courses, it is not so tough. It is widely used in various aspects, include machine learning, information theory, financial mathematics, etc. I reference a sentence from Wiki to describe this subject:\n Probability theory is the branch of mathematics concerned with probability. Although there are several different probability interpretations, probability theory treats the concept in a rigorous mathematical manner by expressing it through a set of axioms.\n The overall structure of probability theory can be described as following:\n Basic knowledge, include the definition of probability space, expectation, and variance; Various probability distributions include the discrete distributions and continuous distributions. For example:  Binomial distribution Poisson distribution Hypergeometric distribution Geometric distribution Normal distribution Index distribution Gamma distribution Beta distribution   Description of several feature parameters, which play an important role in analyzing. For example:  Coefficient of variation Quantile Median Skewness coefficient Kurtosis coefficient   Convergence by probability \u0026amp; Convergence by distribution and theories behind these, like Law of Large Numbers.  Then the overall structure of mathematical statistic can be described as following:\n Basic definitions of mathematical statistic, include overall samples, individual sample. The three main Sampling distributions:  $X^2$ distribution; F distribution; T distribution;   Methods about Parameter Estimation, Interval estimation, Hypothetical test. This is the toughest and most important contents in this subject.  Here are two notes, and one is the overall review of this course which lists the main contents and points. Another is the practice of the questions in the textbook.\nI believe if you want to master this subject better, it would be necessary and an effective way to do more practices. Actually, both these two notes are somewhat simple, so, please reference the textbook and find more information. These notes would be useful during your review period.\nSo, here they are.\n Probility Analyse Chapter 1.pdf\n Probility Analyse Chapter 2.pdf\n Probility Analyse Chapter 3.pdf\n Probility Analyse Chapter 4.pdf\n Probility Analyse Note.pdf\n Probability Analysis Summary.pdf\n Probability Analysis Test.pdf\n ","id":41,"section":"post","summary":"Probability Theory and Mathematical Statistics is an interesting subject, compared with other mathematics courses, it is not so tough. It is widely used in various aspects, include machine learning, information theory, financial mathematics, etc. I reference a sentence from Wiki to describe this subject: Probability theory is the branch of mathematics concerned with probability. Although there are several different probability interpretations, probability theory treats the concept in a rigorous mathematical","tags":["Math"],"title":"概率论笔记","uri":"https://chuanbohua.github.io/post/2019-07-19-%E6%A6%82%E7%8E%87%E8%AE%BA%E7%AC%94%E8%AE%B0/","year":"2018"},{"content":"Functional Analysis Notes is somewhat similar to Topology. Actually, topology can be seen as the deeper researching about various space. Functional analysis mainly focuses on these types of space: Metric space, Banach space, and Hilbert space.\nThe theories and methods are similar to ones in topology, so if you can master this course, you may perform excellently in topology.\nSimilar to topology, here are two notes, and one focuses on the definitions and another focuses on the theories in functional analysis. I believe these notes can help me remember them effectively and, actually, they work. So, just try to understand such theories and definitions and then remember them, practice them.\n Functional Analysis Definition.pdf\n FunctionalAnalysis Proof.pdf\n Functional Analysis Lecture.pdf\n ","id":42,"section":"post","summary":"Functional Analysis Notes is somewhat similar to Topology. Actually, topology can be seen as the deeper researching about various space. Functional analysis mainly focuses on these types of space: Metric space, Banach space, and Hilbert space. The theories and methods are similar to ones in topology, so if you can master this course, you may perform excellently in topology. Similar to topology, here are two notes, and one focuses on","tags":["Math"],"title":"泛函分析笔记","uri":"https://chuanbohua.github.io/post/2019-06-22-%E6%B3%9B%E5%87%BD%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","year":"2018"},{"content":"插值法 在数值算例中有广泛的应用。\n 插值的作法，很直觀地來講，就是，(1) 先從表列值來獲得函數 f(x)，再 (2) 用函數 f(x) 求出我們所要的任何特定 x 之 f(x) 函數值。然而，比較精密且系統化的數值方法卻不是用這兩個步驟來進行插值，原因是前述兩階段方法對於插值的精密度並沒有控制，效率較差，也比較會有進位誤差。一般在做插值法，是從欲插值點 x 附近的幾個表列點 xi 開始，建立插值函數 f(x)，並且也試著網羅更多表列點來插值，看隨著項數變多誤差會不會變小，如此找出最適合的函數 f(x)。\n Reference from Interpolation and Extrapolation，这是一个对插值法探讨的比较好的网站，也提供了相对的程式供使用，非常推荐参考。\n函数逼近 在很多方面与插值法比较类似，也具有非常广泛的用处，尤其在近些年的前沿问题深度学习中有着重要的作用：什么是深度学习？（从函数逼近论的角度来理解） - 中国科学技术大学。函数逼近我也会在深度学习中进行更多的讨论。\n本文结构：\n 插值法  Lagrange 插值法 Newton 插值法 Hermite 插值法 三次样条插值    在这篇 post 中，将不会对各种插值法的原理进行太多的讨论，只是将相关资料与 Matlab Code 附于此处，供读者参考。能力有限，可能会有一些错误在里面，希望可以通过留言告知，也请多多理解。\n若公式无法正常加载，请刷新重试。\n正文 Lagrange 插值法 Lagrange 插值法 - Wiki\nLagrange 插值多项式（n = 2 时）： $$ p_2(x)=y_0 \\times \\frac{(x-x_1) \\times (x - x_2)}{(x_0 - x_1) \\times (x_0-x_2)}+y_1 \\times \\frac{(x-x_0) \\times (x - x_2)}{(x_0 - x_0) \\times (x_0-x_2)}+y_2 \\times \\frac{(x-x_0) \\times (x - x_1)}{(x_0 - x_0) \\times (x_0-x_1)} $$ 余项（次数为 n 时）：\n$$ f(x)=p_n(x)+\\frac{f^{(n+1)}(\\xi)}{(n+1)!}\\times w_{n+1}(x), a\u0026lt;\\xi \u0026lt;b. $$ 其中：\n$$ w_{n+1}(x)=(x-x_0)(x-x_1)\\cdots (x-x_n) $$ Matlab 实现：\nfunction [y] = Lagrange (x0, y0) % Lagrange 插值法 % input: (x0, y0): 插值点 % output: y: Lagrange 插值函数 n = length (x0); syms x; s = 0.0; for k = 1:n p = 1.0; for j = 1:n if j ~= k p = p * (x - x0(j)) / (x0(k) - x0(j)); end % if end % for s = p * y0(k) + s; end % for y = s; end % function  本函数直接返回 Lagrange 插值多项式，亦有其他输出方法，也可将误差考虑在内，参考 拉格朗日(lagrange)插值及其MATLAB程序。\nNewton 插值法 牛顿多项式 - Wiki\n均差：\n 一阶均差：$f[x_i,x_j]=\\frac{f(x_j)-f(x_i)}{x_j-x_i}$ 二阶均差：$f[x_i,x_j,x_k]=\\frac{f[x_j,x_k]-f[x_i,x_j]}{x_k-x_i}$ n 阶均差：$f[x_0,x_1,\u0026hellip;,x_n]=\\frac{f[x_1,x_2,\u0026hellip;,x_n]-f[x_0,x_1,\u0026hellip;,x_{n-1}]}{x_n-x_0}$  Newton 插值多项式：\n$$ f(x)=N_n(x)+f[x,x_0,x_1,\u0026hellip;,x_n]w_{n+1}(x) $$ 其中：\n$$ N_n(x)=f(x_0)+f[x_0,x_1]w_1(x)+\\dots+f[x_0,x_1,\u0026hellip;,x_n]w_n(x) $$\n  输入：数 $x_0,x_1,\u0026hellip;,x_n,x$；函数值 $f(x_0),f(x_1),\u0026hellip;,f(x_n)$ 作为 Q 的第一列元素 $Q_{0,0},Q_{1,0},\u0026hellip;,Q_{n,0}$\n  输出：$f(x)$ 的近似值 $b_0$\n  Matlab 实现：\nfunction [ y ] = Newton_Insert( x0, y0 ) % Newton 均差插值法 % input: (x0, y0): 插值点 % output: y: f(x) 近似值 n = length(x0); for i = 0 : n Q(i, 0) = y0(i); end % for for i = 1 : n for j = 1 : i Q(i, j) = (Q(i, j - 1) - Q(i - 1, j - 1)) / (x(i) - x(i - j)); end % for end % for b(n) = Q(n, n); for k = n : -1 : 1 b(k - 1) = Q(k - 1, k - 1) + b(k) * (x - x(k - 1)); end % for y = b(0); end % function  Hermit 插值法 Hermit 插值法 - Wiki\n前面介绍的插值公式，都只要求插值多项式在插值基点处取给定的函数值，在许多实际问题中，不仅要求插值多项式与函数在各插值基点值相等，还需要在相应插值基点处有若干阶导数相等，这类问题称为 Hermite 插值问题。\n在这里只考虑在各基点均有一阶导数的 Hermite 插值问题。\nfunction H = Hermite( x0, y0, z0 ) % Hermit 插值法 % input: (x0, y0): 插值点; (x0, z0): 对应点一阶导 % output: H: f(x) 近似值 n=length(x0); syms x; s=0.0; for k=1:n p=1; for j=1:n if j~=k p=(p*(x-x0(j)))/(x0(k)-x0(j)); end % if end % for b(k)=p*p*(x-x0(k)); q=0; for j=1:n if j~=k q=q+1/(x0(k)-x0(j)); end %if end % for a(k)=p*p*(1-(2*(x-x0(k))*q)); s=a(k)*y0(k)+b(k)*z0(k)+s; end % for H=s; end % function  三次样条插值法 样条插值 - Wiki\n样条插值是分段多项式插值的优化，其中有分段线性插值、分段抛物线插值等多种插值方式。为使分段插值函数在插值区间的子区间的端点连续而使用条样插值的方法。\n函数：\nMathJax BUG\n\u0026gt; \\begin{equation} \u0026gt; S(x)= \u0026gt; \\left\\{ \u0026gt; \\begin{array}{lr} \u0026gt; S_1(x), x\\in [x_1,x_2],\u0026amp; \\\\ \u0026gt; ... \u0026amp; \\\\ \u0026gt; S_i(x), x\\in [x_i,x_{i+1}],\u0026amp; \\\\ \u0026gt; ... \u0026amp; \\\\ \u0026gt; S_n(x), x\\in [x_n,x_{n+1}]\u0026amp; \\\\ \u0026gt; \\end{array} \u0026gt; \\right. \u0026gt; \\end{equation}  $$ a=x_1\u0026lt;x_2\u0026lt;\u0026hellip;\u0026lt;x_{n+1}=b $$\n是二次连续可微的，右方函数都是不高于三次的多项式或者零多项式，且满足条件：\n$$ S(x_j)=f(x_j),j=1,\u0026hellip;,n+1. $$ 则称 S(x) 为函数 f(x) 的三次条样插值函数。\n 输入：$x_1,\u0026hellip;,x_{n+1};f_1=f(x_1),\u0026hellip;,f_{n+1}(x_{n+1});f_{p_1}=f\u0026rsquo;(x_1),f_{p_2}=f\u0026rsquo;(x_{n+1}).$ 输出：$S_i(x)=\\sum\\nolimits_{i=1}^{4} A_{k,i}(x-x_i)^{k-1} = 0$ 的系数 $A_{1,i},A_{2,i},A_{3,i},A_{4,i},i=1,\u0026hellip;,n$  Matlab 实现：\nfunction [ A ] = Cubic_Spline_Interpolation( x0, y0, fp1, fp2 ) % 完备的三次条样插值法 % input: (x0, y0): 插值点; fp1 = f'(x1); fp2 = f'(x_n+1); % output: 详见上述描述 n = length(x0) - 1; for i = 1 : n h(i) = x0(i + 1) - x(i); b(i) = (y0(i + 1) - y0(i)) / h(i); end % for d(1) = b(1) - fp1; d(n + 1) = fp2 - b(n); for i = 2 : n d(i) = b(i) - b(i - 1); end % for % ———————————————————— %用三对角算法求上述方程组的解 % ———————————————————— for i = 1 : n A(1, i) = y0(i); A(2, i) = b(i) - (h(i) / 6) * (m(i + 1) + 2 * m(i)); A(3, i) = m(i) / 2; A(4, i) = (m(i + 1) - m(i)) / (6 * h(i)); end % for end % function  结尾 插值法是函数逼近问题的一种解决方案，函数逼近更多的在于理论方面的说明，如最佳一致逼近、最佳平方逼近等等，这里我也没有尝试写一些比较通用的算法与 Code 供使用（Matlab 工具包中提供了非常多的函数逼近工具可供使用）。在后面了解深度学习的过程中，函数逼近问题肯定是无法被避免的。\n","id":43,"section":"post","summary":"插值法 在数值算例中有广泛的应用。 插值的作法，很直觀地來講，就是，(1) 先從表列值來獲得函數 f(x)，再 (2) 用函數 f(x) 求出我們所要的任何特定 x 之 f(x)","tags":["Matlab","Math"],"title":"Matlab 实现几种常用插值法","uri":"https://chuanbohua.github.io/post/2018-11-02-matlab-%E5%AE%9E%E7%8E%B0%E6%8F%92%E5%80%BC%E6%B3%95%E4%B8%8E%E5%87%BD%E6%95%B0%E9%80%BC%E8%BF%91/","year":"2018"},{"content":"问题 求解线性方程组\n$$ \\left{ \\begin{array}{c} a_{11}x_1+a_{12}x_2+\u0026hellip;+a_{1n}x_n=b_1 \\ a_{21}x_1+a_{22}x_2+\u0026hellip;+a_{2n}x_n=b_2 \\\n\u0026hellip; \\ a_{n1}x_1+a_{n2}x_2+\u0026hellip;+a_{nn}x_n=b_n \\end{array} \\right. $$\n其中方程组系数 $a_{ij}(i,j=1,2,3,\u0026hellip;,n)$ 与右端项 $b_i(i=1,2,3,\u0026hellip;,n)$ 均为实数，且 $b_1,b_2,\u0026hellip;,b_n$ 不全为零，上述方程组简记为 $$ Ax=b $$ 其中 $$ A=\\begin{bmatrix} a_{11} \u0026amp; a_{12} \u0026amp; \u0026hellip; \u0026amp; a_{1n} \\ a_{21} \u0026amp; a_{22} \u0026amp; \u0026hellip; \u0026amp; a_{2n} \\ \u0026hellip;\u0026amp;\u0026hellip;\u0026amp;\u0026hellip;\u0026amp;\u0026hellip; \\ a_{n1} \u0026amp; a_{n2} \u0026amp; \u0026hellip; \u0026amp; a_{nn} \\ \\end{bmatrix}, x=\\begin{bmatrix} x_{1}\\ x_{2}\\ \u0026hellip; \\ x_{n}\\ \\end{bmatrix}, b=\\begin{bmatrix} b_{1}\\ b_{2}\\ \u0026hellip; \\ b_{n}\\ \\end{bmatrix}. $$ 解线性方程组直接法（也称精确解法）的定义为：\n 若计算过程中没有舍入误差，则经过有限次的算术运算可以求得方程组的准确解的方法。\n 其主要有两类方法：\n Gauss 消去法  Gauss 消去法 Gauss 列主元消去法 Gauss 按比例列主元消去法 Gauss-Jordan 消去法   直接三角分解法  Corut 方法 $L^TDL$ 分解 追赶法    本篇只用 Matlab 实现上述算法，不涉及算法的介绍与证明，如果对证明与原理比较感兴趣，详情参考：\n Wiki - Gaussian elimination Wiki - LU decomposition  并且事实上这些算法在 Matlab 中都有既成的函数或者工具包，虽然 CS 里面有一句话：“如果有现成的轮子那么绝对不自己造。”很有道理，但是对于算法的理解还是需要亲自尝试，这样才能比较好的理解。\n在最初编写这些算法时，我的 Matlab 代码风格还没有确定，以至相比于后续算法的源码，这些源码会显得比较的不规范，我会进行一部分的修正，但是毕竟时间比较久，修正程度可能比较有限，如果有一些问题，欢迎联系。\n正文 Gauss 消去法 Gauss 消去法 function x = Gaussian_elimination( A, b ) % 高斯消去法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A, 1); % 矩阵 A 阶数 if size(A,1)~=size(A,2) || size(A,1)~=n error('Matrix does not match') end for k = 1 : n - 1 if A(k, k) == 0 % 检测 A 是否为正定矩阵 for i = k + 1 : n if A(i, k) ~= 0 for j = k : n t = A(k, j); A(k, j) = A(i, j); A(i, j) = t; end % for else error('A is singular.'); end % if end % for end % if for i = k + 1 : n l(i, k) = A(i, k) / A(k, k); for j = k : n A(i, j) = A(i, j) - l(i, k) * A(k, j); end % for b(i) = b(i) - A(i, k) * b(k); end % for end % for x(n) = b(n) / A(n, n); for k = n - 1 : -1 : 1 sum = 0; for i = k + 1 : n sum = sum + A(k, j) * x(j); end % for x(k) = (b(k) - sum) / A(k, k); end % for end % function  Gauss 消去法就非常的基础了，不过是平时我们解方程的固有过程，用来练习一下 Matlab 基本语言的使用。\n当初在做这些课题的时候对代码的健壮性考虑的较少，主要是来理解算法的。如果有相应的需求，需要进一步的修改。\nGauss 列主元消去法 function x = Gaussian_principal_element_elimination( A, b ) % 高斯列主元消去法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A, 1); % 矩阵 A 阶数 if size(A, 1) ~= size(A, 2) || size(A, 1) ~= n error('Matrix does not match') end % if for i = 1 : n [ap, p] = max(abs(A(i : n, i))); p = p + i - 1; if ap == 0 error('divide by zero!') end % if if p \u0026gt; i t = A(i, :); A(i, :) = A(p, :); A(p, :) = t; t = b(i); b(i) = b(p); b(p) = t; end % if %消元计算 m = A(i+1:n, i) ./ A(i, i); A(i+1:n, i+1:n) = A(i+1:n, i+1:n) - m * A(i, i+1:n); b(i+1:n) = b(i+1:n) - m * b(i); A(i+1:n, i) = zeros(n-i, 1); end % for x = zeros(n, 1); x(n) = b(n) / A(n, n); for i = (n - 1) : -1 : 1 x(i) = (b(i) - A(i, i+1:n) * x(i+1:n)) / A(i, i); end % for end % function  Gauss 按比例列主元消去法 function x = Gauss_proportional_column_principal_elimination( A, b ) % 高斯消去法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A, 1); % 矩阵 A 阶数 if size(A, 1) ~= size(A, 2) || size(A, 1) ~= n error('Matrix does not match') end A_max = max(A, [], 2); % A 行最大值 for i = 1 : n s(i) = A_max(i); if s(i) == 0 error('A is singular.') end % if p(i) = i; end % for for k = 1 : n - 1 %%%%%%%%%% 待完成 r = 1; % 解 abs(a(p(r), k)) / s(p(r)) = max_k\u0026lt;=1\u0026lt;=n (abs(a(p(i), k)) / s(p(i)); %%%%%%%%%% if A(p(r), k) == 0 error('A is singular.') end % if if k ~= r temp = p(r); p(k) = p(r); p(r) = temp; end % if for i = k + 1 : n A(p(i), k) = A(p(i), k) / A(p(k), k); for j = k + 1 : n A(p(i), j) = A(p(i), j) - A(p(i), k) * A(p(i), j); end % for end % for end % for b2(p(2)) = b(P(1)); for i = 2 : n sum = 0; for j = 1 : i - 1 sum = sum + A(p(i), j) * b2(p(j)); end % for b2(p(i)) = b(p(i)) - sum; end % for if A(p(n), n) == 0 error('A is singular.') end % if x(n) = b2(p(n)) / A(p(n), n); for i = n - 1 : -1 : 1 sum = 0; for j = i + 1 : n sum = sum + a(p(i), j) * x(j); end % for x(i) = (b2(p(i)) - sum) / a(p(i), i); end % for end % function  Gauss-Jordan 消去法 Gauss-Jordan 消去法就是在上述任一方法之中，消去步骤中对主元行外的所有行进行操作，其他没有任何变化，代码依方法选择而变，在此不进一步考虑。\n直接三角形分解法 Crout 方法： function x = Court( A, b ) % Court 方法解线性方程组 % Input: A: 系数矩阵; b: 方程组右端项; % Output: x: 线性方程组解; n = size(A); L = zeros(n, n); U = zeros(n, n); for i = 1 : n L(i, i) = 1; end % for for k = 1 : n for j = k : n U(k, j) = A(k, j) - sum(L(k, 1 : k - 1) .* U(1 : k - 1, j)'); end % for for i = k + 1 : n L(i, k) = (A(i, k) - sum(L(i, 1 : k - 1) .* U(1 : k - 1 , k)')) / U(k, k); end % for end % for [L,U] = myLU(A); [n,m] = size(A); y(1) = b(1); for i = 2 : n for j = 1 : i - 1 b(i) = b(i) - L(i, j) * y(j); end y(i) = b(i); end % for x(n) = y(n) / U(n, n); for i = (n - 1) : -1 : 1 for j = n : -1 : i + 1 y(i) = y(i) - U(i, j) * x(j); end x(i) = y(i) / U(i, i); end % for end % function  Court 方法是三角分解法中最简单的一种，计算量会大一些，但该方法适用于任意情况的方程组。\n$L^TDL$ 分解法 $L^TDL$ 分解法适用面比较窄：必须是实对称矩阵。此时使用这种方法可以比较好的减少计算量，增加计算速度，但实际原理与 LU 分解法类似。\n若是追求比较通用的方法，LDU 分解法是 LU 分解法的优化，但整体上大同小异，在此不占用篇幅专门书写它们的算法了。\n追赶法 追赶法的适用范围也相当的窄：三对角实线性方程组。其本质就是 $LU$ 分解法在这里的运用，解这样的方程非常的迅速，需求的计算量也非常的小。\n对于追赶法有一篇比较好的文章可以参考：Thomas, L.H., Elliptic Problems in Linear Differential Equations over a Network. Watson Science Computer Laboratory Report, 1949.\n其中追赶法在国外常称为“Thomas 方法”，在热传导方程等物理方面有着非常广泛的用处。\n结尾 对于实线性方程组，通过恰当的变换，都可以得到任意精确度的数值解或者直接获得解析解，在数值处理上属于最简单的一个类型。\n在数值分析中，这些过程需要交给计算机计算，所以就需要着重考虑其中会由计算机计算产生的误差。因此诞生出了诸多的方法并不断优化，避免了 7种情况 带来的计算误差，使得数据处理更加精确可信。\n数值分析也研究了常微分方程组、函数逼近、超越方程寻根等问题。在这些问题的算法中更加体现出了数值分析的精妙逻辑与魅力，我们使用精妙的方法通过计算机去一步步逼近真实结果，以此用于实际问题中的复杂方程求解。\n这是非常有现实价值与研究价值的，之后我也会分别总结这些方面涉及到的一些算法，本次的线性方程组就是一个简单的入门。\n","id":44,"section":"post","summary":"问题 求解线性方程组 $$ \\left{ \\begin{array}{c} a_{11}x_1+a_{12}x_2+\u0026hellip;+a_{1n}x_n=b_1 \\ a_{21}x_1+a_{22}x_2+\u0026hellip;+a_{2n}x_n=b_2 \\ \u0026hellip; \\ a_{n1}x_1+a_{n2}x_2+\u0026hellip;+a_{nn}x_n=b_n \\end{array} \\right. $$ 其中方程组系数 $a_{ij}(i,j=1,2,3,\u0026hellip;,n)$ 与右端项 $b_i(i=1,2,3,\u0026hellip;,n)$ 均为实数，且 $b_1,b_2,\u0026hellip;,b_n$ 不全为零，上述方程组简记为 $$ Ax=b $$ 其中 $$ A=\\begin{bmatrix} a_{11} \u0026amp; a_{12} \u0026amp; \u0026hellip; \u0026amp; a_{1n} \\","tags":["Matlab","Math"],"title":"Matlab 实现解线性方程组的几类直接法","uri":"https://chuanbohua.github.io/post/2018-10-12-matlab-%E5%AE%9E%E7%8E%B0%E8%A7%A3%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E7%9A%84%E5%87%A0%E7%B1%BB%E7%9B%B4%E6%8E%A5%E6%96%B9%E6%B3%95/","year":"2018"},{"content":"2019.03 Update: Vol.moe 现已经提供批量下载功能。此文完结。\n原文 这个工具实际上是一个非常简单的东西，但是由于网站确实很不错，所以写在这里作为一个推荐。\n之前在寻找一些漫画资源的时候，偶然遇到了这个漫画网站：Vol.moe\n网站上有很全的漫画资源并提供下载下载，其漫画质量普遍不错。在网上漫画资源比较零碎的环境下非常方便。\nVol.moe 提供普通用户限量限速下载。初期我对漫画需求量比较大，准备一次性大量下载回头慢慢看，于是捐助成为了会员，开始一本一本漫画的下载。\n令人可惜的是网站明确指出：\n Q4: 為什麼沒有批量下載與全選推送？ A4: 本站帶寬有限，所以不鼓勵批量下載和全選推送，希望大家準備看的書才下載。如果確實需要批量，請尋找支持批量下載的下載軟體吧。\n 所以面对 One Piece 、火影忍者 、银魂 等等动辄八、九十卷的下载链接，实在是没有耐心一个一个点下去，所以用 Python 写一个工具自动下载。\nStep 1. 引入 Pack 、填写用户变量\nfrom urllib import parse from bs4 import BeautifulSoup import urllib.request import urllib.error import chardet import http.cookiejar login_url = 'https://vol.moe/login_do.php' url = \u0026quot;https://vol.moe/comic/*****.htm\u0026quot; // 爬取相应网页的链接 values = { \u0026quot;email\u0026quot;: \u0026quot;**********@gmail.com\u0026quot;, \u0026quot;passwd\u0026quot;: \u0026quot;********\u0026quot;, \u0026quot;keepalive\u0026quot;: \u0026quot;on\u0026quot;, }  Step 2. 用户身份登陆，获取 Cookies\n2018.02.10 Update - Chrome 上有很好用的 Cookies 插件，支持直接从浏览器导出 Cookies 文件。如果觉得这部分比较繁琐，可以手工登陆之后 Download 自己的 Cookies，从而省下这一步。\ndata = urllib.parse.urlencode(values).encode(encoding='UTF-8') user_agent = '*********' // 浏览器记录信息 headers = {'User-Agent': user_agent, 'Connection': 'keep-alive'} cookie_filename = 'vol_cookie.txt' // Cookies 保存文件名 cookie_aff = http.cookiejar.MozillaCookieJar(cookie_filename) handler = urllib.request.HTTPCookieProcessor(cookie_aff) opener = urllib.request.build_opener(handler) request = urllib.request.Request(login_url, data=data, headers=headers) try: response = opener.open(request) except urllib.error.URLError as e: print(e.reason) cookie_aff.save(ignore_discard=True, ignore_expires=True) for item in cookie_aff: print('Name ='+ item.name) print('Value ='+ item.value)  Step 3. 抓取用户登陆网页\nimport urllib.request, urllib.parse import http.cookiejar get_url = 'https://vol.moe/comic/10243.htm' cookie_filename = 'vol_cookie.txt' cookie_aff = http.cookiejar.MozillaCookieJar(cookie_filename) cookie_aff.load(cookie_filename, ignore_discard=True, ignore_expires=True) handler = urllib.request.HTTPCookieProcessor(cookie_aff) opener = urllib.request.build_opener(handler) # 使用cookie登陆get_url get_request = urllib.request.Request(get_url) get_response = opener.open(get_request) print(get_response.read().decode())  其实在网页登陆后，打开相应漫画下载页面 F12 拿到的就是包含所有下载链接的 html ，这个网站的链接不是 PHP 单独对话，直接筛选就很方便。\n上面抓取 html 之后筛选，search “下载 epub” 所有的 \u0026lt;a\u0026gt; 自带链接，抓出来之后就能批量下载了。\n不过很值得注意的是，Vol.moe 有如下说明：\n Q5: 下載線路速度限製及IP限製的問題。 A5: 本站帶寬有限，為防止無序無限製的下載，故已經對下載進行了速度限製、IP校驗與限製 同一IP同時下載線程不能超過3個，部分瀏覽器/工具在線程被限製後整個下載任務會失敗，遇此情況請修改設置，或使用Chrome瀏覽器。 部分瀏覽器或下載工具會使用多線程下載，將會被視為多文件同時下載，達到限製後會需要等待較長時間才會解除限製。\n 使用下载工具下载还是要控制一下线程，防止被屏蔽。Vol.moe 服务器位于北美，网站注册于 TW ，下载速度在大陆感觉还是很不稳定，不清楚跟网站审查下行流量有关系没有。\n","id":45,"section":"post","summary":"2019.03 Update: Vol.moe 现已经提供批量下载功能。此文完结。 原文 这个工具实际上是一个非常简单的东西，但是由于网站确实很不错，所以写在这里作为一个推荐。 之前在寻找","tags":["Python","ACG"],"title":"爬取 Vol.moe 的漫画资源","uri":"https://chuanbohua.github.io/post/2018-07-27-vol-moe/","year":"2018"},{"content":"前言 这学期参选了数据库系统概论这门课程，虽然最后拿到了还行的成绩，但是因为复习仓促跳过了很多知识点。\n由于 9 月要参加计算机四级(数据库)的考试，在这里整理一下复习时的笔记，准备一下计算机四级的考试。\n 选用教材：《数据库系统概论（第五版）》高等教育出版社ISBN：9787040406641\n 作为课程，涉及到的数据库知识比较基础，这里做出概要、关键点笔记和一些理解。\n 2018.10.25 Update - 数据库四级翻车了。原因是把考纲中 数据库 + 操作系统原理 复习成了 数据库 + 软件工程，考试时候完全不知道是什么，凭着大一学的一点点操作系统知识……也没有糊过去。等明年 3 月份再参加吧。\n 2019.3.3 Update - 计算机四级，就和网上说的一样，非常的水。完全没有必要专门复习数据库，只需要背一背题库就可以通过，甚至在对数据库一知半解的情况下也都可以通过。毕竟计算机四级只有选择题，而且题库一般比较固定。\n 2019.08.23 Update - 计算机四级证书，事实证明，除了混一混学校的评奖加分，没有任何用处。所以我并不推荐专门准备这个，这些时间可以用来干更多有意义的事情。\n 绪论 数据库系统概述 数据库的四个基本概念：\n 数据(data) - 描述事物的符号记录； 数据库(database, DB) - 长期储存、有组织、可共享的大量数据集合；具有 较小冗余度、较高数据独立性、易扩展性、共享性 的特点； 数据库管理系统(database management system, DBMS) - 计算机基础软件之一；提供 数据定义语言(DDL)、数据操纵语言(DML)、数据控制语言(DCL) ； 数据库系统(database system, DBS) - 储存、管理、处理、维护数据的系统；  其中数据库系统包含以下部分：\n 数据库(DB) 数据库管理系统(DBMS) 数据库应用程序(DBAP) 数据库管理员(DBA)  在不引发混淆的情况下我们称数据库系统为数据库。\n数据库发展阶段：人工管理阶段-\u0026gt;文件系统阶段-\u0026gt;数据库系统阶段。\n数据模型 数据抽象阶段：现实-\u0026gt;概念模型-\u0026gt;逻辑模型-\u0026gt;物理模型。\n概念模型例：实体-联系模型（E-R模型）：\n 实体属性：单值属性/多值属性，基属性/派生属性； 联系类型：内部联系/相互联系，一元联系/二元联系/多元联系，普通联系/递归联系；  实体相关的概念对比：\n 实体：客观存在并可以相互区别的事物； 实体属性：实体具有的某一特征； 实体型：实体 + 属性； 实体集：同一类型实体的集合；  数据模型的构成：数据结构、数据操作、数据的完整性约束；\n常见的数据模型：\n 层次模型 - ex. 树 网状模型 - ex. 图 关系模型 - ex. 表  将概念应用于表中：\n  关系 - 一个表称作一个关系\n  元组 - 行\n  属性 - 列\n  码 - 请看后详解\n  域 - 属性选区的范围\n  分量 - 元组中的一个\n  数据库系统结构 数据库系统的三个模式：\n 模式 - 逻辑模式 外模式 - 子模式/用户模式 内模式 - 存储模式  数据库系统的三级模式构成两种映像：\n 外模式/模式映像 - 逻辑独立性 模式/内模式映像 - 物理独立性  关系数据库 关系的种类：\n 基本关系：实际表 查询关系：结果表 视图关系：虚拟表  关于码：\n 候选码：可以唯一确定元组的一组属性就是一个候选码，但其真子集无法唯一确定元组 ，候选码中不止一组属性 主码：候选码中任意一组 超码：可以唯一确定元组的一组属性就是一个超码，超码中不止一组属性 外码：属性中引用的其他实体的主码   候选码是最小超码，主码是候选码的其中一个\n 关系模式 R(U, D, dom, F)：\n R：关系名 U：属性名集合 D：相应属性名集合的域 dom：属性和域的映射 F：属性间数据依赖集合  关系的完整性：\n 实体完整性：主码不能缺省或非法 参照完整性：外码不能非法 用户定义的完整性：用户定义的数据要求  关系操作：\n 集合运算符：交、并、补、差 专门的关系运算符：选择、投影、连接、除 算术比较符：大于、小于、等于、不等于 etc. 逻辑运算符：与、或、非 etc.   关系操作下有相应的 关系代数 和 关系代数表达式 ，这部分不再写在这里了，不妨去看看书。\n SQL 关系数据库标准语言 SQL 三级结构模式：文件(内模式) -\u0026gt; 表(模式) -\u0026gt; 视图(外模式)。\nSQL 实现：数据定义，数据查询，数据更新，数据操作。\nSQL 结构框架：\ninstance // 实例 { database // 数据库 { schema // 模式 { table // 表 view // 视图 index // 索引 } } }  SQL 数据定义 创建模式与删除模式\ncreate schema schema_name\ndrop schema schema_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create schema test_schame authorization auth_name; drop schema test_schame cascade;  关于 cascade \u0026amp; restricte :\n 标注 cascade 是级联操作，其操作（例如drop）会对子目录下项目同等操作；\n标注 restricte 是限制操作，其操作（例如drop）当子目录下项目非空将报错；\n 创建表与删除表\ncreate table table_name\ndrop table teble_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create table test_table ( sno char(10) unique, // 属性名 数据类型 完整性约束 sname char(10) not null, stel char(10), dno char(10), primary key(sno), // 设置 sno 为主码 foreign key(dno) references test_table2(sno), // 设置 dno 为外码，引用自 test_table2 ); drop table test_table cascade;  创建视图与删除视图\ncreate view view_name\ndrop view view_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create view test_view as select column_name // 涉及到 select 一会再说 from test_table where condition; drop view test_view;  创建索引与删除索引\ncreate unique / cluster index index_name\ndrop index index_name \u0026lt;cascade / restricte\u0026gt;\n// e.g. create unique index test_index on test_table(sno, sname); drop index test_index;  SQL 数据查询 select 语法很多，具体内容介绍在众多教程网站上也有很多。这里的笔记就是针对比较常见的 student 表进行的各类操作实例，以此复习各类 select 语法。\n// e.g. // 从 student 表中选取 sno 与 sname select sno, sname from student; // 从 student 表中选取所有 select * from student; // 从 student 表中选取 sage 并减 2015；选取 sname 并小写，输出时重命名为 NAME select sage-2015, lower(sname) NAME from student; // 从 student 表中选取 sno 的和，并计 sname 数 select sum(sno), count(sname) from student; // 从 student 表中选取 sno 并去除重复数据 select distinct sno from student; // 从 student 表中选取 dno 为 cs 的 sname select sname from student where dno = 'cs'; // 从 student 表中选取 dno 为 cs 或者 ms 的 sname select sname from studnet where dno in ('cs','ms'); // 从 student 表中选取 sname 倒数第二位为 l 的 sno select sno from student where sname like '%l_'; // 从 student 表中选取 sname 最后一位为 _ 的 sno select sno from student where sname like '%\\_' escape \\; // 从 student 表中选取 sno = 6 的sname select sname from student where (sno\u0026gt;10 or sno\u0026lt;5) and sno=6; // 从 student 表中选取 cno 为 3 的 sname 并按照 grade, sno 排序 select sname from student where cno='3' order by grade desc/asc, sno desc/asc; // student 表中不同 sname 数 select count(distinct sname) from studnet; // 从 student 表中选取 sno 与对应的平均成绩 select sno, avg(grade) from student group by sno; // 从 student 表中选取挂两科以上的学生 select sno from student where grade\u0026lt;60 group by sno having count(*)\u0026gt;2; select student.*, sc.* from student, sc where student.sno = sc.sno; // 同表连接 select first.sno, second.con from test first, test second where ~; // 异表 join select * from table1 left outer join table2 on... /right outer join on... /full outer join on... // 从 student 表中选取大于平均成绩的 sno 与 cno select sno, cno from sc x where grade \u0026gt;= (select ave(grade) from sc y where x.sno=y.sno) // 从 student 表中选取 con 有 1 的 sname select sname from student where exists (select * from sc where student.sno=sno and cno='1'); // 两层 not exists select sname from student where not exists (select * from course where not exists (select * from sc where sno=student.sno and cno=course.cno ) //course that student didnt choose ); // 两层 not exists select distict sno from sc x where not exists (select * from sc y where sno=001 and not eixsts (select * form sc z where z.sno=x.sno and z.cno=y.cno ) //course that they all chosed ); // 不同 select 的结合 select_1 union/union all select_2; select_1 intersect select_2; select_1 except select_2; // 临时表 select sno, cno from sc, (select sno, avg(grade) from sc group by sno) as avg(avg_sno, avg_grade) where sc.sno=avg.avg_sno and sc.grade\u0026gt;avg.avg_grade;  SQL 数据更新 // e.g. // 插入数据 insert into student(sno, sname) values(002, zerotwo); // 从另一个表选中数据插入 insert into student(sno, sname) select sno, sname from other_tabel; // 更新数据 update student set sage=22 where sno=002; // 选择性更新数据 update sc set grade=100 where 'ma'= (select dno from student where student.sno=sc.sno);  除此之外还有 delete 等各类操作，都是大同小异。\n数据库编程  SQL 编程技术可以有效克服 SQL 语言实现复杂应用方面的不足，提高应用系统和数据库管理系统之间的互操作性。\n SQL 编程来访问和管理数据库中数据的方式主要有：\n 嵌入式 SQL (ESQL) 过程化 SQL (PL/SQL) 存储过程和自定义函数 开放数据库互联 (ODBC) etc.  嵌入式 SQL ：\n实例：（更为完善的例子在书上 page.247）\n// e.g. exec sql begin declare section; // 声明主变量 char sno; char cno; char sname; exec sql end declare section; exec sql include sqlca; // sql通信区 int main(){ ... exec sql connect to database_1; // 连接数据库 exec sql declare v cursor for // 声明游标v，指向select的表 select... exec sql open v; for(;;){ exec sql fetch v into :sno, :cno, :sname; // 推进游标 if(sqlca.sqlcode != 0) break; ... // 可以各种操作，也可以内嵌sql语句 } exec sql close v; // 关闭游标 exec sql commit work; // 提交事务 exec sql disconnect database_1; // 关闭数据库连接 return 0; }  由于学期课程中并没有涉及太多的数据库编程部分，这边就先空下来，后来有空了再补充。\n数据库的完整性 三种数据完整性：\n实体完整性：(primary key)\n// e.g. sno char(10) primary key; // 列级定义主码 primary key(sno, cno); // 表级定义主码  参照完整性：(foreign key)\n// e.g. foreign key(sno) references student(sno) on delete/update cascade; foreign key(cno) references studnet(cno) on delete no action;  用户定义完整性：\n// e.g. sno char(10) not null; // 设置 sno 非空 cno char(10) nuique; // 设置 cno 非重复 check(sex in('mail', 'famail')); // 设置 sex ‘选项’ check(sex='famail' or sname not like'ms.%');  对数据库完整性的操作：\n完整性约束\n// e.g. sno char(3) constrant c1 \u0026lt;...\u0026gt;; // 命名约束，把设置给 sno 的完整性约束命名为 c1 alter table student add constraint c1 \u0026lt;...\u0026gt;; // 修改约束  断言\n// e.g. create assertion [assertion_name] \u0026lt;sql...\u0026gt;;  触发器\n// e.g. create trigger [trigger_name] \u0026lt;sql...\u0026gt;;  关于检查约束、断言与触发器的区别：\n  检查约束：检查是一个SQL，它确保在记录上执行操作之前满足条件；\n  断言：断言是一条SQL，它确保条件满足或停止对数据库对象执行的操作；\n  触发器：触发器是在数据库中更新，插入或删除之前或之后执行的一段SQL；\n  数据库安全性 常通过下面几种方式控制数据库安全性：\n用户识别：即最常见的‘登陆’控制。\n存取控制：自主存取控制(DAC)、强制存取控制(MAC)。\n// e.g. DAC grant select on table table_1 to user_1; // 授予权限 grant all priviliges on table student, course to user_2, user_3; // 授予全部权限 grant select on table table_1 to public; // 授予角色权限 grant update(sno) on table table_1 to user_1; with grant option; // 授予可再授权权限 revoke select on table table_1 from user_1 cascade/restrict; // 收回可再授权权限需要cascade  // e.g. MAC // 包含 主体：许可证级别；客体：密级，并满足： * 仅当主体的许可证级别大于或等于客体的密级时，该主体才能读相应的客体； * 仅当主体的许可证级别小于或等于客体的密级时，该主体才能写相应的客体；  视图：前面已大致介绍；\n审计：用户级审计 \u0026amp; 系统级审计；\n加密：常见；\n关系数据理论  关系数据理论涉及了不少逻辑相关，学习的时候觉得很奇妙，尤其是其中的公理系统和以之推出来的最小依赖集求法；我的笔记中只记下了便于复习的提纲，所以较细致的部分还需要参考书上内容。\n 关系模式 R(U, D, DOM, F)\n R：关系名 U：组成该关系的属性名集合 D：属性组U中属性所来自的域 DOM：属性向域的映象集合 F：属性间数据的依赖关系集合  依赖关系 （重要）\n 函数依赖（FD）： 关系 x, y; 若 x1 != x2 能推出 y1 != y2，则称 y 函数依赖于 x。  平凡依赖 / 非平凡依赖； 完全函数依赖（F）/ 部分函数依赖（P）； 传递函数依赖 / 直接依赖；   多值依赖（MVD）： R(U)上关系r，给定的一对（x，z）值，有一组Y的值，这组值仅仅决定于x值而与z值无关，记x-\u0026gt;-\u0026gt;y;  平凡依赖 / 非平凡依赖；    码（复习）\n 候选码：可以唯一确定元组的一组属性就是一个候选码，但其真子集无法唯一确定元组 ，候选码中不止一组属性 主码：候选码中任意一组 超码：可以唯一确定元组的一组属性就是一个超码，超码中不止一组属性 外码：属性中引用的其他实体的主码   候选码是最小超码，主码是候选码的其中一个\n 范式（重要）\n 1NF：所有属性不可分解； 2NF：非主属性完全函数依赖于主码 3NF：非主属性既不部分依赖于码也不传递依赖于码（仅要求最外层是非主属性）； BCNF：每一个决定属性因素都包含码：  所有非主属性对每一个码都是完全函数依赖； 所有的主属性对每一个不包含它的码，也是完全函数依赖； 没有任何属性完全函数依赖于非码的任何一组属性；   4NF：每个非平凡多值依赖 X→→Y（Y不属于X），X都含有码：  不允许有非平凡且非函数依赖的多值依赖 允许的非平凡多值依赖是函数依赖    范式推导：\n 1NF -\u0026gt; 2NF：消除非主属性对码的部分函数依赖 2NF -\u0026gt; 3NF：消除非主属性对码的传递函数依赖 3NF -\u0026gt; BCNf：消除主属性对码的部分和传递函数依赖，此时已经实现了函数依赖范围内的彻底分解 BCDF -\u0026gt; 4NF：消除非平凡且非函数依赖的多值依赖  数据依赖的公理系统\n 逻辑蕴含：对于满足一组函数依赖 F 的关系模式 R\u0026lt;U,F\u0026gt;，其任何一个关系 r 若函数依赖 X→Y 都成立,（即 r 中任意两元组 t, s,若 t=s,则 t[Y]=s[Y]）,则称 F 逻辑蕴含 X→Y; Armstrong公理系统：  自反律： y in x in u =\u0026gt; x-\u0026gt;y in F 增广律： x-\u0026gt;y z in u =\u0026gt; xz-\u0026gt;yz 传递律： x-\u0026gt;y y-\u0026gt;z =\u0026gt; x-\u0026gt;z   推理规则  合并规则： x-\u0026gt;y x-\u0026gt;z =\u0026gt; x-\u0026gt;yz 伪传递规则： x-\u0026gt;y wy-\u0026gt;z =\u0026gt; xw-\u0026gt;z 分解规则： x-\u0026gt;y z in y =\u0026gt; x-\u0026gt;z   函数的最小依赖集：  F 中任一函数依赖的右部仅含有一个属性 F 中不存在这样的函数依赖 X→A，使得 F 与 F-{X→A} 相等（即 F 中函数依赖不能由其中的其他函数依赖导出） F 中不存在这样的函数依赖 X→A，X 中存在真子集 Z 使得 F-{X→A}∪{Z→A} 与 F 等价（即 F 中各函数左侧都是最小属性集中的）   求候选码准则：  准则1：如果属性 A 只在 F 中各个函数依赖的左端出现，则 A 必是码中的属性 准则2：如果属性 A 只在 F 中各个函数依赖的右端出现，则 A 必不是码中的属性 准则3：如果 A 不在F的各个函数依赖中出现，则 A 必不是码中的属性   求候选码方法：  根据准则3：把不在 F 中出现的各个函数依赖中出现的属性去掉，因为这些属性一般对模型没什么意义 根据准则1：确定码中必须有的属性集（设为 M ） 根据准则2：去掉码中肯定没有的属性 确定余下的属性集（设为 W ） 从属性 M 开始，令 K=M，如果 KF +=U，K 就是候选码。否则从W选择属性加入到 K 中，直到 KF +=U，K 就是候选码（注意可能有多个候选码）    // e.g. 求函数最小依赖集实例 F = { A → BC ， B → AC ， C → A }，求 Fmin { [step.1] F= { A → B ， A → C ， B → A，B → C，C → A } [step.2] G=F-{ A → B } AG += AC，不包含 B，所以 A → B 保留 G=F-{ A → C } AG += ABC，包含 C，所以 A → C 删除，令 F=G ， F={A → B ， B → A，B → C， C → A} G=F-{ B → A }， BG += BAC，包含A，所以 B → A 删除，令F=G，F={A → B，BC， C → A} G=F-{ B → C }， BG +=B，不包含 C，所以 B → C 保留 G=F-{ C → A }， CG += C，不包含 A，所以 C → A 保留 [step.3] F={ A → B ，B → C ，C → A } }  数据库设计  需求分析阶段：了解分析用户需求 (数据 and 处理)； 概念结构设计：综合归纳用户需求形成概念模型，形成概念模式 (E-R)； 逻辑结构设计：概念模型转化为数据模型并优化，形成逻辑模式，进一步优化为外模式； 物理结构设计：选定储存结构和存取方法，形成内模式； 数据库实施：建立数据库、编制程序、数据入库、调试运行； 数据库运行与维护：及时评价、调整、修改；  数据库恢复 事务：是用户定义的一个 数据库操作序列 ，这些操作要么都做，要么都不做，是一个不可分割的工作单位，恢复和并发控制的基本单位；\n事务的性质：\n 原子性：要么全做要么不做； 一致性：要么写入正确的结果，要么不写入； 隔离性：详看并发控制（关于交叉进行）； 持续性：commit之后修改是持久的；  故障：\n 事务故障：逻辑故障、完整性约束下的中止事务； 系统故障：停电、死机； 介质故障：储存盘损坏； 病毒：病毒攻击；  备份：\n 动态备份 / 静态备份； 海量备份 / 增量备份；  恢复策略：\n 事务故障：反向扫描log，按步骤恢复至故障事务开始的标记； 系统故障：  log中有记录 commit：redo，正向扫描； log中无记录 commit：undo，操作同事务故障；   介质故障：恢复数据库并常规使用 log 恢复；  检查点技术：checkpoints文件记录当时所有事务清单和最近的log的地址，redo文件记录检查点位置，可以提高故障恢复效率；\n 记录：日志写入-\u0026gt;检查点写入-\u0026gt;数据写入-\u0026gt;重新开始文件写入； 恢复：重新开始文件找到最后检查点-\u0026gt;事务清单上的事务进行审计-\u0026gt;正向扫描log，无 commit：undo，有 commit：redo；  并发控制 面对的三种问题：丢失修改、不可重复读、读取脏数据；\n事务执行：事务串行执行、交叉并发执行(单机)、同时并发执行(多机)；\n技术：排他锁(X) read \u0026amp; write \u0026amp; 共享锁(S) read only；\n封锁协议：\n 一级封锁协议：修改前加上X锁，可以防止丢失修改，不能保证可重复读和脏数据； 二级封锁协议：一级封锁基础上，读取前加上S锁（到读取结束），可以防止丢失修改和脏数据，不能保证可重复读； 三级封锁协议：一级封锁基础上，读取前加上S锁（直到事务结束），可以防止三种问题；  活锁 \u0026amp; 死锁：\n 活锁：一个事务持续等待，没有逻辑上锁死； 死锁：逻辑上锁死；预防或诊断解除（超时法、事务等待图法）；  可串行化调度：多个事务的并发执行是正确的，当且仅当其结果与按某一次序串行地执行这些事务时的结果相同。可串行化调度当然也保持数据库的一致状态；\n可串行性：是并发事务正确调度的准则。在RDBMS中，作为并发控制的正确性准则。一个给定的并发调度，当且仅当它是可串行化的，才认为是正确调度；\n两段锁协议（可串行化的充分条件，但并不保证避免死锁）：\n 第一阶段：获得封锁（扩展阶段）； 第二阶段：释放封锁（收缩阶段）；  粒度：封锁对象的大小，区别为逻辑单元和物理单元；\n多粒度封锁：同时支持多种封锁粒度；\n多粒度封锁协议：\n 允许对多粒度树中的每个节点独立加锁； 节点加锁意味着所有后裔加锁； 显示封锁 / 隐式封锁（因上一条引起）；   多粒度封锁效率低，因为它需要检查上下所有节点的加锁情况\n 意向锁（如果对一个结点加意向锁，则说明该结点的下层结点正在被加锁，对任一结点加基本锁，必须先对它的上层结点加意向锁）：\n 意向共享锁（IS）：后裔拟加S锁； 意向排他锁（IX）：后裔拟加X锁； 共享意向排他锁（SIX）：S+IX的效果（意思是要读整个表并且可能更新一些数据）；   申请封锁自上而下，释放封锁自下而上。\n 关系查询处理和查询优化 查询分析：查询语句的语义分析；\n查询检查：安全性检查 \u0026amp; 完整性检查；\n查询优化：\n 代数优化：关系代数表达式的优化；此处内容较多，详看书本 page.281 物理优化：  基于规则的启发式优化  选择操作  小关系：全表扫描 主码相关：主码索引 非主属性：比例较小索引，较大全表 非等值或者范围：同上 OR：一般全表   连接操作  已按照连接属性排序：排序-合并方法 连接属性上有索引：索引连接法 其中一个表比较小：HASH join方法     基于代价估算的优化  代价估计：  全表B块，全表扫描cost=B 全表B块，选择条件码值对应，平均搜索cost=B/2       基于代价估计的优化  结尾 对照书上看了一看，发现学的是真的粗糙，像数据库编程、数据库安全都很粗略地看了过去，学习过程中也没有实际做出什么东西来，这份笔记涉及的部分也差了很多，只是为了通过期末考试。\n因为学期的课程讲到关系查询就结束了，所以之后的内容如管理系统、大数据部分，在课程和复习中只大致浏览过。\n如果未来有用到数据库的内容，那么再复习并更新这篇文章。\n","id":46,"section":"post","summary":"前言 这学期参选了数据库系统概论这门课程，虽然最后拿到了还行的成绩，但是因为复习仓促跳过了很多知识点。 由于 9 月要参加计算机四级(数据库)的考试","tags":["SQL","Database"],"title":"数据库系统概论复习笔记","uri":"https://chuanbohua.github.io/post/2018-07-13-database/","year":"2018"},{"content":"Linux 真的是越用越喜欢，或许过一阵子会转战 Linux，在此之前我先把自己 Win 平台上常用的软件列出来，以作备份，也供未来参考。\n由于软件的替换与不断地更新，移动硬盘中各种软件安装包备份删来删去。其实大部分软件都没有太大的必要去备份其安装包，不如直接记录使用的软件，在未来安装新系统或者系统恢复的时候有个参考，直接从相应的官方网站下载也并不会耗费太多的时间。\n同时也可以理清楚我使用 Windows 的一些理念，也作软件推荐使用。\n基本类型：大多为实现使用 Windows 所需要的基本功能的软件\n BandiZip：非常绿色的解压缩软件，“干净”的软件是我最大的需求； Thunder 5：早期的迅雷版本，基本的功能已经足够我的使用。并且早期版本可以避免资源审查、没有限速、没有广告； ScreenToGif：录屏并生成 Gif 图。在聊天向别人展示东西时 Gif 往往比截图好用。该工具只有不到 5M 而且纯净； MEGAsync：个人认为顶级云盘之一，要不是墙内一般人没办法使用，百度网盘早倒闭好几次了； uTorrent：校内 PT 资源下载指定软件；  2019.11 Update - BanditZip 也开始带广告了，我的青春结束了。之后安装 BandiZip 要选择 19.07 之前的历史版本，并在安装之后将其断网。这样就可以避免它的广告了。\nDaily\n Telegram Wunderlist：2019 年被 Windows 收购为 Windows TO-DO 内置在 Windows 1908 版本中。除去同步问题外还是挺好用的； Mailbird：由于是收费软件，后来改成了用 Windows 自带的 Mail 查看邮件； Internet Download Manager：同样也是收费软件，所以后来弃用了； ShadowsocksR AO：日程管理软件一般用一个就够了，AO 比较的重，个人不是很喜欢； Typora：主力的文字书写工具，也是我最喜欢的； WinEdt Sumatra PDF Anki Send Anywhere：终于找到了一个比较好的 iOS 与 Windows 端互传文件的解决方案。Send Anywhere 在同局域网少量文件的情况下互传很快速和方便； Pop Player：传说是最好的本地播放器，不过我的本地播放的需求不大，所以目前并没有很多的体验。但是新版本内嵌了广告，所以还是要下载历史版本并断网禁止更新才可以； Zotero：开源好用的文献管理工具；  Design\n Adobe Photoshop CC 2017 Adobe Illustrator CC 2017 Adobe Premiere Pro 2017 Adobe After Effects CC 2017 Adobe Media Encoder CC 2017 FontView OK：Windows 端快速查看所安装字体的很好用的一个工具； Format Factory Waifu2x-Caffe Sai  2020.01 Update - Adobe 的软件我还是很喜欢追更新的。虽然由于价格问题我确实没有买正版，但是我会避免商用的。另外格式工厂名声已臭，不如都用 Media Encoder。\nCoding\n Jetbrains WebStorm Jetbrains Pycharm Intellij IDEA Eclipse Java Oxygen Visual Studio 2015 Visual Studio Code：自从改到 Linux 端开发，我的 Windows 端就只安装 VSC 了； Matlab R2014a：这软件实在是太大了，安装起来很麻烦而且费时间，所以如果不是实验必要，我一般不会使用 Matlab； SQL Server 2014 Management Studio My SQL Workbench 6.3 CE  OS\n Git Bash MobaXterm Terminus：一个开源的 SSH 和 Shell 工具，做的非常漂亮。没错，这就是我选择它的原因，半透明的亚克力效果非常漂亮。VSC 也可以安装相应的皮肤，不过稳定性不太好； VMware Workstation Pro Windows Sandbox：1908 开放的内置沙盒功能确实方便了很多，之前都是要在 VMware 上专门安装一个 Windows 虚拟机来跑一些奇奇怪怪的东西。使用 Sandbox 就省去了安装虚拟机的麻烦，而且运行性能也还不错； OpenHardWare Monitor：监控系统各种数据的工具，偶尔电脑遇到点毛病，怀疑是硬件问题的时候就可以用这个软件来监控一下系统底层的运行状态； Rufus CPU_Z  Games\n Xpadder 5.7：为数不多的手柄键盘映射软件，从此之后键鼠游戏也可以用手柄玩了； iToolsAVM：iTools 在我的电脑上经常出问题，后来发现 PP 助手还算好用，不是那么流氓，所以之后偏向于使用 PP 助手了； Osu! Logitech G Hub：买了罗技的带几个宏按键的鼠标，就需要安装 G Hub 来设置映射；把鼠标上两个按键设置成 Ctrl + Win + Left 和 Ctrl + Win + Right 并启动虚拟屏幕会非常方便，简直生产力大增；  2019.11 Update - 买了 Steam 手柄之后了解到 Steam 给它的手柄提供了非常强大的自定义工具，真正现了我用一个手柄玩任何游戏的梦想；\n2020.02 Update - 今年才发现 PP 助手倒了，但是对于我来说，无法连接网络的 PP 助手变成了一个很强大的本地 iOS 设备管理工具。没有网络 PP 助手变得非常纯净，恰好满足我的需求。还是要对 PP 助手开发者们致以感谢；\n","id":47,"section":"post","summary":"Linux 真的是越用越喜欢，或许过一阵子会转战 Linux，在此之前我先把自己 Win 平台上常用的软件列出来，以作备份，也供未来参考。 由于软件的替换与不断地","tags":["Windows"],"title":"Windows 常用软件记录","uri":"https://chuanbohua.github.io/post/2018-05-05-windows-app/","year":"2018"},{"content":"我接触 Photoshop (PS) 大概已经一年了，在此期间断断续续地学了一些东西，也教了一些身边的朋友去使用 PS。为了方便别人和自己，之前写过一些教程，不过效果并不是很好，因为 PS 使用中的知识大量且琐碎，很难在短时间都掌握下来。\n所以与其细致的手把手交别人怎么用某一个工具，不如记录一些我在使用 PS 中的一些理解。我相信这些理解是较为通用的，在更深层次地学习 PS 的过程中或许能有帮助。\n关于软件\n官网下载：如果没有购买许可证有 7 天试用。\n关于平面设计\n 平面设计（Graphic Design），又称图形设计：平面设计师可能会利用字体排印、视觉艺术、版面（page layout）等方面的专业技巧，来达成创作计划的目的。平面设计通常可指制作（设计）时的过程，以及最后完成的作品。 —— Wikipedia\n Photoshop 就是上述所提到的利用专业技巧的工具。有一句被提到无数次的话：Photoshop 的水平高并不代表平面设计的水平高，毕竟工具是工具、设计是设计。\n这句话固然有道理，但是 PS 作为实现设计思想的关键工具，与设计水平形成短板效应。或许一个人有很好的点子，但是没有能力实现；也可能空有 PS 使用水平，做出的东西很难让人欣赏。\n虽然上面提到的两种情况都是极端的情况，但是这里想说的是想要快速提高 PS 使用水平这没有错误，不要被各种劝退学习 PS 的人影响。保持谦虚，不断学习。\n关于审美\n每个人审美各有不同，求同存异。\n关于教程\nPhotoshop 应用很广泛，在网上各处能搜索到 PS 教程。这些教程中偏爱全面、充实，其中的教程视频动辄十几小时长度。能坚持学习完，自然能学到很多东西。\n除此之外的学习途径有目的导向的实践学习方法。在已经了解基础的 PS 工具的基础上，针对一次次项目的具体需求，搜索相关的方法去实现效果。这样的过程时间短，印象深，可以举一反三掌握更多方法。\n两种学习途径各有优劣。面对大型的教程往往不容易坚持下去，而短时间大量的学习容易遗忘；通过各种实践学习到的 PS 知识零散，难以应对比较综合的要求。\n最重要的还是依照自己的习惯来，选择方法坚持学下去才是关键。\nPhotoshop 的层概念 Photoshop 的层概念贯穿全部内容，理解层是大多 PS 学习的第一步，而初学 PS 遇到的不少问题也和层有关。\n善于管理和理解层可以实现很多效果，同时也可以使 PS 更加高效。\n经常涉及的层有：画布、图层、蒙版和通道。\n画布 在创建新 PS 项目时候，我们在项目信息选择的大小即是画布大小。\n画布可以理解为操作者所能看到的范围。超出画布范围即超出查看范围，操作者无法看到其内容。\n画布有这些机制：\n  超过画布范围的图像部分不显示，导出时也不再导出该部分；\n  图层移动到画布外的部分不会被删除，可以重新移动回画布范围内，这点和 iOS App Procrate 有异；\n  可以针对画布范围外的图像进行操作（如画笔），因为画笔等操作是针对图层进行的操作，画布仅为显示的部分；\n想象一下，虽然你看不到画布范围外的内容，但是你拿笔刷的样子非常的帅，甚至可以甩到视野之外。\n  部分操作仅在画布范围内有效（如 Alt + Delete 填充操作），如果操作的图层有在画布外的部分，那么那一部分则不会被填充；\n  一些操作会指明操作对象，如：翻转画布，翻转图层等等。其中值得注意的是，裁剪操作会操作到画布，注意要谨慎使用。\n图层 图层概念基础且重要，因为我们的所有操作都是在相应的图层进行的。\n图层可以理解为我们将一层一层透明的纸叠在一起，它们之间互不干扰：我们可以在第一层画画、第二层写字、第三层粘贴 Logo。这些层相互分离，我们可以自由挪动每一层，改变其相对其他层的位置。我们也可以自由对第一层涂色而不用担心沾到第二层上。同时，上层的图层可以遮挡下层图层，这一点也很好理解。\n图层的方便和好处是不言而喻的。除非你是单图层绘图的神仙，请在合理的情况下多分层并善用“打组”ctrl + g，高效组织图层是优秀 PS 使用者的体现。\nPS 初学者可能会面临经常选错图层和未选中图层的问题：PS 中绝大多数操作都需要选中你要操作的图层，否则无法进行。而有时候选择错误的图层进行操作会产生很多的麻烦。所以，在初学 PS 的时候，每次操作留心一下当前所选中的图层。\n图层有如下几种类型：\n 背景图层：创建 PS 项目时在最底层的图层就是一个背景图层，背景图层不可以调节图层顺序，永远在最下边，不可以调节不透明度和加图层样式，以及蒙版。可以使用画笔，渐变，图章和修饰工具。 普通图层：外部导入图片默认为普通图层，也可以通过其他部分图层栅格化操作变成普通图层，可以进行一切操作。 调整图层：可以不破坏原图的情况下，对图像进行色相、色阶、曲线等操作。调整图层的好处非常多，比如可以逆向修改。 填充图层：填充图层也是一种带蒙版的图层。内容为纯色、渐变、和图案，可以转换成调整层，可以通过编辑蒙版，制作融合效果。 文字图层：通过文字工具，可以创建。文字层不可以进行滤镜，图层样式等的操作。 形状图层：可以通过形状工具和路径工具来创建，内容被保存在它的蒙版中。 智能对像：智能对像实际上是一个指向其它 PHOTOSHOP 的一个指针，当我们更新源文件时，这种变化会自动反应到当前文件中。  关于图层栅格化：很多操作不能在一些图层操作，比如笔刷刷文字图层是不被允许的，但是我们可以通过栅格化将文字图层转化为普通图层。但是因此产生的问题是，我们不再能用文字工具修改该图层上的文字。\n图层栅格化是一种“熵增”性质的操作，在使用中慢慢理解。\n蒙版 蒙版其实可以理解为特殊的图层，其目的在于遮盖。\n蒙版很重要也很方便，在开始阶段不太好理解，不过网上已经有很多比较完善的蒙版介绍了，这里就是一个较为清楚的例子。\n总而言之，使用蒙版只需要牢记黑色遮挡、白色显示就行了。多加练习。\n通道 将一个图层按照三原色拆分为三个图层，这三个图层即通道（当然，通道还有其他的拆分规则）。其本质依然是图层。对每一个通道层的操作也会反应到原合成图层上面。\n通道经常被用于抠图、人像调整、色彩调整上，因为在特定的通道层可以针对一种组成颜色进行操作。\nPhotoshop 机制 “机制”即在 PS 中很通用的部分。在对 PS 工具的了解和熟悉过程中，我们应该会发现这些工具中有不少相似的部分，这些部分效果不同但在一些方面有着异曲同工，这里姑且叫它是 PS 的一些“机制”。\n了解机制可以很好的举一反三。之后拿到一个新的工具，可以很快的熟练它的使用方法。\n  笔刷：PS 中很多工具都是笔刷形式进行操作的（比如画笔、仿制图章、模糊、锐化等等）。调整笔刷的大小、硬度、形状、材质、浓度、透明度，都可以与相应的工具效果进行叠加。\n如：笔刷硬度调小，不仅画笔画出来边缘会更分散，这时候使用仿制图章也会在边缘部分浓度更低、使用模糊的时候边缘的模糊度也会变小。\n笔刷的材质也可以叠加到各种操作中，实现更加方便的修改。\n  确定机制：PS 中很多操作有“确定”这一步（比如导入图片、变换图层），即在上方控制栏中点确定或取消之后，才能进行其他操作。所以如果有时候你发现所有操作都没有反应，这时候可以查看是不是有需要确定的变换尚未点击确定。\n  边框与填充颜色设置：PS 中很多创建的对象都可以调整边缘颜色和填充颜色（比如创建的矩形），这方面与 Office Powerpoint 很相似。\n  不可逆向操作：PS 中的操作在进行之后会即刻保存。比如，当你把一张图片色彩平衡中红色增加25%（色彩平衡面板打开时各参数都在0的位置），确定之后再次进入色彩平衡调节面板，此时各项参数依然在0的位置。如果此时进行红色减少25%的操作，此时得到的图片红色会低于最初状态。\n不可逆向操作也会影响撤回，即：撤回 -\u0026gt; 撤回 = 不撤回（无法递归撤回）。如果要撤回多个步骤，可以使用历史操作功能。\n  Photoshop 原则 “原则”这个词太大了，这里其实是我认为在使用 PS 过程中比较好的习惯：\n  保护原素材的原则：在 PS 的操作中，要尽可能的保护原素材。之前提到的很多操作，如：多复制重要图层作为备份 、不要用橡皮擦而是尽可能使用蒙版 、不要裁剪原素材而是使用复制选区的方法等等都是为了保护原素材。\n这样的好处也是不言而喻的，不仅防止误操作而无法复原，也减少之后重新需要之前的素材的导入操作。\n  分块实现的原则：在 PS 做项目中，每一部分要分块实现，这点和变成的模块和函数一样。例如，如果要把作品风格化，就统一对所有图层操作，中间不做其他部分的工作，在完成这一部分工作之后进行一次备份，之后再进行其他的操作。\n同时也可以进行不同的分支，毕竟甲方的需求往往是多方的，有时需要制作多版本供其选择。\n  自顶向下的工作原则 或者 自底向上的工作原则：这点和写程序很像。以制作一份海报为例，自顶向下即先在海报上面划分好每一部分的工作区，然后分别实现；自底向上即先做好各个元素，然后整体拼合，完成一份海报。\n两种方法各有优缺点，但整体上要保证一个清晰的思路，否则在制作的过程中容易做很多无用功。\n  Photoshop 快捷键 最初我学习 PS 的时候认为快捷键是无关紧要的，无非是提升一些效率。但是在我掌握了一些快捷键之后，体会到快捷键能给 PS 使用者带来的不止效率上的提升。\n一个人的耐心和精力是有限的，在使用 PS 制作作品的时候会被慢慢消耗。比如：在使用工具、调整图层等常用操作的过程中一次次地手动选用工具，不仅思路容易被打断，耐心会很快被消耗。\n使用快捷键可以避免一些讨厌的寻找、切换工具的动作，省下的耐心可以做更多的事。\n在学习 PS 初觉得比较麻烦的事情（比如添加蒙版去掉图片的一部分），到后来很简单的操作就可以完成（加上蒙版，alt + delete 填充黑色，B 调出笔刷，使用 [] 调整笔刷大小，alt + 滚轮 滑动控制缩放，空格拖动画板很快就会完成）。\n所以，掌握部分快捷键在战略上是很有价值的。记忆的过程也要兼顾实践，几次重复使用就可以记下来一个快捷键。\n开始练习 实际操作是很快的掌握、理解一个工具的方法。在有最基本的技能的时候就可以开始做一些练习。下面是当时我着重的几个找练习的方法。\n找好玩的短教程 短教程可以很快的实现，不用担心中间被打断。通过一些短教程的学习，未来想实现一个效果时，可以通过之前学到的方法配合来实现，从而可以做出更多的效果。这个过程类似于记忆法里面的分块。\n短教程自然强调教程要短一些，如果是视频，20分钟以内，几分钟最好，实现一个小功能。太长的教程容易遗忘，边看边记笔记又太麻烦，干脆找一些比较短的教程，看完能做的下来，也不必来回重复看视频。\n几个常用地址：\nBilibili 搜索 PS - 量比较大，总能找到比较感兴趣的；\nDoyoudo - 教程质量有保证，种类比较多，有创意；\n模仿其他人的作品 能用 PS 实现各种功能后，就可以暂时脱离教程了，开始自己摸索。当然，也可以跳过看教程的部分，直接开始模仿制作，这个过程中肯定有很多自己不会实现的东西，这时候再找相关的教程，一点点学习、突破。\n这时候就找一些比较高质量的平面设计作品：海报、传单、网页等等自己去做一做。巩固 PS 的基础技术，还能在模仿中了解到一些优秀作品的制作理念，从中学到一些设计方法，以备后用。\n大一这段时间在学校学生会做一些关于设计海报、传单的工作，在这个过程中搜集到了各类优秀作品，我做出的东西也借鉴了其中的很多东西。\n自己瞎做东西 模仿腻了，就可以自己做自己想做的\n 去汉化组嵌字或者修图，有 Dead Line 生产力加成； 最近听到了一首比较喜欢的歌，拿 PS 给它做一张歌词海报、宣传图片，给别人推荐； 在各种论坛里面水来水去会用到一些表情包，自己会去做一些来用。 周围有许多海报征集活动，时间比较充裕了就回去做一做，作品被选中的成就感也是一种动力。  练习部分的三个阶段是互相参杂的：在模仿和自己自由做东西中发现不会实现的就去搜教程；学习教程中出现了自己的点子就去做一做试试；教程中比较优秀的作品，在看完教程之后自己模仿着做出来等等。在这三个过程的重复中 PS 技术慢慢就提升了。\n在具有一定的 PS 技术之后，平面设计能力的重要性就凸显出来了。\n平面设计涉及字体、排版、配色等几大块，单独一块可能都能拿出来写书，毕竟平面设计确实是作为专业可供选择的。在不断自己学习的过程中，有时间有精力看一些平面设计的专业教程是很有好处的。\n","id":48,"section":"post","summary":"我接触 Photoshop (PS) 大概已经一年了，在此期间断断续续地学了一些东西，也教了一些身边的朋友去使用 PS。为了方便别人和自己，之前写过一些教程，不过效果并不","tags":["Design"],"title":"关于 Photoshop 的学习","uri":"https://chuanbohua.github.io/post/2018-04-03-photoshop/","year":"2018"},{"content":"开了个新坑\n引擎的选择 2D 和 3D 的选择 游戏种类的选择 Broad Game 就是打算迁移《山屋惊魂》这个桌游。\n其实在我学过 Unity 之后就冷静下来了，觉得要不要先挑一个比较简单的桌游做一做，比如说《魔城马车》。毕竟《山屋惊魂》的量也太大了，本体框架也难搭。\n关于联机的考虑 之后要干的一些主要的事情 设计游戏的交互逻辑 设计游戏的 UI 和美术 设计游戏运行框架 Unity 实现 Demo 设计联机交互 ","id":49,"section":"post","summary":"开了个新坑 引擎的选择 2D 和 3D 的选择 游戏种类的选择 Broad Game 就是打算迁移《山屋惊魂》这个桌游。 其实在我学过 Unity 之后就冷静下来了，觉得要不要先挑一个比较简","tags":null,"title":"","uri":"https://chuanbohua.github.io/post/2020-06-18-game/","year":"0001"}],"tags":[{"title":"ACG","uri":"https://chuanbohua.github.io/tags/acg/"},{"title":"Database","uri":"https://chuanbohua.github.io/tags/database/"},{"title":"Design","uri":"https://chuanbohua.github.io/tags/design/"},{"title":"Javascript","uri":"https://chuanbohua.github.io/tags/javascript/"},{"title":"Life","uri":"https://chuanbohua.github.io/tags/life/"},{"title":"Linux","uri":"https://chuanbohua.github.io/tags/linux/"},{"title":"Math","uri":"https://chuanbohua.github.io/tags/math/"},{"title":"Matlab","uri":"https://chuanbohua.github.io/tags/matlab/"},{"title":"ML","uri":"https://chuanbohua.github.io/tags/ml/"},{"title":"Music","uri":"https://chuanbohua.github.io/tags/music/"},{"title":"Novel","uri":"https://chuanbohua.github.io/tags/novel/"},{"title":"PC","uri":"https://chuanbohua.github.io/tags/pc/"},{"title":"Python","uri":"https://chuanbohua.github.io/tags/python/"},{"title":"Research","uri":"https://chuanbohua.github.io/tags/research/"},{"title":"SQL","uri":"https://chuanbohua.github.io/tags/sql/"},{"title":"Windows","uri":"https://chuanbohua.github.io/tags/windows/"}]}